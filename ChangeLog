2001-10-14  Alain Magloire

	The code for IMAP, is a pain, the rewrite should clean all those
	hacks.  Something to remember for the mailbox2 is to do some
	smart caching, the current buffered stream is not good enough.

	* configure.in: VERSION is set to 0.0.9a for the alpha.
	* frm/frm.c: Protype for usage(). get_personal() should use
	const char *.
	* mail/mail.c (main): Use mailbox_scan() instead of
	mailbox_messages_count () it is faster for IMAP.

	* mailbox/mbx_imap.c(imap_get_message0): Remove the
	stream_setbufsiz() it is no longer used.
	(imap_message_readline imap_body_readline):
	Bug fix, readline will only consume up to '\n' even though the
	buffer is bigger.  So we have to adjust the offset/lines/size
	to reflect what we consume.  This is not very good for example
	doing:
	{
	   off_t offset = 14;
	   char buffer[512];
	   stream_readline (stream, buffer, sizeof buffer, offset, NULL);
	   ...
	}
	Will send to the impap server.
	C: g445 FETCH 4 BODY.PEEK[2]<0.2048>
        S: * 4 FETCH (BODY[2]<0> {739}
	S: g445 OK FETCH completed

	This is waste since the first line is only 37 bytes.  We will
	have to come up on the second API with some smart caching.

	* mailbox/memory_stream.c (_memory_write): Nasty bug
	was not updating the stream size.
	* mailbox/stream.c(stream_readline): Take care of known
	case where the buflen is 0 or 1.

2001-10-14  Alain Magloire

	The code for property.c has been changed for a more simple approach,
	it is the same approach as mail/util.c(environment) settings.
	The old code was simply overkill, property_t was seldomly used,
	if at all, no need for heavy hash table and all that jazz.

	* mailbox/property.c:  New code, the same as mail/util.c environment.
	* mailbox/mbx_mbox.c (_mbx_init): Remove property_add_defaults() etc ..
	no longer in use in the initialisation code.
	* mailbox/mbx_imap.c: Likewised
	* mailbox/mbx_pop.c: Likewised
	* mailbox/mbx_mh.c: Likewised
	* mailbox/header.c: Removed property code.
	* mailbox/body.c: Removed property code.
	* mailbox/message.c: Removed property code.
	* mailbox/filter.c: Changed the code according to the new property_t.
	* mailbox/filter_rfc822.c: Changed the code according to the new
	property_t structure.
	* include/mailutils/header.h: Removed property.
	* include/mailutils/body.h: Removed property.
	* include/mailutils/message.h: Removed property.
	* include/mailutils/property.h: Removed property_add_defaults()
	property_set_valued () takes one more argument for overwrite.
	* mailbox/include/header0.hy: Removed property field.
	* mailbox/include/body0.hy: Removed property field.
	* mailbox/include/message0.hy: Removed property field.
	* mailbox/mailbox.c(mailbox_get_property mailbox_set_property):
	Changed Property code.
	* mailbox/mailer.c(mailer_set_property mailer_get_property):
	Changed Property code.

	* mailbox/folder_imap.c (imap_search imap_expunge imap_status): Stubs
	SEARCH is not implemented yet, STATUS neither and EXPUNGE is not used.

	* mailbox/list.c: Renamed variable index to indx to shutup
	gcc whos confusing with index() when warning level was high.
	* mailbox/md5-rsa.c: Likewised.

	* mailbox/mailbox.c (mailbox_get_debug mailbox_set_debug):
	The debug object was being set on the folder not the mailbox.

	* mailbox/mbx_imap.c (imap_messages_count): Attempt to reconnect
	if the connection timeout.  Is this wise?
	(imap_scan0): Moved gut of imap_scan() code here.
	(imap_scan): Stub calling imap_scan0() with notification enable.
	(imap_expunge): After CLOSE, call imap_scan0() wiht notification
	disable.

	Memory leak in parse822, this was a real pain to trace, because
	of the recursive nature of the algorithm.  Sam should buy me
	a beer for this.

	* mailbox/parse822.c: Used more assert to catch errors.
	(parse822_group): phrase was not free() in case of failure.
	(parse822_mail_box): Dead "else if" branch removed and free phrase.
	(parse822_route): accumulator was not being freed.
	(parse822_local_part): Moved down st_free(more).
	(parse822_domain): Moved down st_free(more).

2001-10-14 Sergey Poznyakoff

	Small fixes:

	* frm/frm.c: Do not output extra newline when running with
	--field option.
	* mail/reply.c: Do not prefix subject line with Re: if it
	already starts with it
	* mail/send.c: Handle ~x escape properly.
	* mail/table.c: Removed entry for ~x: it is handled by send.c
	* mail/var.c: Delimit addresses with space (~t, ~c and ~b escapes).
	Removed var_exit().

	* guimb/main.c: Fixed typo in --help output.
	* guimb/scm/README: (new).

	Reorganized /doc. Added some documentation (primarily, program.texi)

	* configure.in: Added doc/*/Makefile
	* doc/*.texi, doc/*.rfc: removed.
	* doc/Makefile.am: Reorganized doc structure
	* doc/.cvsignore: Likewise.

	* doc/texinfo: New directory
	* doc/texinfo/Makefile.am: (new)
	* doc/texinfo/.cvsignore: (new)
	* doc/texinfo/.ispell_english: (new) User dictionary for spell-checking
	docs.
	* doc/texinfo/address.texi: Moved from ..
	* doc/texinfo/attribute.texi: Likewise.
	* doc/texinfo/auth.texi: Likewise.
	* doc/texinfo/body.texi: Likewise.
	* doc/texinfo/c-api.texi: Likewise.
	* doc/texinfo/encoding.texi: Likewise.
	* doc/texinfo/envelope.texi: Likewise.
	* doc/texinfo/ex-address.texi: Likewise.
	* doc/texinfo/ex-url.texi: Likewise.
	* doc/texinfo/folder.texi: Likewise.
	* doc/texinfo/framework.texi: Likewise.
	* doc/texinfo/headers.texi: Likewise.
	* doc/texinfo/imap4.texi: Likewise.
	* doc/texinfo/iterator.texi: Likewise.
	* doc/texinfo/locker.texi: Likewise.
	* doc/texinfo/mailbox.texi: Likewise.
	* doc/texinfo/maildir.texi: Likewise.
	* doc/texinfo/mailer.texi: Likewise.
	* doc/texinfo/mailutils.texi: Likewise.
	* doc/texinfo/mbox.texi: Likewise.
	* doc/texinfo/message.texi: Likewise.
	* doc/texinfo/mh.texi: Likewise.
	* doc/texinfo/mime.texi: Likewise.
	* doc/texinfo/nntp.texi: Likewise.
	* doc/texinfo/parse822.texi: Likewise.
	* doc/texinfo/pop3.texi: Likewise.
	* doc/texinfo/programs.texi: Likewise.
	* doc/texinfo/sendmail.texi: Likewise.
	* doc/texinfo/sfrom.c.texi: Likewise.
	* doc/texinfo/smtp.texi: Likewise.
	* doc/texinfo/stream.texi: Likewise.
	* doc/texinfo/url.texi: Likewise.
	* doc/texinfo/version.texi: Likewise.

	* doc/rfc: New directory
	* doc/rfc/Makefile.am: (new)
	* doc/rfc/.cvsignore: (new)
        * doc/rfc/rfc1731.txt: Moved from ..
        * doc/rfc/rfc1734.txt: Likewise.
        * doc/rfc/rfc1738.txt: Likewise.
        * doc/rfc/rfc1939.txt: Likewise.
        * doc/rfc/rfc1957.txt: Likewise.
        * doc/rfc/rfc2045.txt: Likewise.
        * doc/rfc/rfc2046.txt: Likewise.
        * doc/rfc/rfc2047.txt: Likewise.
        * doc/rfc/rfc2049.txt: Likewise.
        * doc/rfc/rfc2060-errata: Likewise.
        * doc/rfc/rfc2060.txt: Likewise.
        * doc/rfc/rfc2088.txt: Likewise.
        * doc/rfc/rfc2111.txt: Likewise.
        * doc/rfc/rfc2192.txt: Likewise.
        * doc/rfc/rfc2193.txt: Likewise.
        * doc/rfc/rfc2221.txt: Likewise.
        * doc/rfc/rfc2245.txt: Likewise.
        * doc/rfc/rfc2298.txt: Likewise.
        * doc/rfc/rfc2342.txt: Likewise.
        * doc/rfc/rfc2368.txt: Likewise.
        * doc/rfc/rfc2384.txt: Likewise.
        * doc/rfc/rfc2449.txt: Likewise.
        * doc/rfc/rfc2821.txt: Likewise.
        * doc/rfc/rfc2822.txt: Likewise.
        * doc/rfc/rfc3028.txt: Likewise.
        * doc/rfc/rfc821.txt: Likewise.
        * doc/rfc/rfc822.txt: Likewise.

2001-10-13  Alain Malgoire

	* mail/mail.c: Possibility to enable debuging output.
	It should probably be a runtime option via set debug=1 or something
	for now it is disable between if (0) {...}.

	More cleanup in the IMAP code.  A memory stream buffer is
	use to save the string literal sended by the IMAP server.
	The allocation is handle by the memory_stream which simplifies
	the code.

	* folder_imap.c (folder_imap.c): Create a memory stream to
	hold the literal or quoted string send by the IMAP server.
	(folder_imap_list folder_imap_lsub): There is no callback
	field the struct folder_list is in struct _f_imap now.
	(imap_literal_string imap_quoted_string imap_string):  Use the
	memory string stream to save the result.
	(imap_body): Still need to be clean, but creates the cache
	header when doing the scan.
	(imap_parse): Do not use alloca().

2001-10-13  Jeff Bailey

	* guimb/Makefile.am: Remove GNU Makeism.

	* libmu_scm/Makefile.am: Remove GNU Makeism.

2001-10-12  Jeff Bailey

	* libmu_scm/Makefile.am: Fixes for RO srcdir.

	* guimb/Makefile.am: Fixes for RO srcdir.

2001-10-11 Alain Magloire

	A small cleanup of the IMAP code.

	* mailbox/folder_imap.c (imap_body):  Destry the cache header
	if it was previously set on a SCAN.
	* mailbox/mbx_imap.c (delete_to_string): New function, to generate
	a string of IMAP message numbers.
	(imap_expunge): use delete_to_string;
	(attribute_string): Removed.
	(flags_string): Removed.
	(flags_to_string): Replace attribute_string() and flags_string().
	(message_operation): Rename to fetch_operation.
	* mailbox/include/imap0.h(struct _f_imap): field func and id
	removed, never used.

2001-10-11 Alain Magloire

	* mailbox/folder_imap.c (imap_quoted_string): Free the buffer.
	(imap_string): Free the buffer.
	(imap_body): Check if we already have the fheader header.
	(imap_scan): Forgot the break in the switch.

2001-10-11 Alain Magloire

	In order to boost performance, when doing the scan, we use
	the approach of downloading a subset of the header from all
	of messages.  The way it was done before was that the headers
	were requested one by one per message.  This was causing performance
	issues because we were doing a lot of small transactions on
	the TCP/IP stack.  By bundling the entire thing in one request
	"a0000 FETCH 1:* (FLAGS RFC822.SIZE BODY.PEEK[HEADER.FIELDS(..)])\r\n"
	there were less transcations and the speed was increase
	by a factor of 100+.
	The Imap code folder_imap.c and mbx_imap.c is now messy.
	The rewrite in mailbox2 should clean this up though.

	* mailbox/folder_imap.c (imap_quoted_string): Allocated the
	memory instead.
	(imap_body): If we were doing the scan free the memory and create
	the cache header.
	(imap_fetch): Create the message if was not done, important for
	the scan.
	* mailbox/mbx_imap.c (imap_scan): Bundle one big request to
	fetch as much information as possible.
	(message_operation): Free the buffer when done.
	* mailbox/include/imap0.h: Add IMAP_SCAN states.

	* mailbox/file_stream.c (_file_readline): It seems that fgets() can
	not handle binary data.  Try to do our best.

2001-10-11 Alain Magloire

	* mailbox/header.c (header_get_fvalue): When it fails set the number
	of byte written to 0.
	(header_get_value): Likewised.
	* mailbox/mbx_imap.c (imap_envelope_sender): Go through
	header_get_value() to fetch the "Sender" field, it may be cache.
	(imap_header_get_fvalue): Put parenthesies around the FETCH, the
	WU-IMAPD likes it that way.

2001-10-10 Alain Magloire

	* mailbox/mbx_pop.c (_mbox_pop_init): Authority is set on the folder.
	For pop this a little hackish, since there is no proper folder.
	As a hack we set for the pop folder the actual mailbox as data pointer.
	(pop_user): the owner of the authority is the folder.

2001-10-08 Alain Magloire

	* mailbox/mbx_mbox.c (mbox_expunge0): New function.
	Move all the previous mbox_expunge() to mbox_expunge0()
	with a new argument deciding whether or not to remove
	messages set deleted.
	(mbox_save_attributes): Stub calling mbox_expunge0().
	(mbox_expunge): Stub calling mbox_expunge0()

	* mailbox/mbx_mh.c: Provide a prototype for mh_message_number()
	there is no provision for it in the current Mailbox API.

	* mailbox/mbx_imap.c (imap_message_lines): If the message_size
	is not set fallback on body_lines and header_lines.

	* mail/print.c:  Lines number are not always known for
	example for POP or IMAP, it is not known until the mail
	is dowloaded so take a guess base on the size.

2001-10-08 Sergey Poznyakoff

	* mail/z.c: Bugfix: Did not display the last message when the
	number of lines in last page was less than pagelines.
	* mailbox/mbx_pop.c: Use ENOSYS instead of ENOTSUP.
	* mh/mh_format.c: Fixed memory leak in strobj_free().

2001-10-05 Alain Magloire

	* mailbox/folder_imap.c (imap_flags): Bailout at the matching
	LPAREN.
	* mailbox/header.c (header_get_fvalue): Return 0 as the
	number of byte returned by the last  argument, even when no header
	field matched.
	(header_get_value): Likewised.
	* mailbox/mbx_imap.c (imap_header_get_fvalue): Also cache
	the message size and the FLAGS.
	(imap_message_size): If we already have the size do not request
	it again.

2001-10-05 Sergey Poznyakoff

	* guimb/scm/Makefile.am: Added reject.scm.
	* mailbox/parse822.c: (parse822_word): Additional check
	for qstr != NULL: parse822_quoted_string() sometimes returns
	EOK and does not fill qstr (e.g. when parsing empty string: "")

2001-10-04 Alain Magloire

	* imap4d/select.c(imap4_select_status): According to RFC2060
	There is no parenthesis when we send the UIDVALIDITY/UNSEEN.

	* mailbox/header.c (header_free_cache): New function.
	(fill_blurb): Call header_free_cache to release memory.
	(header_destroy): Move the code to header_free_cache().
	(header_set_fvalue): Accept a NULL value, it will permanent
	failure i.e. the header does not exist.
	(header_get_value): Check the cache provided by the header object
	then the cache from _get_fvalue() and fall back to downloading
	the entire header.
	* mailbox/mbx_imap.c (imap_hader_get_fvalue): Implement a cache
	in IMAP for the most use headers like "FROM, SUBJECT ....".
	* mailbox/include/imap0.h: New field in _m_imap to hold the
	header cache.
	* mailbox/mapfile_stream.c: signed and unsigned cast.

2001-10-03 Alain Magloire

	* mailbox/mbx_imap.c (imap_attr_set_flags): Do not send
	the \\Delete flag and just keep it locally.  The expunge
	will take care of resending it.
	(imap_attr_unset_flags): Likewised.

2001-10-03 Sergey Poznyakoff

	* mailbox/attribute.c: Fixed funny bug in
	attribute_{set,clear}_modified.

2001-10-01 Alain Magloire

	* mailbox2/attribute.c: Add user flags.
	* mailbox2/dattribute.c: Add user flags.

	To be compatible with the old mailbox, all stream read
	and write take an offset. Removed stream_seek () and add
	stream_is_seekable() instead.
	* mailbox2/stream.c: Likewised.
	* mailbox2/bstream.c: Likewised.
	* mailbox2/fdstream.c: Likewised.
	* mailbox2/fstream.c: Likewised.
	* mailbox2/mapstream.c: Likewised.
	* mailbox2/memstream.c: Likewised.
	* mailbox2/tcpstream.c: Likewised.

	* mailbox2/include/mailutils/error.h: Add EBADFD.

	* mailbox2/include/mailutils/mbox.h: New prototypes.
	* mailbox2/include/mailutils/sys/mbox.h: New prototypes.
	* mailbox2/mbox/*.c: Finish implementation.

2001-09-26 Alain Magloire

	* mailbox2/mbox/mbox_append.c: Implemented, first draft.

2001-09-23 Alain Magloire

	First draft of the mailbox/mbox2.  Not functional.
	Changes are too numerous to enumarate.

	* mailbox2/mbox/*.[ch]: First mbox implementation.
	* mailbox2/mbox/Makefile.am: New file.

2001-09-22 Alain Magloire

	In order to provide inheritance, it is necessary to make
	the base functions/methods visible so the extended object
	could reuse some base methods if necessary.  Inheritance
	is possible because we always add to the end of the vtable
	structure new functions.
	For example, mime_t object will be also a message_t.
	and it will be possible to do
	{
	  mime_t mime;
	  header_t header;
	  ...
	  message_get_header ((message_t)mime, header);
	}
	Another example is tcpstream(socket stream) extends
	fdstream(file descriptor stream);
	Also the name of the functions have change to match there purpose.

	* mailbox2/Makefile.am: lockfile.c added.
	* mailbox2/bstream.c: Reoganisation to make the
	functions visible.
	* mailbox2/dattribute.c: Likewise.
	* mailbox2/dotlock.c: Likewise.
	* mailbox2/fdstream.c: Likewise.
	* mailbox2/fstream.c: Likewise.
	* mailbox2/mapstream.c: Likewise.
	* mailbox2/memstream.c: Likewise.
	* mailbox2/pticket.c: Likewise.
	* mailbox2/sdebug.c: Likewise.
	* mailbox2/tcpstream.c: Likewise.

	* mailbox2/include/mailutils/Makefile.am: lockfile.h added.
	* mailbox2/include/mailutils/attribute.h: Add the new prototypes.
	* mailbox2/include/mailutils/mbox.h: Add the new prototypes.
	* mailbox2/include/mailutils/stream.h: Add the new prototypes.

	* mailbox2/include/mailutils/sys/Makefile.am: dattribute.h lockfile.h
	mapstream.h pticket.h added.
	* mailbox2/include/mailutils/sys/bstream.h: Add new prototypes.
	* mailbox2/include/mailutils/sys/fdstream.h: Likewise.
	* mailbox2/include/mailutils/sys/fstream.h: Likewise.
	* mailbox2/include/mailutils/sys/mbox.h: Likewise.
	* mailbox2/include/mailutils/sys/memstream.h: Likewise.
	* mailbox2/include/mailutils/sys/sdebug.h: Likewise.
	* mailbox2/include/mailutils/sys/tcpstream.h: Likewise.

2001-09-20 Sergey Poznyakoff

	* frm/frm.c: Print newline not depending on the presence
	of Subject header.

	* mh/mh_fmtgram.y: Builtin functions return their values
	in arg_num,arg_str. reg_num,reg_str gets set only when reducing
	to pitems.
	Fixed if-blocks to save the result of the last evaluated conditional
	to reg_num.
	* mh/mh_format.c: Builtin functions return their values
	in arg_num,arg_str.
	Compress whitespace only in component escapes.
	* mh/mh_init.c: mh_read_formfile(): Handle end-of-line comments
	and '\' line continuation.

2001-09-19 Alain Magloire

	* mailbox2/debug.c: Remove mu_debug_printv() and only keep
	mu_debug_print().
	* mailbox2/sdebug.c (mu_debug_stream_create): New function
	replace mu_debug_stdio_create().
	* mailbox2/fdstream.c (_fds_desroy): Do not close the stream
	when destroying, it should have been done explicitely with
	stream_close ();
	* mailbox2/fstream.c (_fs_desroy): Do not close the stream
	when destroying, it should have been done explicitely with
	stream_close ();
	* mailbox2/mapstream.c (_map_desroy): Do not close the stream
	when destroying, it should have been done explicitely with
	stream_close ();
	* mailbox2/memstream.c (_memory_desroy): Do not close the stream
	when destroying, it should have been done explicitely with
	stream_close ();
	* mailbox2/tcpstream.c (_tcp_desroy): Do not close the stream
	when destroying, it should have been done explicitely with
	stream_close ();

2001-09-18 Sam Roberts

	* mailbox/mbx_pop.c: Check url authentication type at
	initialization to trap invalid ones early.
	* mailbox/: mbx_mbox.c, mbx_mh.c: The pthread headers seem to
	define things that make the system headers not prototype some
	non-POSIX but essential APIS, so I moved them (on QNX6).
	* mailbox/url.c: Set zero-length strings to NULL.
	* mailbox/: url_imap.c, url_pop.c: Check harder for URLs that are
	not invalid for the particular scheme.
	* mailbox/auth.c: authority_authenticate() was returning success if
	authority was NULL, this is an error for all the other authority_*
	APIs, now it is here, as well.

2001-09-18 Sergey Poznyakoff

	* mh/mh.h: Changed proto of mh_read_formfile(). Thanks to Alain
	for noticing.
	* mh/inc.c: Likewise.
	* mh/scan.c: Likewise.
	* mh/mh_init.c: Likewise.

2001-09-18 Sergey Poznyakoff

	* mailbox/mbx_mh.c: Optimized for speed.
	_mh_message_save(): scan the message while saving it. If expunge==0,
	do not create temporary, operate directly on the message file instead.
	mh_append_message(): Do not rescan appended message.
	mh_scan_message(): Do not rescan the message if it's not changed
	since last scan.
	* mh/.cvsignore: Updated.
	* mh/mh_argp.c: Pass '+' key when handling +folder option.
	* mh/mh_getopt.c: Handle +folder.
	* mh/inc.c: Handle '+' key.
	* mh/scan.c: Likewise.

2001-09-17  Alain Magloire

	Pop3 now has a debug object, mu_debug_t, to follow the protocol
	exchanges between the library and the server.

	* mailbox2/pop3/*: Add debug prints in all.
	* mailbox2/sdebug.c: New entry.
	* mailbox2/debug.c: New entry.
	* mailbox2/Makefile.am: Add debug object
	* mailbox2/include/mailutils/Makefile.am: Add debug.h
	* mailbox2/include/mailutils/sys/Makefile.am: Add debug.h and sdebug.h
	* mailbox2/include/mailutils/debug.h: New file.
	* mailbox2/include/mailutils/sys/debug.h: New file.
	* mailbox2/include/mailutils/sys/sdebug.h: New file.

	* mailbox2/fdstream.c: Bug in fdstream do not call FD_SET if
	the file descriptor is -1;
	* mailbox2/tcpstream.c: Bug in fdstream do not call FD_SET if
	the file descriptor is -1;

2001-09-17 Sergey Poznyakoff

	* mail/mailline.c: fixed declaration of ml_reread, it did not
	match the changed proto.

	* acconfig.h: Added HAVE_OBSTACK

	* mailbox/mbx_mbox.c: _mh_next_seq(): add 1 to the last used
	sequence number. mh_append_message(): missed assignment to
	mhd member of struct _mh_data.
	mh_message_number(): new function. It is the only way to get
	the message sequence number.

	Further changes to mh/: Implemented inc command. Added missing
	options to scan.

	* mh/Makefile.am: Added inc.c. Restructured .*_LDADD assignments.
	* mh/mh.h: Extern declarations for current_folder, current_message,
	mh_list_format, etc.
	* mh/mh_format.c: builtin_msg(): return sequence number of the
	message, not its ordinal number in mailbox.
	builtin_cur(): implemented.

	* mh/mh_init.c: New globals: current_folder, current_message,
	mh_list_format, etc.
	mh_init(): initialize current_folder and current message.
	mh_read_context_file(), mh_read_formfile(): new functions.
	* mh/scan.c: Changed initialization of format_str. Removed
	scan_folder: use current_folder instead. Implemented
	-form and -header options. Use \f to clear screen if
	stdout is not a tty.
	* mh/inc.c: (new) Implementation of inc command.

2001-09-16  Alain Magloire

	* doc/mbox.texi: Starts to document the concrete Unix mbox
	API.
	* doc/pop3.texi: Typos.
	* mailbox/mbx_mh.c: Initialised variables. Typecast to void
	expunge since it is never used.
	* mail/delete.c : Typo.

2001-09-16  Alain Magloire

	This is after a exchange with Dave Inglis and Sam Roberts.
	Basically they recommand to drop the XX_release() functions
	and only to keep XX_create (), XX_destroy ().  We have simple
	reference count strategy for memory management.

	* mailbox2/* : Way too much to enumerate.
	* mailbox2/refcount.c: New file
	* mailbox2/include/mailutils/refcount.h: New file
	* mailbox2/include/mailutils/sys/refcount.h: New file
	* mailbox2/fdstream.c: stream_fd_create ().

2001-09-15  Alain Magloire

	The exercise is to crank up the warnings from gcc and cleanup
	the code based on the hints generated by the compiler.  The usual
	errors:
	- signed vs unsigned, signedness or unsignedness problems.
	- printf() wrong formats
	- wrong prototypes declarations
	- and different buglets
	- "const char *" vs "char *"
	- unused variables
	- unused arguments.  Tell the compiler by typecasting to void
	 (void)var.
	- Some variable when shadowed, meaning in another block variable
	of the same name where reused.
	- atoi() is not an ANSI C function, we should use strtol().

	Changes to comply to GNU coding standards, and nuke trailing spaces.

	* mail/alias.c (alia_lookup): No prototypes and scope static.
	(hash_num, max_rehash, aliases): Scope static and unsigned.
	(hash): unsigned.
	(alias_rehash): i unsigned.
	(alias_lookup_or_install): slot variable unused.
	(alias_destroy): unsigned.
	* mail/copy.c (mail_copy0): fprintf wrong format.
	* mail/decode.c: dislay_message change prototype.
	(mail_decode): Cast when calling util_msgset_iterate().
	(display_message): Prototype change.
	(display_headers): unsigned issues.
	* mail/delete.c: Buglet was caling mail_delete0() instead of
	mail_delete.
	* mail/eq.c: Unused arguments.
	* mail/exit.c: Unused arguments.
	* mail/folders.c: Unused arguments.
	* mail/followup.c: Unused variables.
	* mail/from.c (mail_from): variable buffer was shadowing use variable
	name instead. snprintf() formatting issues.
	* mail/headers.c: Unsigned issues.
	* mail/if.c: Unused arguments.
	* mail/inc.c: Unused arguments.
	* mail/list.c: Use const char *.
	* mail/mail.c: options[], argp[] initialised all elements.
	(mail_cmdline): Unused arguments.
	(main): Unsigned issues.
	(mail_warranty): Unused arguments.
	* mail/mail.h: function_t with complete prototype this necessary
	to let the compiler do proper checks.
	struct mail_command_entry rearrange the fields and a new field
	int (*escfunc) __P ((int, char **, struct send_environ *));
	Indentation rearrangements.
	* mail/mailline.c (ml_getc): Scope is static now.
	typecast for const char *.
	(ml_reread): Typecast.
	* mail/msgset.y: Declare yyerror() and yylex().
	(msgset_select): Change of prototpe to let the compiler do checks.
	(selec_sender): Unsused arguments.
	* mail/pipe.c: Rename variable pipe to tube.
	* mail/print.c: Unsigness and some shadow variables.
	* mail/quit.c: Shadow variables.
	* mail/send.c: Typecast when necessary. Use the second (escfunc)
	field now. Some shadow variables.
	* mail/shell.c: Unsigned.
	* mail/table.c: Readjust the table to correspond to the signature
	change in mail.h.
	* mail/tag.c: Prototype change.
	* mail/util.c (util_msglist_esccmd): New function.
	(util_find_entry): Prototype change.  And check return value
	of getenv().
	(util_screen_lines): Change atoi() to strtoul().
	(util_screen_columns): Change atoi() to strtoul().
	(util_find_env): Signedness.
	(util_fullpath): Prototype changed(const).
	(util_slist_to_string):Protorype changed (const).
	(util_strcat) :Protorype changed (const).
	(util_tempfile): const.
	* mail/var.c: Unsignedness, Unused arguments.
	(var_quote):  Use new function util_msglist_esccmd().
	* mail/version.c: Unused arguments.
	* mail/write.c: printf formats.
	* mail/z.c: Signedness.

2001-09-14 Sergey Poznyakoff

	* mailbox/mbx_mh.c: Properly handle messages with null body.
	Fixed bug in cyclic stream pool. Lowered MAX_OPEN_STREAMS
	limit. It probably should be configurable.

	A framework for porting MH utilities. Scan utility is in
	working order, except that it ignores -form and -header
	options.

	* configure.in: Check for presense of GNU obstack functions.
	* lib/Makefile.am: Added obstack.[ch]
	* lib/obstack.c: (new)
	* lib/obstack.h: (new)

	* mh: (New directory) Implementation of MH commands.
	* mh/Makefile.am: (new)
	* mh/.cvsignore: (new)
	* mh/mh.h: (new) Main header for mh functions.
	* mh/mh_argp.c: (new) Coexistence between GNU long options,
	traditional UNIX-style short options and traditional MH long options.
	* mh/mh_error.c: (new) Diagnostic output.
	* mh/mh_fmtgram.y: (new) Parser for format strings.
	* mh/mh_format.c: (new) Run-time execution of format strings.
	* mh/mh_getopt.c: (new) MH-style options parsing.
	* mh/mh_getopt.h: (new) Its prototypes.
	* mh/mh_init.c: (new) Initialization module.
	* mh/scan.c: (new) Implementation of scan command.

2001-09-10 Sergey Poznyakoff

	* mailbox/mbx_mh.c: Implemented append. Disabled reading of deleted
	messages when doing mailbox scan.

	* mail/summary.c: Do not set first_unread or first_new to the
	message which is marked as deleted.
	* mail/z.c: Do not count deleted messages into the total number
	of lines output.

2001-09-09  Alain Magloire

	This was done when cranking the number of warning generated
	by gcc (-Wall, etc ...)

	* mailbox/mbx_mh.c:  Add include for pthread.
	seq_number is size_t.
	(_mh_message_name):  The problem here is that asprintf()
	is a GNU extension.  We want libmailbox to be as independent
	as possible, so it will not be required for program to be
	link with libmailutils(it is not even install).  Default to
	snprintf ().
	(mh_close): return an int.
	(_mh_message_insert): n should be size_t.

2001-09-09  Alain Magloire

	* doc/pop3.texi: Update the doc.
	* doc/sfrom.c.texi: Line too long.
	* doc/stream.texi: Line too long.

	For the new mailbox, one of the short coming with the old stream_t
	object was that select() was not cover, meaning it was not possible
	to check if a stream was {read,write} ready.  The old was to get
	the fd (stream_get_fd()) and do the select.  Providing,
	stream_is_readready (stream_t, int timeout);
	stream_is_writeready (stream_t, int timeout);
	stream_is_exceptionpending (stream_t, int timeout);
	stream_is_open (stream_t);
	Takes care of it.  It will work specially for tcp stream.

	* mailbox2/stream.c: New functions for the select calls:
	(stream_is_readready): New function.
	(stream_is_writeready): New function.(stream_t, int timeout);
	(stream_is_exceptionpending): New function.
	(stream_is_open): New function.
	* mailbox2/bstream.c (_bs_readline): Bug was truncating the string
	to early.
	(_bs_is_readready): New file.
	(_bs_is_writeready): New file.
	(_bs_is_exceptionpending): New file.
	(_bs_is_open): New file.
	* mailbox2/fstream.c: stubs for the select functions.
	* mailbox2/memstream.c: stubs for the select functions.
	* mailbox2/mapstream.c: stubs for the select functions.
	* mailbox2/tcpstream.c: stubs for the select functions.
	* mailbox2/include/mailutils/stream.h: Adjust the prototypes
	* mailbox2/include/mailutils/sys/stream.h: Adjust the prototypes

	It is better not to put threading (Pthread) code in the low level
	API.  But instead in mailbox_t framework, where it can be control.
	* mailbox2/include/mailutils/pop3.h: Adjust the prototypes.
	* mailbox2/pop3/*.c: Remove threading code.

2001-09-09 Sergey Poznyakoff

	* mailbox/mbx_mh.c: Bug fix: both pool_first and pool_last must
	be biased by MAX_OPEN_STREAMS;

2001-09-08 Sergey Poznyakoff

	Initial implementation of MH mailbox format. It is functional
	in read-only mode. In read-write, it is able to delete and
	undelete messages but lacks `append message' functionality.
	Expunge does not unlink message files but rather renames them
	prepending ',' to a filename, after MH fashion.

	* mailbox/mbox_mh.c: (new)
	* mailbox/url_mh.c: (new)
	* mailbox/folder_mh.c: (new)
	* mailbox/Makefile.am: Added mh-related sources.
	* mail/mail.c: Register mh_record.
 	* mailbox/include/registrar0.h: Added mh-related declarations.
	* include/mailutils/registrar.h: Declare mh_record.

	* mailbox/mbx_mbox.c: Check for MU_ATTRIBUTE_DELETED in
	mbox_expunge.

	* libmu_scm/mu_mailbox.c: mu_scm_mailbox_print(): handle
	mailbox == #f case.
	* libmu_scm/mu_message.c: mu_scm_message_print(): handle
	message == #f case.

2001-09-06  Alain Magloire

	* mailbox/folder_mbox.c (folder_mbox_open): Implemeted.

2001-09-05 Sergey Poznyakoff

	* MySql/MySql.h: New defines MHOST, MPORT, etc.
	* MySql/MySql.c: Improved error logging. Fixed memory leak due
	to absence of mysql_close() calls (noticeable on imap4d when
	doing multiple login attempts).
	Provide configurable parameters to mysql_real_reconnect to
	allow connecting to the remote database and/or non-standard
	ports.

2001-09-04  Alain Magloire

	* mailbox/mbx_imap.c (message_operation):  Check if the
	imap server went away(f_imap->isopen) and flag an error.

2001-09-03  Alain Magloire

	* mailbox/folder_imap.c (imap_use): Check return value.
	* mailbox/mailbox.c (mailbox_get_debug): Get the mu_debug_t
	object from the folder if available.
	* mailbox/mbx_imap.c (imap_append_message): Check for
	EAGAIN.
	(imap_header_get_value): If the operation return 0, set
	error to ENOENT.

2001-09-03  Alain Magloire

	* configure.in: AC_REPLACE_FUNCS(fgetpwent);

	* include/mailutils/parse822.h: Add a prototype for
	parse822_skip_nl().

	* lib/Makefile.am: add fgetpwent.c
	* lib/fgetpwent.c: New file.

	* mail/from.c (mail_from): Use the cover functions
	attribute_is_xxxx() instead of getting the flag.

	* mailbox/attribute.c: Cleanup the mess.
	attribute_set_{read,delete,seen,flagged,answered}.
	attribute_unset_{read,delete,seen,flagged,answered}.
	attribute_is_{read,delete,seen,flagged,answered}
	should be no more then cover functions calling
	attribute_set_flags(), attribute_get_flags() and
	attribute_unset_flags().

	* mailbox/folder_imap.c: MU_ATTRIBUTE_READ, is not
	part of IMAP protocol use \\Seen.
	* mailbox/mbx_imap.c: Remove the hack trying to reconnect,
	it does not work.

	* mailbox/mbx_pop.c(pop_get_messages): Set the new
	functions for the attribute.
	(pop_get_attribute): New functions.
	(pop_set_attribute): New functions.
	(pop_unset_attribute): New functions.
	(pop_attr_flags): Removed.

	* mutil.c (mu_hex2ul): GNU coding std.
	(parse822_time): Do not use tzname as a variable name tzname
	is global variable in libc, better clear away.
	(parse822_date_time): Likewised.

	* pop3d/Makefile.am: add virtual.c
	* pop3d/pop3d.c (main): register getpwnam_ip_virtual,
	getpwnam_host_virtual
	* pop3d/pop3d.h: declare,
	getpwnam_ip_virtual(), getpwnam_host_virtual().
	* pop3d/virtual.c: New file.

2001-09-02  Alain Magloire

	* mailbox/mutil.c (getpwma_virtual): Memory overrun, did not
	reserve enough space to accomodate the extra slash, when
	doing the sprintf().
	Include <string.h>, since we use strdup().

2001-08-31  Jakob 'sparky' Kaivo  <jkaivo@elijah.nodomainname.net>

	* imap4d/list.c (list_file): don't show INBOX if virtual

2001-08-31 Sergey Poznyakoff

	* mailbix/mutil.c: Fixed declaration of _app_getpwnam.
	Moved mu_virtual_domain out of #ifdef guard. Fixed typo
	in getpwnam_virtual: erroneously returned NULL instead of
	p.

2001-08-31 Sergey Poznyakoff

	Generalized mu_getpwnam interface. mu_register_getpwnam allows
	to register several functions which will be tried in turn in
	order to obtain struct passwd*. Changed virtual domain code
	in pop3d and imap4d to use this approach.

	* mailbox/mutil.c: _app_getpwnam is a list of getpwnam functions.
	mu_getpwnam calls each function in succession until it finds one
	which returns non-NULL value.
	* include/mailutils/mutil.h: Fixed mu_.*getpwnam declarations. Added
	declaration for mu_virtual_domain and getpwnam_virtual()
	* mailbox/Makefile.am: Add -DSITE_VIRTUAL_PWDDIR to CFLAGS.

	* configure.in: New option --with-virtual-pwddir allows to configure
	the path to domain passwd files. Defaults to <sysconfdir>/domain.

	* imap4d/copy.c: Use mu_virtual_domain instead of is_virtual.
	* imap4d/select.c: Likewise.
	* imap4d/status.c: Likewise.

	* imap4d/imap4d.c: Register getpwnam_virtual for handling virtual
	domains.
	* pop3d/pop3d.c: Likewise.

	* imap4d/login.c: Removed imap4d_virtual. Its functionality passed
	to getpwnam_virtual.
	* pop3d/pop3d.h: Include mutil.h
	* pop3d/user.c: Removed pop3d_virtual. Its functions are performed
	by getpwnam_virtual. Renamed is_virtual to mu_virtual_domain.

	* mail/alias.c: Use linear hash ordering.

2001-08-30  Alain Magloire

	In the virtual code, change the chdir() and build the full
	pathname in a buffer.  For a daemon, it is better to stay
	in "/" the root.  Moving in subdirecteris, will not permit
	the volume to be unmounted.  But we do not follow the
	same rule for imap4d, it should be fix.

	* pop3d/signal.c: Shutup unused parameter warrning from gcc.
	* pop3d/user.c: Define macro VIRTUAL_PWDDIR. use sprintf()
	to build filename instead of chdir().
	(PAM_gnupop3d_conv): Shutup unused parameter warrning from gcc.
	Make sure variable mailbox_name is initialized.

	* include/mailutils/mutil.h: Typo "struct password" instead of
	"struct passwd". Use const appropriately in the declaration
	of mu_register_getpwnam() and mu_getpwnam().
	* mailbox/mutil.c: Use const appropriately in the definition
	of mu_register_getpwnam() and mu_getpwnam(). Typo "struct password"
	instead of "struct passwd".

2001-08-30 Sergey Poznyakoff

	More changes to better integrate mysql support. Introduced
	mu_getpwnam function. The function first calls system getpwnam,
	if it fails, it calls application-defined getpwnam function.
	mu_register_getpwnam can be used to register such a function.

	* configure.in: Add -lm to AUTHLIBS when configured with
	--enable-mysql.
	When checking for PAM: Append to AUTHLIBS instead of just
	assigning to it.
	* imap4d/Makefile.am: Moved @AUTHLIBS@ before libmailutils.
	Needed when using mysql.
	* pop3d/Makefile.am: Likewise.
	* imap4d/imap4d.c: use mu_register_getpwnam.
	* pop3d/pop3d.c: Likewise.

	* pop3d/user.c: Use mu_getpwnam.
	* imap4d/login.c: Likewise.

	* mailbox/mbx_default.c: use mu_getpwnam. Removed inclusion
	of MySql.h.
	* mailbox/mutil.c: new functions: mu_getpwnam() and
	mu_register_getpwnam().
	Removed inclusion of MySql.h
	* include/mailbox/mutil.h: Prototypes for the new functions.

2001-08-30 Sergey Poznyakoff

	* MySql/MySql.c: Use asprintf instead of sprintf, use xmalloc
	instead of malloc.
	Return values were allocated dynamically but never freed, this
	caused memory leaks if authentication functions were called more
	than once. Made them static, so that they get reallocated at each
	new invocation of getM functions, thus reclaming lost storage.
	Made <config.h> the first file to be included and guard it with
	#ifdef HAVE_CONFIG_H
	Reindented text to conform to GNU coding style.

	* MySql/Makefile.am: Use @BUILD_LIBMYSQL@ substitution instead
	of direct assignment to noinst_LIBRARIES, so the subdir gets
	distributed properly.

	* configure.in: New substitution variable BUILD_LIBMYSQL. Append
	linker flags to AUTHLIBS, since modifying LIBS effectively
	breaks compilation.

2001-08-29  Jakob 'sparky' Kaivo  <jkaivo@elijah.nodomainname.net>

	* imap4d/select.c (imap4d_select0):
	* imap4d/copy.c (imap4d_copy0):
	* imap4d/status.c (imap4d_status): treat INBOX differently if virtual

	* imap4d/login.c (imap4d_virtual): new function
	(imap4d_login): call imap4d_virtual

	* imap4d/imap4d.h: add is_virtual variable

	* configure.in (USE_VIRTUAL_DOMAINS): add virtual domain option

	* pop3d/user.c (pop3d_virtual): new function for "virtual domains"
	(pop3d_user): call pop3d_virtual

2001-08-28  Alain Magloire

	* mailbox2/include/mailutils/list.h:  the typedef list_t
	is rename mu_list_t, as a suggestion from Sam R.
	* mailbox2/list.c: All the function names are prefix with "mu_".

2001-08-27  Alain Magloire

	* mailbox/folder_imap.c (imap_list): When \NoSelect, it is
	also mean that the file is a directory.

2001-08-27  Jakob 'sparky' Kaivo

	* mail/send.c (mail_send0): change readline (NULL) to readline
	(" \b") so there is really no prompt

2001-08-24  Jim Hull

	* Makefile.am:
	* acconfig.h:   Added support for new MySql addition to mailutils
	* configure.in:

	* MySql/Makefile.am:
	* MySql/MySql.c:        Mini lib to link to when mysql support
	* MySql/MySql.h:        enabled (with --enable-mysql)

	* doc/Readme.mysql:             Readme file for setup.

	* imap4d/login.c:
	* mailbox/mbx_default.c:        The Patch pretty much works the same
	* mailbox/mutil.c:              all around. if getpwnam() returns null
	* mailbox2/mutil.c:             then your db is checked for the user,
	* pop3d/apop.c:                 and the struct is filled if found,
	* pop3d/user.c:                 returns null if not. If shadow support
                               is used, then the same is done with getspnam().

	* examples/mail.MysqlMailer.c:  Simple sendmail backend support.

2001-08-24  Alain Magloire

	* sieve/Makefile.am: To EXTRA_DIST add md5-rsa.{c,h}.

	* mailbox2/header.c(header_aget_value): Base on discussion with Sergey
	if the call fails no memory should be allocated and the return status
	should be return i.e. status != 0.

	* imap4d/fetch.c (fetch_bodystructure0):  Check for sp != NULL.
	* imap4d/fetch.c (send_parameter_list):  Check for sp != NULL.

2001-08-23 Sergey Poznyakoff

	* mail/msgset.y: Fixed erroneous call to msgset_select
	(second arg should have been a pointer). Added :t (tagged)
	and :T (untagged) selection criteria.

	* mail/tag.c: (new) Implementation of tag command.
	* mail/table.c: Added entries for "tag" and "untag".
	* mail/Makefile.am: Added tag.c
	* mail/from.c: Display tagged messages.
	* mail/mail.h: Added protos and defines for mail_tag().

2001-08-22  Jakob 'sparky' Kaivo  <jkaivo@elijah.nodomainname.net>

	* imap4d/fetch.c (bodystructure): check sp != NULL before using

2001-08-18 Sergey Poznyakoff

	* libmu_scm/mu_mime.c: (new) Scheme primitives for handling
	mime messages.
	* libmu_scm/mu_message.c: mu_scm_message_add_owner() - add new
	object to the owner chain of the message.
	* libmu_scm/mu_scm.h: Prototypes for new functions.
	* libmu_scm/mu_scm.c: Call mu_scm_mime_init().

	* guimb/scm/reject.scm: (new) Implementation of Sieve "reject"
	action.
	* guimb/scm/redirect.scm: Moved sieve-message-bounce to
	sieve-core.scm
	* guimb/scm/sieve-core.scm: New function sieve-message-bounce.

2001-08-16 Sergey Poznyakoff

	* mail/msgset.y: Implemented :/expr/ -- search in the message
	body. Fixed memory leak in select_header (missed regfree).

2001-08-14 Sergey Poznyakoff

	* mail/msgset.y: Extended regexp syntax: IDENT:/EXPR/ fetches
	all messages whose header IDENT matches given EXPR. The match
	is case-sensitive if IDENT starts with a capital letter and
	is case-insensitive otherwise.

2001-08-12 Alain Magloire

	* mailbox2/*: Move more code from the original mailbox
	To much to enumarate.

2001-08-07 Alain Magloire

	* m4/regex.m4: New file to check for GNU regex.
	* lib/regex.c: New file, GNU regex implementation.
	* lib/regex.h: New file.
	* lib/posix: New directory.
	* lib/posix/Makefile.am: New file.
	* lib/posix/regex.h: New file.
	* lib/Makefile.am: Add SUBDIRS=posix and regex.c dependencies.

	* mail/msgset.y: Remove HAVE_REGEX macro and check variable
	"noregex" before using regex.

	* configure.in: Check for GNU regex.

2001-08-07 Alain Magloire

	* mail/msgset.y:  Draft implementation of a proposition
	to allow regular expressions.
	(REGEXP): Passing the address of the pointer instead of the pointer.
	(INDENT): Likewised.
	* mail/Makefile.am: Add in EXTRA_DIST msgset.c to force its
	generation when doing the distribution, having yacc should
	not be required.

	* mailbox/mutil.c (mu_hexstr2ul): Properly cast the expression
	before doing the comparison.

2001-08-06 Sergey Poznyakoff
	* mail/msgset.y: (new) A parser for message set specifications
	of arbitrary complexity. Returns a singly linked list of
	message specifications that can be iterated without need
	for recursion.
	* mail/mail.h: Prototypes for msgset_ functions. Removed proto
	for util_expand_msglist.
	* mail/Makefile.am: Added msgset.y
	* mail/{copy.c, followup.c, headers.c, next.c, pipe.c,
	previous.c, util.c, write.c}: Use msgset_parse instead of
	util_expand_msglist.
	* mail/util.c: Added util_msgset_iterate() to iterate over a
	message set. Added util_get_content_type() and
	util_get_hdr_value() (from decode.c).
	* mail/decode.c: Use util_msgset_iterate(). Moved get_content_type()
	and get_hdr_value() to util.c
	* mail/table.c: Fixed synopsis for decode.

        * libmu_scm/Makefile.am: Removed .x and .doc files from EXTRA_DIST.
          Thanks to Alain.
        * guimb/Makefile.am: Likewise.
        * m4/Makefile.am: Added maintain.m4

2001-08-06  Alain Magloire

	* sieve/{exitcodes.h hmac-md5.h md5.c md5.h md5global.h}: Removed.
	* sieve/md5-rsa.c: New file, clearly identify that the algo.
	is from RSA and not GNU md5.
	* sieve/md5-rsa.h : New file.
	* sieve/Makefile.am:  added md5-rsa.[ch].
	* sieve/message.h:  lcase() change for strlower ().
	* sieve/script.c: Include md5-rsa.h.
	* sieve/sieve-gram.y: lcase changed for strlower ().
	* sieve/util.c: Remove all the unnecassary code and
	only implement strlower() and strupper().
	* sieve/util.h: Only export strlower and struppper ().

	* messages/messages.c: Also include pop_record
	amd imap_record.

2001-08-05 Sergey Poznyakoff
	* mailbox/mbx_mbox.c: Added mbox_stream_size().
	* mailbox/message.c: Added message_stream_size().
	* mailbox/stream.c: Fixed some comments.

	* libmu_scm/mu_port.c: (new) I/O port functions. This allows to
	write and read mailboxes/messages using usual scheme primitives
	and thus effectively obsoletes mu_body interface, but I'll keep
	it for a while.
	* libmu_scm/mu_scm.c: Call to mu_scm_port_init().
	* libmu_scm/mu_scm.h: Prototypes for port functions.
	* libmu_scm/mu_message.c: Added mu-message-get-port.
	mu-message-set-header: don't bail out if third argument is boolean,
	to allow for constructs like
		(mu-message-set-header
                  m1 "From"
                  (mu-message-get-header m2 "To"))
	* libmu_scm/mu_maibox.c: Added mu-mailbox-get-port.

	* guimb/scm/sieve.scm: Documented some obscure data structures.
	* guimb/scm/sieve-core.scm: Use sieve-mailbox-open instead of
	mu-mailbox-open. The former searches the list of open mailboxes
	and returns one if found. All the mailboxes get closed at once
	when the sieve program finishes execution. This saves memory and
	speeds up the execution (fewer calls to gc, if any).
	sieve-regexp-to-posix: escape special characters.
	action-reject: Use ports instead of mu-body- interface.

	* examples/reply.scm: Use ports instead of mu-body- interface.

	* mail/var.c: Added checks for missing arguments.

2001-08-04 Sergey Poznyakoff
	* mailbox/header.c: Return value of header_aget_value() was always
	0. Made it consistent with that of header_get_value(). Same for
	header_aget_field_value().

	* guimb/main.c: Fixed handling of default mailbox in the absence of
	other mailbox arguments.
	* guimb/collect.c: Likewise.
	* guimb/guimb.h: Removed unused declarations.

	* libmu_scm/mu_message.c: Changed mu-message-get-header-fields
	to allow for second optional argument. The argument is a list
	of header names to narrow output to.

	* guimb/scm/sieve-core.scm: Changed action-keep: it couldn't be just
	#f. Fixed and tested action-stop, action-redirect and test-exists.
	Fixed handling of null-length keys in sieve-str-str.
	test-address and test-header: use mu-message-get-header-fields
	to speed the things up.
	Implemented "envelope" test.

	* guimb/scm/sieve.scm: Add final #t to the generated code, so the
	empty scripts work.

2001-08-03 Sergey Poznyakoff
	* libmu_scm/mu_logger.c: (new) Interface to syslog functions.
	* libmu_scm/mu_mailbox.c: Added mu-mailbox-get-url.
	* libmu_scm/mu_message.c: Added mu-message-get-size,
	mu-message-get-lines.
        * libmu_scm/mu_address.c: Provide mu_scm_address_init() function.
	* libmu_scm/mu_scm.c: Call mu_scm_address_init(), mu_scm_logger_init().
	Added mu-package and mu-version variables.
	* libmu_scm/mu_scm.h: Prototypes for mu_scm_address_init() and
	mu_scm_logger_init().
	* libmu_scm/Makefile.am: Added mu_logger.c

	* guimb/main.c: Added --mailbox and --user options. Added escape for
	Scheme arguments (-{ and -}).
	* guimb/run_scm.c: Call collect_output() before dropping mailbox.
	Added exception handling. Added user-name variable.
	* guimb/collect.c: Added collect_output().
	* guimb/guimb.h: Added prototypes.
	* guimb/Makefile.am: Added SUBDIRS.

	* guimb/scm: (new) Directory containing guimb modules and scripts.
	* guimb/scm/Makefile.am: (new)
	* guimb/scm/sieve.scm: (new) Sieve to Scheme translator.
	* guimb/scm/sieve-core.scm: (new) Sieve core functions for scripts
	generated by sieve.scm.
	* guimb/scm/redirect.scm: (new) Implementation of sieve "redirect"
	action.

	* configure.in: Output guimb/scm/Makefile.

	* mail/mail.c: Use mailbox_create_default for --file=MBOX.
	Some calls to exit() were placed *before* issuing diagnostics.
	Fixed.

	* mailbox/folder_imap.c: Changed ENOTSUP to ENOSYS.

2001-08-02  Sam Roberts

	* folder_imap.c: don't pretend to be authorized if we are not, it
	only leads to confusion
	* mailbox.c: mailbox created the folder, it should set it's
	folder's debug object when it's is set, otherwise there is no way
	to get debug messages from a mailbox's folder (I was getting all
	the pop protocol traces but not the imap ones)
	* TODO: updated
	* sieve/: script.c, sieve.c: Fixed bug, I was deleting a message
	after a fileinto, which was wrong.  Tweaked the logging, it's
	little cleaner and more useful.
	* sieve/COPYING: Removed the RCS keyword in the imported copyright
	notice.
	* sieve/: sieve-gram.y, sieve-lex.l: Now using xmalloc() from
	../lib.
	* examples/mbox-explode.c: Don't mkdir unless the mailbox can be
	opened, and better cleanup on error detection.
	* sieve/examples/: Test, test.out: Commiting my example/test sieve
	scripts so I can maintain them with cvs (I use them at work and
	home).
	* mail/util.c: Not all systems have <sys/fcntl.h>, changed to use
	HAVE_FCNTL_H.
	* mailbox/mbx_pop.c: imap logged the passwd in protocol traces, pop
	didn't, so I made them both be the same (the way that is most
	useful when debugging protocol traces)
	* sieve/examples/: INBOX.orig, Makefile, box.sv, ex-1.10.2.sv,
	ex-2.3a.sv, ex-2.5.1.sv, ex-2.7.3.sv, ex-3.1a.sv, ex-3.1b.sv,
	ex-3.2.sv, ex-4.1.sv, ex-4.2.sv, ex-4.4a.sv, ex-4.4b.sv, ex-4.5.sv,
	ex-5.1.sv, ex-5.7.sv, ex-9.sv, ex-null.sv, ex-save-all.sv,
	example.sv, exn-2.3b.sv, exn-5.4.sv, t-exists.sv, t-fileinto.sv,
	t-mailutils.sv: Commiting my example/test sieve scripts so I can
	maintain them with cvs (I use them at work and home).

2001-08-01  Alain Magloire

	* mailbox2/header.c: Put the stubs.
	* mailbox2/include/mailutils/header.h: Prototypes.
	* mailbox2/include/mailutils/sys/header.h: Prototypes.

2001-07-31  Alain Magloire

	More intelligence was put in decode to detect mime messages.
	This temporary until we articulate how to present mime messages.
	decode will probably replace print.c.  Parsing of mailcap is
	not yet done.

	* mail/decode.c: Aware of the content_type and the encoding
	for mime message, will superced [Pp]rint.

	* mail/mail.c: Set the columns variable at startup.
	* mail/mail.h: Prototype fpr util_screen_columns().
	* mail/mailline.c: Reset COLUMNS on SIGWINCH.
	* mail/util.c: New function util_screen_columns();

	* sieve/Makefile.am: Remove gcc specific flags.
	* sieve/xmalloc.c: Removed, use lib/xmalloc.c instead.
	* sieve/xmalloc.h: Removed.
	* sieve/sysexists.h: Removed.

2001-07-31  Alain Magloire

	* mailbox2/Makefile.am: add new files.
	* mailbox2/fstream.c (_fs_write): n uninitialize.
	(_fs_open): Use S_ISREG() macro.
	* mailbox2/include/mailutils/base.h: Remove superfluous.
	* mailbox2/iterator.c: Define struct _iterator.
	* mailbox2: New files: observer.c observable.c
	address.c parse822.c list.c attribute.c envelope.c

2001-07-30 Sergey Poznyakoff
	* guimb/main.c: Set g_argv[0] to the program file name for consistency
	with guile.
	* libmu_scm/mu_message.c: Added new primitives:
		mu_message_copy
		mu_message_delete
		mu_message_get_flag
		mu_message_set_flag
		mu_message_get_user_flag
		mu_message_set_user_flag
	* libmu_scm/mu_scm.c: Define MU-ATTRIBUTE- constants.
	* libmu_scm/mu_address.c: (new) Address-related functions.
	* libmu_scm/Makefile.am: Added mu_address.c

2001-07-27 Sergey Poznyakoff
	* lib/xmalloc.c: call mu_error() instead of error().
	* lib/malloc.c,lib/realloc.c: (new) Provide rpl_malloc() and
	rpl_realloc() (required by m4/malloc.m4, m4/realloc.m4)
	* lib/Makefile.am: Added malloc.c, realloc.c.

	* mail/mail.h: Include <xalloc.h>
	* mail/util.c: Removed util_[mc]alloc() in favor of x[mc]alloc().
	* mail/alias.c: Use x[mc]alloc() instead of util_[cm]alloc().
	* mail/alt.c: Likewise.
	* mail/mail.c: Likewise.
	* mail/mailline.c: Likewise.
	* mail/shell.c: Likewise.
	* mail/unset.c: Likewise.
	* mail/var.c: Likewise.

	* TODO: updated.

2001-07-25 Alain Magloire

	Based on Jakob's idea, an implementation for decode.
	But it is clearly not flexible enough:

	  decode [msgno] [part]
	  ? decode 28 2

	IF message 28 is a multipart(mime) with two parts, the second part
	will be decoded and sent to stdout.

	* mail/decode.c: First implementation behind Jakob's proposal.

2001-07-23 Sergey Poznyakoff
	* configure.in,libmu_scm/Makefile.am,guimb/Makefile.am : Fixed to
	compile properly on systems with missing/incomplete guile.
	* include/mailutils/Makefile.am: Added mailutils.h to
	pkginclude_HEADERS.

2001-07-23 Alain Magloire

	* libmu_scm/mu_scm.h: Remove HAVE_LIBGUILE_H guard.
	* guimb/guimb.h: Remove HAVE_LIBGUILE_H guard.

2001-07-23 Alain Magloire

	* util.c (util_msglist_command):  Check for interruption here
	also and that will permit interruption on long commands like
	"from *"

2001-07-23 Alain Magloire

	The reason the interrupt code did not work for me, is that
	by default using signal will make function calls restartable,
	at least on my default RH5.1, when read() was interrupted
	it did not return EINTR inside ml_getc().

	* mail.c (main): Use sigaction if available to set SIGPIPE.
	* mailline.c (sig_handler): Reset "lines" variable.
	Recall signal() if we did not have sigaction.
	(ml_readline_init):  Use sigaction to set SIGWINCH and SIGINT.

	* libmu_scm/mu_scm.h:  Guard with HAVE_LIBGUILE_H.
	* guimb/guimb.h : Guard with HAVE_LIBGUILE_H.

2001-07-22 Sergey Poznyakoff
	Renamed debug_.* symbols to mu_debug_.* to avoid nameclashes.
	Files affected:
	* examples/mbox-dates.c, mbox-explode.c;
	* from/from.c;
	* include/mailutils/{debug.h,folder.h,mailbox.h,mailer.h};
	* libmu_scm/mu_message.c;
	* mail/send.c;
	* mailbox/{debug.c,folder.c,mailbox.c,mailer.c};
	* mailbox/include/{debug0.h,folder0.h,mailbox0.h,mailer0.h};
	* mailbox2/include/mailutils/base.h;
	* readmsg/readmsg.c;
	* sieve/sieve.c;

	* configure.in: Added --without-guile. Uncommented making
	libmu_scm and guimb. Added check for -ldl before
	checking for -lpam: both FreeBSD and OpenBSD lack libdl, but
	have working libpam.

	* messages/Makefile.am: Added missing @ARGP.*@ substitutes.

2001-07-21  Jakob 'sparky' Kaivo  <jkaivo@elijah.nodomainname.net>

	* mail/Makefile.am (mail_SOURCES): add decode.c

	* mail/mail.h: add mail_decode protoype

	* mail/decode.c (mail_decode): new file, new function

	* mail/table.c: add decode command

	* mail/util.c (util_expand_msglist): insert placeholder for
	attachment operations

2001-07-20  Jakob 'sparky' Kaivo  <jkaivo@elijah.nodomainname.net>

	* messages/messages.c: new file, implement of elm messages command
	(parse_opt): add --silent and --quit options
	(messages_count): new function

2001-07-20 Alain Magloire

	* mailbox/misc.c: Removed, _cpystr() function move in mutil.c
	and rename to util_cpystr().
	* mailbox/include/misc.h: Removed.
	* include/mailutils/mutil.h: Added prototype for util_cpystr().
	* mailbox/mutil.c (util_cpystr): New function, move
	the _cpystr() from misc.c and move here.
	* mailbox/Makefile.am: Removed misc.c in dependencies.
	* mailbox/include/Makefile.am: Removed misc.h in dependencies.
	* mailbox/address.c: Use util_cpystr() instead of _cpystr().
	Added <mailutils/mutil.h> prototype.
	* mailbox/auth.c: Likewised.
	* mailbox/url.c: Likewised.
	* mailbox/folder.c: Likewised.

2001-07-19 Sergey Poznyakoff
	Added guile interface library.

	* Makefile.am: Added scripts libmu_scm guimb.
	* configure.in: Checks for presence of Guile components.
	Making libmu_scm and guimb commented out until we solve
	debug_print name clash
	(libguile/debug.h vs. mailutils/debug.h).

	* scripts: (new) Contains scripts for preparing guile
          documentation strings from C sources. The reason for
	  their presence is that guile-doc-snarf scripts distributed
	  with guile up to version 1.4 do not work. The comment at
          the beginnig of scripts/guile-doc-snarf describes why. We'll
	  have to use these until next version of guile fixes the bug.
	* scripts/{Makefile.am,guile-doc-snarf,guile-func-name-check,
          guile-snarf.awk: (new)
	* scripts/.cvsignore: (new)

	* libmu_scm: (new) Guile interface library:
	* libmu_scm/Makefile.am: (new).
	* libmu_scm/mu_scm.c: (new) Main module.
	* libmu_scm/mu_mailbox.c: (new) Mailbox primitives.
        * libmu_scm/mu_message.c: (new) Message primitives.
        * libmu_scm/mu_body.c: (new) Message body primitives.
	* libmu_scm/mu_scm.h: (new) Library prototypes.
	* libmu_scm/.cvsignore: (new)

	* guimb: (new) Process mailbox(es) using Guile program or
	  expression.
	* guimb/Makefile.am: (new)
	* guimb/main.c: (new) Main functions.
	* guimb/collect.c: (new) Collect input.
	* guimb/util.c: (new) Some utilities.
	* guimb/run_scm.c: (new) Initialization of libguile and libmu_scm
	* guimb/guimb.h: Prototypes.
	* guimb/.cvsignore: (new)

	* examples/reply.scm: Automatic mail responder for use with guimb.

2001-07-18 Sam Roberts

	* include/mailutils/url.h: New api functions for parsing.
	* doc/: Makefile.am, framework.texi, url.texi: Updated and
	  corrected URL documentation.
	* doc/ex-url.texi: The url api example. Derived from
	  ../example/url-parse by a perl script.
	* mailbox/url.c: Added a function to do generalized URL parsing.
	* mailbox/: url_imap.c, url_pop.c: Use the url_parse() function to
	  parse the URL.
	* mailbox/mbx_pop.c: Added checks for low-memory conditions, and
	  look for passwd in url before prompting user.
	* mailbox/folder_imap.c: Look for passwd in the url before
	  prompting.
	* examples/: .cvsignore, Makefile, Urls, url-parse.c: Added example
	  of URL parsing, and test for parsing.
	* examples/Urls.good: Added test for % decoding.
	* mailbox/mbx_mbox.c: Needed <stdlib.h> on QNX6.
	* mailbox/include/: registrar0.h, url0.h: Comment on schemes, and
	  removed comment on encoding.

2001-07-18 Alain Magloire

	* mailbox/mbx_mbox.c (mbox_messages_count): This function does
	not call the observers, the callback function, on the mbox_scan()
	does.

	* frm/frm.c (main): call mailbox_scan () instead of
	mailbox_messages_count () since we want to be notified.

2001-07-12 Sam Roberts

	* examples/mbox-dates.c: Added pop and imap records.
	* include/mailutils/mutil.h, mailbox/mutil.c: New functions -
	mu_hex2ul(), mu_hexstr2ul().
	* mailbox/message.c: unistd.h needed on QNX6
	* TODO: Added Sergey's todo items and mine for sieve.

2001-07-12  Jakob 'sparky' Kaivo  <jkaivo@elijah.nodomainname.net>

	* include/mailutils/mailutils.h: new "catchall" header, includes
	all mailutils headers

2001-07-10 Sam Roberts

	* examples/Addrs.good: Now mapping ENOENT to EPARSE in error
	reporting, its clearer.

2001-07-09 Sergey Poznyakoff
	* configure.in: check for termios.h termio.h sgtty.h
	Added MU_MAINTAINER_MODE.
	* m4/maintain.m4: (new) Settings specific to maintainer-mode.
	* m4/Makefile.am: Added maintain.m4.

	* mailbox/attribute.c: Fixed flags_to_string(): MU_ATTRIBUTE_SEEN
	and MU_ATTRIBUTE_READ were swapped: the former produced 'R',
	and the latter 'O'.

	* mail/file.c: run "summary" after opening new mailbox.
	Issue diagnostics if mailbox cannot be opened.
	Display summary when called without arguments.
	* mail/from.c: Changed flags display.
	* mail/mailline.c: Provide ml_reread() when compiled without
	readline.
	Check for interrupt in (both versions of) ml_reread().
	Use util_[cm]alloc() instead of [cm]alloc().
	* mail/{print.c,visual.c}: set READ instead of SEEN attribute on
	read messages.
	* mail/z.c: case D_FWD missed break; Fixed typos in the comment
	to D_NONE.
	* mail/version.c: display options with which the program is
	compiled.
	* mail/util.c: Added util_malloc(), util_calloc().
	* mail/mail.h: Protos for the above;
	* mail/alias.c: use util_[cm]alloc() instead of library functions
	wherever appropriate.
	* mail/alt.c: Likewise.
	* mail/mail.c: Likewise.
	* mail/shell.c: Likewise.
	* mail/unset.c: Likewise.
	* mail/var.c: Likewise.
	Implemented ~A (read signature from file).
	* mail/quit.c: Raise hold flag when not closing system mailbox (%).

2001-07-06  Alain Magloire

	* mail/mailline.c: "interupt" is actually a key word
	for some C compiler i.e. Watcomm C, rename it to "interrupted".
	* mail/util.c: The macros O_CREAT etc needs <sys/fnct.h>.

2001-07-06  Alain Magloire

	* mail/mail.c: Be a little more verbose when mailbox_{create,open}()
	fails at startup.
	* doc/Makefile.am: Add the missing *.texi in the list of EXTRA_DIST.

2001-07-06 Sergey Poznyakoff
	* imap4d/fetch.c: imap4d_fetch0(): return RESP_OK on success.
	* imap4d/bye.c: split imap4d_bye() into imap4d_bye() and imap4d_bye0().
	* imap4d/logout.c: call imap4d_bye0() instead of imap4d_bye().
	Reason: rfc 2060 requires that the server send a BYE untagged response
	before the (tagged) OK response. With our implementation it was
	vice-versa.
	* imap4d/imap4d.h: proto for imap4d_bye0().
	* mail/mail.c: changed startup banner.
	* mail/mailline.c: handle SIGWINCH.
	* mail/util.c: Include <termios.h> when present.
	* configure.in: test for the presence of <termios.h>

2001-07-05  Alain Magloire

	* mail/send.c(mail_send0): Put the mailer in debug mode
	if util_find_env("verbose")->set, good for debuging.

2001-07-05  Alain Magloire

	According to the man page:
	"sendmail contains a command, possibly with options, that mailx
	invokes to send mail. You must manually set the default for this
	environment variable by editing ROOTDIR/etc/mailx.rc to specify the
	mail agent of your choice. The default is sendmail, but it can be any
	command that takes addresses on the command line and message contents
	on standard input."

	* mail/mail.c (main): Register smtp_record too as a mailer.
	Set variable sendmail to _PATH_SENDMAIL as the default mailer.
	* mail/mail.h: New proto util_setenv(), util_find_env()
	change to be const char *.
	* mail/send.c (msg_to_pipe): New function, open a pipe()
	and write a message to it.
	(mail_send0): Now create the mailer according to
	util_find_env("sendmail")->value.  Use a pipe() if mailer_create()
	fails.
	* mail/set.c (mail_set): After free(entry->value) set the value
	to NULL.
	* mail/util.c (util_find_env): Change the prototype to be const.
	Remove hack about need_free and use a static variable to hold
	"asksub".
	* mail/util.c (util_setenv): New function to set environment
	model on libc call setenv().

	* mailbox/message.c (message_sender): Set the default sender base on
	the passwd entry.

2001-07-05  Alain Magloire

	We can send a message and if the address starts with '|'
	the message is pipe to the cmd and if starts with '/' it is
	save to a file.
	     mailx ghislaine '|cat >save'
	mails a message to ghislaine and also copies the message into a file
	called save.

	* mail/mail.h: Change struct send_environ to contain
	two new fields char **outfiles and int nfiles.
	* mail/send.c: Look for '/' and '|' when parsing the addresses
	and add them to struct send_environ outfiles.
	(mail_send0):  Memory overflow, we were free(buf) twice.
	made char *buf local where it is needed.  Save the message
	to outfiles when set.
	(isfilename): New function.
	* mail/followup.c: Initialise the struct send_environ new fields.
	* mail/reply.c: Initialise the struct send_environ new fields.

	* lib/argcv.c: Add support to consider string between
	single quote like one word(same as double quotes).

2001-07-04  Alain Magloire

	* mailbox2/stream.c: stream_read() and stream_write()
	change prototype to be "void *" instead of "char *".
	* mailbox2/bstream.c: Adjust bstream_{read,write} to the
	new prototypes.
	* mailbox2/pop3/pop3_stream.c: Likewised.
	* mailbox2/Makefile.am: New file.
	* mailbox2/pop3/Makefile.am: New file.
	* mailbox2/mstream.c: Mapfile stream Implementation.
	* mailbox2/fstream.c: File stream implementation.
	* mailbox2/include/mailutils/sys/fstream.h: New file.
	* mailbox2/include/mailutils/sys/mstream.h: New file.
	* mailbox2/tcp.c: rename to tcpstream.c.
	* mailbox2/include/mailutils/sys/tcp.h: Rename to tcpstream.h

	* mailbox/mapfile_stream.c (_mapfile_write):  Make sure
	the size is not zero before making the memcpy().

2001-07-03  Alain Magloire

	* mail/headers.c:  Catch the overflow in the calculation by
	reseting the number of lines to default screen lines.
	* mail/mail.c (main): Add a "summary" call also for the
	initial commands on startup(in interactive).
	* mail.h: Proto for mail_summary() and mail_version().
	* table.c: Add mail_summary() and mail_version() in the cmd table.
	* util.c (util_getcols): First try an ioctl(TIOCGWINSZ,..) call
	not all shells set the COLUMNS environ.
	(util_getlines): Likewised. Also take to account the prompt
	in the lines number.
	* z.c (mail_z): Change the behaviour of "z." to show a screenfull
	when the lastpage is reach.  This is very practical when starting
	mail, since "z." is the initial command to show the header summary.
	* mail/version.c: New file, show mail version, mail_version().
	* mail/summary.c: New file, display a short summary of the mailbox.
	mail_summary().
	* mail/Makefile.am: add summary.c and version.c

	* mailbox2/include/mailutils/mbox.h: Proto for Unix-Mbox.

2001-07-03  Jakob 'sparky' Kaivo  <jkaivo@elijah.nodomainname.net>

	* README-alpha: note that INSTALL is generated

2001-07-03 Sergey Poznyakoff
	* configure.in: --with-mail-rc option: set path to system-wide
	mail.rc file.
	* mail/Makefile.am,mail/mail.c: Likewise.
	* mail/send.c: check for "dot" variable. Implemented "~.",
	"appenddeadletter".
	* mail/inc.c: (new) inc[orporate] command.
	* mail/{mail.c,mail.h,table.c}: Ditto.
	* mail/print.c: Handle interrupts when fetching message body.
	* mail/followup.c: insert ',' between recepients' addresses.
	* mail/quit.c: use mailbox_save_attributes(). Implemented
	"hold" variable. Raise MU_ATTRIBUTE_READ on every message with
	MU_ATTRIBUTE_SEEN bit set (compatibility with existing mails).
	* mail/from.c: Changed order of checking message attribute bits to
	be compatible with existing implementations.
	* mail/z.c: removed break from the loop.
	* mailbox/attribute.c: added attribute_set_modified() function.
	Fixed attribute_unset.* functions to raise MU_ATTRIBUTE_MODIFIED bit.
	* include/mailutils/attribute.h: Proto for attribute_set_modified().

2001-07-02 Alain Magloire

	* mailbox2/tcp.c: make it thread-safe.
	* mailbox2/bstream.c: Implement buffered stream.
	* mailbox2/pop3_stream.c: Use a buffered stream.

2001-07-02 Alain Magloire

	Feedback from Sergey for the need of saving the attribute flags
	without expunging.  Note, this is a hack, the code is taken from
	mbox_expunge(mbx_mbox.c) and there is lot of duplication.  But
	since we are moving toward a new mailbox API, the code will be
	rewritten more cleanly in the new API.

	* include/mailutils/mailbox.h: Add proto mailbox_save_attributes()
	* mailbox/include/mailbox0.h: New field in struct _mailbox
	_save_attributes (mailbox_t);
	* mailbox/mailbox.c: New function mailbox_save_attributes ().
	* mailbox/mbx_mbox.c: New function mbox_save_attributes (),
	implement saving the attribute flags in header field "Status:"

	* imap4d/bye.c: call mailbox_save_attributes() when exiting.
	it will save the attribute flags.
	* imap4d/close.c: Typo.
	* imap4d/logout: Remove the mailbox_close() and mailbox_destroy()
	it is being call imap4d_bye ().
	* imap4d/select.c (imapr3d_select0): call mailbox_save_attributes()
	if a mailbox was already selected.

2001-07-01 Alain Magloire

	* mail/util.c (util_strupper):  The first implementation was
	buggy, corrected.

2001-07-01 Alain Magloire

	* mailbox2/pop3/*: Pop3 functions are thread-safe and cancel-safe.
	The problem is monitor.h, we will probably end up doing a monitor.h.in
	and set at compile time if threading is enable or not.

2001-07-01 Alain Magloire

	* mail/util.c (util_expand_msglist): Cleanup the expand by pattern
	by moving some code in util_strupper(), the comparison must be
	case insensitive.
	(util_strupper): Convert the string to uppercase.

2001-07-01 Sergey Poznyakoff
        * mailbox/attribute.c: set MU_ATTRIBUTE_MODIFIED bit in the underlying
        structure when setting the flags.
        * mail/mail.c: Initialize readline and set user name before
        determining working mode.
        For an empty mailbox output diagnostics and quit.
        Read system-wide mail.rc file.
        Implemented "set ignoreeof".
        * mail/send.c: Implemented "set ignore", "set ignoreeof", "set nosave".
        Use doubled escape character to insert a single escape to the
        message body.
        * mail/delete.c: Implemented "set autoprint"
        * mail/dp.c: removed util_do_command("next"): delete does this anyway.

2001-06-30 Sergey Poznyakoff
	* configure.in:
		define READLINE_LIBS instead of linking libreadline
		to every binary.
		AC_CHECK_LIB(pthread) was missing comma before
		ACTION_IF_NOT_FOUND, thus have_libpthread was always no.
	* mail/Makefile.am: Use READLINE_LIBS
	* lib/argcv.[ch]: Treat a sequence of whitespace characters as
	a single whitespace. Break string on given delimiters. Do not
	split quoted arguments.
	* mail/set.c: Modified to use new argcv_get() syntax.
	* mail/delete.c: After deleting move realcursor to the next
	non-deleted message.
	* mail/alt.c: Honour "metoo" variable. Try to determine users
	full email address.
	* mail/mail.c: do not put empty or comment lines into readline
	history. Handle keyboard interrupts properly.
	Implemented `warranty' command. Warn user about arrival of a new
	mail.
	* mail/send.c: Handle keyboard interrupts. Use util_tempfile().
	* mail/{send.c,reply.c}: change args in call to mail_send0(): packed
	all header strings into one structure to facilitate escape handling.
	Warn user about null message body.
	* mail/mailline.c: (new) readline-related functions.
	* mail/var.c: (new) Functions for escape variable handling.
	* mail/util.c: added extra argument to util_find_entry(): a pointer
	to the table where to look up. Added util_error(), util_help(),
	util_tempfile().
	* mail/*.c: use util_error() instead of printing diagnostics to ofile.
	* mail/{source.c,if.c}: removed mail_is_terminal(),
	mail_set_is_terminal(): `interactive' is used instead.
	* mail/mail.h: in struct mail_command_entry changed `isflow' field
	to `flags'. It contains information about semantics of the command.
	* mail/table.c: Initialize `flags' field.


2001-06-29  Alain Magloire

	* mail/util.c (util_expand_msglist): Implement expansion of
	:d       All deleted messages
	:n       All new messages
	:o       All old messages
	:r       All messages that have already been read
	:u       All unread messages
	/string  All messages with string in the subject line
                 (the case of characters in string is ignored)

2001-06-27  Alain Magloire

	* configure.in:  We were not checking for thread support
	at all because the test was faulty.

	* readmsg: New directory.
	* readmsg/readmsg.c: New file.
	* readmsg/readmsg.h: New file.
	* readmsg/msglist.c: New file.
	This is base on a old testing program Dave inglis wrote
	to test the mime parsing code.  It is still work in progress
	but a good base for the readmsg(1) elm utility clone.
	Not enable yet in the TOP Makefile.

2001-06-26  Alain Magloire

	* mail/from.c:  Use address_get_personal() for a more
	pretty print when showing the headers.

2001-06-26 Sergey Poznyakoff
	* mail/util.c:
		Added extra argument to util_msglist_command(), controlling
		whether it should move the cursor to the last message
		processed.
	* mail/delete.c,mail/dp.c,mail/edit.c,mail/from.c,mail/hold.c,
	  mail/mbox.c,mail/print.c,mail/reply.c,mail/size.c,mail/top.c,
	  mail/undelete.c,mail/util.c,mail/visual.c: Likewise.
	* mail/util.c: util_screen_lines() function.
		util_outfolder_name().
		util_save_outgoing()
	* mail/z.c: removed z_lines() in favor of util_screen_lines().
	* mail/headers.c: use util_screen_lines().
	* mail/touch.c: Initial implementation. Simply calls mail_mbox.
		Maybe the table.c entry should point to mail_mbox instead?
	* mail/write.c: use util_fullpath().
	* mail/send.c: call util_save_outgoing() to preserve sent message.
		Set umask 077 before calling mkstemp().
	* mail/folders.c: Use $LISTER.
	* mail/followup.c: Implemented.
	* mail/from.c: Changed output format.
	* mail/mbox.c: move mail_mbox_commit to quit.c.
	* mail/quit.c: Likewise. Honour "keepsave" variable.

2001-06-25  Alain Magloire

	* mail/header.c: We were looping forever in here.  The loop
	is not need it, header only prints one page that includes
	the message specified i.e. the header command only takes
	a message number as an argument that will serve as a reference
	to display a screen full.

	* mail/help.c: Use the pager code, the help is long.

2001-06-25  Alain Magloire

	* doc/Makefile.am: add {c-api,framework,programs}.texi EXTRA_DIST
	* imap4d/imap4d.c (imap4d_usage): Cut and paste typo.
	* pop3d/pop3d.c (pop3d_usage): Cut and paste typo.
	* include/mailutils/Makefile.am: add mutil.h to the list.
	* lib/strisignal.c: Define __P if not set.
	* m4/Makefile.am: Added tm_gmtoff.m4 tm_isdst.m4 tm_zone.m4

2001-06-25 Sergey Poznyakoff
	* mail/if.c: Removed confusing comment.
	* mail/copy.c: Split off mail_copy0. It is shared between mail_copy
		and mail_save. Implemented Copy command.
		Use mailbox_open_default() instead of mailbox_open().
		Fixed possible memory leaks.
	* mail/write.c: Implemented Write. Fixed memory leaks.
	* mail/Makefile.am: removed discard.c
	* mail/discard.c: removed. Implemented in retain.c.
	* mail/retain.c: Implemented retain/ignore. It is more convenient
		to keep them in one module so they can share static data.
	* mail/alias.c: Implemented.
	* mail/unalias.c: Implemented.
	* mail/alt.c: Implemented.
	* mail/file.c:
		Check number of arguments.
		Display current mailbox name when called without args.
		Honour %, &, and + in mailbox names (possibly should
		be implemented in mailbox_open_default ?).
		Use mail_mbox_close(). After opening new mailbox,
		run "z." instead of "from *".
	* mail/folders.c: A (very rudimentary) implementation.
	* mail/headers.c: Removed if (num) clause: util_expand_msglist()
		now returns at least 1.
	* mail/pipe.c: Likewise.
	* mail/hold.c: Implemented.
	* mail/mail.c: Escape % signs in the command line before passing
		it to util_do_command().
	* mail/mail.h: Protos for implemented functions. Proto for
		readline() if libreadline is not linked in.
		Definition for MAIL_ATTRIBUTE_MBOXED.
	* mail/mbox.c: Implemented.
	* mail/print.c: Print only header fields allowed by retain/ignore
		settings.
	* mail/quit.c: mail_mbox_close() shared between this module and
		file.c.
		Print statistics information on closing the mailbox (number
		of messages held and saved in mbox).
	* mail/reply.c: Implemented.
	* mail/save.c: Use mail_copy0().
	* mail/send.c: Split off mail_send0(). It is used by mail_send()
		and mail_reply().
	* mail/util.c:
		util_expand_msglist(): return 1 and set msglist[0]=cursor
		if argc == 1.
		util_do_command(): Added missing va_end().
		util_get_sender(): Returns sender email for the given msgno.
			Optionally strips off domain part.
		util_slist_.*(): "string lists" used by alias,alt,retain,
			ignore.
		util_strcat(): Concat two strings, reallocating first
			to the necessary length.
		util_escape_percent(): Excape % signs in a string, so
			it can be used as format in .*printf calls.

2001-06-22 Sergey Poznyakoff
	* mailbox/mutil.c: added mu_get_homedir() and mu_tilde_expansion();
	* include/mailutils/mutil.h: protos for new mu_ functions
	* imap4d/util.c: use mu_tilde_expansion().
	* mail/z.c: implemented.
	* mail/if.c: implemented.
	* mail/mail.c: A read-eval loop function shared between mail.c and
		source.c. Quits gracefully upon reading EOF.
		Expand '~' in pathnames.
		Upon startup in read mode, display first screenfull of from
		lines, instead of listing the whole mailbox. This is
	        compatible with existing implementations.
		Do not display prompt when not reading from a terminal.
	* mail/source.c: Use common read-eval loop.
	* mail/mail.h: Protos for new functions.
		struct mail_command_entry: added isflow field, needed
		for if/else/endif flow control.
	* mail/table.c: changes due to addition of isflow field.
	* mail/send.c: removed unconditional #include <paths.h>: it already
		was included from "mail.h".
	* mail/util.c: Added util_get_homedir() and util_fullpath().

2001-06-21 Sergey Poznyakoff
	* mailbox/mutil.c: Fixed error introduced in the initial
	  implementation of mu_mktime (now mu_tm2time). The comment
	  on mu_tm2time() describes it.
	  Revert the sign of the return value of mu_utc_offset(), so it
	  agrees with the accepted timezone rules (+ for eastern
	  hemisphere, - for western).

2001-06-19 Sam Roberts

	* include/mailutils/debug.h, mailbox/debug.c: New function:
	  debug_printv() to complement debug_print().
	* examples/mbox-dates.c: parse822_date_time now takes a timezone
	  argument. We don't actually use the arguments, though.
	* include/mailutils/parse822.h: parse82_date_time() now uses the
	  mu_timezone structure for portability.
	* include/mailutils/mailbox.h: Prototyped mailbox_destroy_folder().
	* mailbox/mu_mktime.c: Moved mu_mktime to mutil.c as mu_tm2time,
	  and removed mu_mktime.c
	* include/mailutils/mutil.h, mailbox/Makefile.am,
	  mailbox/mbx_imap.c, mailbox/mutil.c, mailbox/parse822.c: Moved some
	  generically useful date/time handling functions to mutil.c, fixed
	  problems with portability of timezone information in struct tm, and
	  created a new structure to hold timezone information, since
	  struct tm doesn't do so reliably.
	* imap4d/: append.c, fetch.c, imap4d.h, namespace.c, search.c,
	  util.c: Moved date/time parsing utility functions to
	  mailbox/mutil.c.  Added braces to initializers and removed unused
	  variables prototyped shared functions, made functions that didn't
	  return return void. (to quiet gcc -Wall),

2001-06-17 Sam Roberts

	* sieve/Makefile.am: More fixes to the packaging structure by
	Sergey.
	* acconfig.h, configure.in, m4/tm_gmtoff.m4, m4/tm_isdst.m4,
	m4/tm_zone.m4: Added tests for isdst, gmtoffset, and zone in struct
	tm.
	* mailbox/folder_pop.c: Confusing typo in comment.

2001-06-16 Sergey Poznyakoff
        * mailbox/mu_mktime.c(added): a wrapper around system mktime()
          function that honours the timezone.
        * mailbox/Makefile.am: add mu_mktime.c.
        * imap4d/fetch.c: date conversion in fetch_internaldate.
          get_timezone() not used anymore, removed.
        * imap4d/search.c: removed confusing comment.
        * imap4d/util.c: changed mktime() calls to mu_mktime(), this
          solves the timezone problem.
          use imap_parse_date_time() in util_parse_internal_date0().
	  (Proposed by Sam).
	* imap4d/imap4d.h: Added missing declarations.
        * mailbox/mbx_imap.c: Patch from Sam: added imap_parse_date_time().
          imap_parse_date_time() returns tm/timezone pair.
	* mailbox/folder_mbox.c: added #include <sys/types.h>. It is needed
          on FreeBSD before inclusion of <dirent.h>
	* sieve/sieve.c: swapped arguments in a call to va_start().

2001-06-15 Sergey Poznyakoff
	Bunch of patches provided by Sam Roberts:
	* imap4d/util.c: Fixed format bugs in util_parse.*_date functions.
          Use parse822_date_time() in util_parse_header_date().
	  Some changes to pacify gcc -Wall.
	* imap4d/util.c,imap4d/search.c,imap4d/imap4d.h:
	  Rename the confusing functions:
		 util_parse_header_date -> util_parse_822_date
		 util_parse_rfc822_date -> util_parse_ctime_date
	  include <ctype.h>

2001-06-14 23:01  Sam Roberts

	* mailbox/parse822.c: I think timezone info is now placed in struct
	tm correctly.
	* include/mailutils/parse822.h: Prototypes for functions to parse
	rfc822 date-time.
	* sieve/: Makefile.am, test.c: Patches from Sergey to make the
	auto* stuff work, now uses lex/yacc portably, and puts all the
	necessary files into the distribution.
	* sieve/ylwrap: Portable wrapper for lex/yacc invocations, by Tom
	Tromey <tromey@cygnus.com>, modified by Sergey Poznyakoff
	<gray@farlep.net> to replace yy prefixes, so multiple grammers can
	co-exist.
	* sieve/sieve.c: Define EOK ifndefed.
	* examples/showmail.c: No longer relevant to the current APIs.
	* examples/mbox-dates.c: GNU indented.
	* examples/addr.c: GNU indented
	* examples/.cvsignore: Added example executables.
	* examples/mbox-explode.c: Made so it now saves all the attachments
	from all the messages in a folder. Also GNU indented.
	* doc/envelope.texi: Added some text to the envelope docs, still
	incomplete.
	* doc/url.texi: Noted the IMAP url syntax.
	* doc/mailutils.texi: Some of the RFCs were missing, or
	miscategorized in the references sect.
	* doc/.cvsignore: Ignoreing files.
	* doc/rfc1939.txt: Was checked in with DOS line terminators,
	converted to Unix.

2001-06-11  Alain Magloire

	* imap4d/util.c (util_msgset): When '*' was define in the
	set it was not added to the count.
	Bug reported by Jakob Kaivo.

2001-06-09  Alain Magloire

	* mailbox2/pop3/pop3_open.c: Remove for pop3_connect.c
	* mailbox2/pop3/pop3_close.c: Remove for pop3_disconnect.c
	* mailbox2/pop3/pop3_connect.c: New.
	* mailbox2/pop3/pop3_disconnect.c: New.
	* mailbox2/include/mailutiils/error.h: New macro
	MU_ERROR_OPERATION_CANCELED
	* mailbox2/include/mailutils/pop3.h: Move the enum state in sys/pop3.h

2001-06-09 Sam Roberts

	* rfc1738.txt, rfc2045.txt, rfc2046.txt, rfc2047.txt, rfc2049.txt,
	rfc2088.txt, rfc2111.txt, rfc2192.txt, rfc2193.txt, rfc2221.txt,
	rfc2298.txt, rfc2342.txt, rfc2368.txt, rfc2384.txt, rfc2821.txt,
	rfc2822.txt, rfc3028.txt, rfc821.txt, rfc822.txt: These RFCs are
	relevant to mailutils, and many (all?) are referenced in the
	mailutils documentation.

2001-06-09  Alain Magloire

	* examples/mbox-explode.c: message_save_attachment, should take
	the part.  Continue if the message does have a Date or Subject field.

	* mailbox/mapfile_stream.c (_mapfile_open): Identation.

2001-06-09  Alain Magloire

	* mailbox/tcp.c (_tcp_get_fd): Buglet, comparing fd against EINVAL
	instead of -1.

	* mailbox2/pop3/pop3_apop.c: New.
	* mailbox2/pop3/pop3_capa.c: New.
	* mailbox2/pop3/pop3_close.c: New.
	* mailbox2/pop3/pop3_create.c: New.
	* mailbox2/pop3/pop3_dele.c: New.
	* mailbox2/pop3/pop3_destroy.c: New.
	* mailbox2/pop3/pop3_iterator.c: New.
	* mailbox2/pop3/pop3_list.c: New.
	* mailbox2/pop3/pop3_lista.c: New.
	* mailbox2/pop3/pop3_noop.c: New.
	* mailbox2/pop3/pop3_open.c: New.
	* mailbox2/pop3/pop3_pass.c: New.
	* mailbox2/pop3/pop3_quit.c: New.
	* mailbox2/pop3/pop3_readline.c: New.
	* mailbox2/pop3/pop3_response.c: New.
	* mailbox2/pop3/pop3_retr.c: New.
	* mailbox2/pop3/pop3_rset.c: New.
	* mailbox2/pop3/pop3_sendline.c: New.
	* mailbox2/pop3/pop3_stat.c: New.
	* mailbox2/pop3/pop3_stream.c: New.
	* mailbox2/pop3/pop3_timeout.c: New.
	* mailbox2/pop3/pop3_top.c: New.
	* mailbox2/pop3/pop3_uidl.c: New.
	* mailbox2/pop3/pop3_uidla.c: New.
	* mailbox2/pop3/pop3_user.c: New.

	* mailbox2/tcp.c: New.
	* mailbox2/iterator.c: New.
	* mailbox2/stream.c: New.

	* mailbox2/pop3/pop3client.c: Test case should probably somewhere else
	in example/ perhaps?

2001-06-09  Alain Magloire

	* mailbox2/*: First attempt to define the new API.
	POP3 was implemented.

2001-06-07  Sam Roberts

	* .cvsignore, AUTHORS, COPYING, Makefile.am, NEWS, README,
	addr-lex.l, addr.y, comparator.c, comparator.h, exitcodes.h,
	hmac-md5.h, imparse.c, imparse.h, interp.c, interp.h, md5.c, md5.h,
	md5global.h, message.c, message.h, parseaddr.c, parseaddr.h,
	script.c, script.h, sieve-gram.y, sieve-lex.l, sieve.c,
	sieve_err.c, sieve_err.h, sieve_interface.h, svfield.c, svfield.h,
	sysexits.h, test.c, tree.c, tree.h, util.c, util.h, xmalloc.c,
	xmalloc.h: Initial commit of the port of CMU's sieve engine. It
	builds, and some actions work, but has seen very little use.

2001-06-03  Sam Roberts

	* mailbox/file_stream.c,mailbox/mapfile_stream.c: Return EINVAL
	  for meaningless combination of MU_STREAM_READ + WRITE.

2001-06-03  Alain Magloire

	* doc/*; Bunch of typos corrected.
	Patch from Thomas Fletcher.

2001-06-02  Sam Roberts

	* mailbox/parse822.c,include/mailutils/parse822.h: functions
	  to parse rfc822 date-time.
	* examples/mbox-explode.c: example of saving all mime attachments
	  for messages in a mailbox.
	* examples/mbox-dates.c: example of using the date-time parser, it
	  prints all the dates in a mailbox that it can't parse.
	* examples/Makefile: makes the mbox-* examples.

2001-06-01  Alain Magloire

	* mailbox/mbx_pop.c (pop_writeline): if buffer is NULL noop.

2001-06-01  Sergey Poznyakoff
	* imap4d/search.c: case-insensitive comparison for text fields.
	  Error checking for stray symbols at the end of criteria.

	* imap4d/util.c: util_strcasestr() function. Functions for
	  converting between text and integer representation of
	  attributes. Split util_parse_internal_date: the helper
	  function util_parse_internal_date0 also returns the
          pointer to the location in the string where parsing
          stopped.

	* imap4d/util.h: protos for util_strcasestr() and
	  util_parse_.*_date() functions.

	* imap4d/imap4d.c: force ofile to be line-buffered, so command
	  continuation requests are immediately visible.

	* imap4d/append.c: implemented. Currently this needs the
	  helper function mailbox_destroy_folder(), so that
	  mailbox_set_stream does its work. Also the situation
          with message attributes needs to be cleared.

2001-06-01  Alain Magloire

	* mailbox/debug.c(debug_print): Noop is format is NULL;
	* mailbox/mbx_imap.c (imap_messages_count):  Hack! Force a
	reconnect if the server timeout on us.  This is not the right
	approach and does not work well, fix later.
	(message_operation):  Check if selected is not null, first.
	* mailbox/folder_imap.c (folder_imap_create): Wrong state.
	* mailbox/mime.c: Pass down the return value if not ENOENT.

2001-05-30  Dave Inglis

	* mailbox/mbx_pop.c (CHECK_ERROR): Force the mailbox to call connect
	again when an error occured.  For example the QPopper(Qalcomm) POP3
	server timeout very quickly, 30 seconds violating the RFC.  So when
	Readin the stream again we reconnect.

2001-05-30  Dave Inglis

	* mailbox/filter_trans.c (base64_decode): The variable should
	be unsigned char not signed char.  By default gcc treats a
	declaration of "char*" like "signed char*", CC Watcom did not.
	(base64_encode): Likewised.
	* mailbox/mime.c: Read 'itl the end of the stream.

2001-05-29  Sergey Poznyakoff
	* imap4d/uid.c, imap4d/search.c: support for UID SEARCH command;
	* imap4d/util.c: forgotten fix to util_msgset().

2001-05-27  Sergey Poznyakoff
	* imap4d/search.c: Added missing <message set> condition.

2001-05-27  Sergey Poznyakoff

	* imap4d/imap4d.c, imap4d/capability.c, imap4d/copy.c,
	  imap4d/create.c, imap4d/delete.c, imap4d/imap4d.h,
          imap4d/list.c, imap4d/rename.c, imap4d/select.c,
          imap4d/status.c, imap4d/namespace.c (added):
		implemented NAMESPACE (rfc2342) support

	* imap4d/util.c:
		added util_normalize_path() function.
		util_msgset() bailed out at 1:1 -- fixed.
		Added util_parse_internal_date(), util_parse_header_date(),
		util_parse_rfc822_date().

	* imap4d/bye.c: typo in diagnostic output
	* imap4d/noop.c: issue unsolicited response (as per rfc2060)
	* imap4d/select.c: ditto
	* imap4d/store.c: set MU_ATTRIBUTE_MODIFIED on a message, so
		expunge will know it was modified.

	* imap4d/search.c: implemented. Charsets other than US-ASCII are
		not supported, though.

2001-05-27  Sam Roberts

	* mailbox/address.c: removed unfolding of lines at a NL before parsing.
	* mailbox/parse822.c: consider LF and CRLF equivalent for purposes
	of unfolding lines.

2001-05-23  Alain Magloire

	* mailbox/mbx_default.c (mailbox_create_default): Check
	for URL in the mailbox name.

2001-05-23  Dave Inglis

	* mailbox/mime.c (_mimepart_body_read): Use stream_is_seekable()
	to detect if the stream is POP for example and read 'til the end.
	(mime_get_part): Reuse the stream the original stream flags on the
	newly created message.
	Fix and patches provided by Dave Inglis.

2001-05-23  Sergey Poznyakoff

	* pop3d/user.c: check for NULL return from getpwnam()
	* imap4d/login.c: Likewised.

2001-05-21  Alain Magloire

	GNU md5 is GPL, but we agreed that the libraries should
	fall under LGPL.
	Same goes for basename() and pretty much everything under
	lib/*.[ch]

	* mailbox/message.c (message_get_uidl): Remove the dependency
	from GNU md5.
	* mailbox/md5-rsa.c: New File.
	* mailbox/md5-rsa.h: New File.
	* mailbox/attachment.c (message_create_attachment): Remove
	the dependency from lib/basename.c
	* mailbox/mbx_mbox.c (mbox_tempfile): Remove
	the dependency from lib/basename.c

	* lib/signame.c: Replace in favor of the wellknown strsignal().
	* lib/strsignal.c: New file, use the mu_signame() written by
	Sergey.

	* pop3d/signal.c: Use strsignal() unconditionnaly.
	* imap4d/signal.c: Use strsignal() unconditionnaly.

	* configure.in: autoconf-2.50 is having difficulty parsing
	a long AC_CHECK_LIB, break it in two.
	Check for strsignal()

	* doc/auth.texi: Bug fixes in texinfo.
	* doc/Makefile.am: Commented the ex-address.texi generation.
	* doc/ex-address.texi: New file.

2001-05-21  Alain Magloire

	* configure.in, imap4d/signal.c, pop3d/signal.c:
	sys_siglist is not defined on some systems (namely, Solaris).
	* lib/signame.c: (added) Provide mu_signame() function to convert
	signal number to string representation.
	* lib/strtok_r.c: bugfix

2001-05-19  Alain Magloire

	* AUTHORS: Update to reflect Sergey and Sam contributions.

2001-05-20  Sergey Poznyakoff

	* mailbox/mbx_mboxscan.c:* Bug in mailbox/mbx_mboxscan.c made the
	stuff coredump upon encountering more than one subject in the header.

	* pop3d/pop3d.c: Typo.

2001-05-19  Sam Roberts

	* mailbox/parse822.c: parse822 is a little smarter in the way
	it handles CRLF.

2001-05-19  Alain Magloire

	* mailbox/mbx_default (mailbox_create_default):  Base on a
	suggestion/patch by Sam Roberts to provide tilde, plus and equal
	(~ + = ) expansion.
	* mailbox/address.c: Unfold field-bodies with NL.
	* mailbox/parse822.c (parse822_field_body): New function.
	(parse822_field_name): New function.

	* pop3d/user.c:  Use mailbox_create() now instead of
	mailbox_create_default.
	* pop3d/apop.c: Likewise.

2001-05-16  Dave Inglis

	* mailbox/mime.c (_mime_parse_mpart): Better check for the
	boundary.

2001-05-14  Sergey Poznyakoff

	* pop3d/user.c: After unsuccessful authorization frees cmd twice,

2001-05-13  Alain Magloire

	* imap4d/fetch.c:  Lots of bug fixing.  To many to enumerate.
	* imap4d/imap4d.h: New prototypes.
	* imap4d/login.c: syslog() the user.
	* imap4d/select.c: Remove the call to mailbox_create_default.
	* imap4d/util.c (util_getitem): New function.
	(util_send_qstring): New function.
	(util_send_literal): New function.

	* mailbox/address.c:  Parse822 can not handle '\n' inside
	the buffer, prune them out before.
	* mailbox/mime.c (_mime_parse_mpart_message): The mime->stream
	was destroy when doing mime_get_part () better get it every time.
	(_mime_body_fd): Likewised.
	* mailbox/smtp.c: Do not close the stream on destroy.

2001-05-11  Alain Magloire

	* imap4d/fetch.c: More cleanup in the bodystructure code,
	arrange response indentation etc ...
	* impa4d/utils.c (util_send_string): New helper function.

2001-05-10  Alain Magloire

	* imap4d/fetch.c: Implemented INTERNALDATE.
	* mailbox/mbx_imap.c (imap_envelope_date): ctime() always
	append a newline, nuke it.
	* mailbox/stream.c (stream_read): If the amount requested is bigger
	then the buffer cache size, bypass the buffering mechanism.

2001-05-09  Alain Magloire

	Take the missing pieces from the pop3d and make the
	imap4d a standalone daemon.

	* imap4d/fetch.c: Remove fetch_body_peek().
	and use fetch_body() instead.
	(fetch_operation): Malloc the entire message... not good.
	* imap4d/bye.c: New file.
	* imap4d/imap4d.c: Put the networking code taken from
	pop3d.c.
	* imap4d/lsub.c: Implemented.
	* imap4d/subscribe.c: Implemented.
	* imap4d/unsubscribe.c: Implemented.

	* pop3d/pop3d.c: pop3d_usage() move from extra.c
	* pop3d/signal.c: pop3d_signal () move from extra.c

	* mailbox/url_imap.c: It was not checking for the port number.
	* mailbox/filter_rfc822.c: Check for the lines if available.

2001-05-07  Alain Magloire

	Now we can have multiple access to the mailbox and the server
	will update the mailbox and send the unsollicited responses.
	This is implemented in imap4d/sync.c.

	* imap4d/copy.c: Move the code into imap4d_copy0() to allow
	the use of UID COPY.
	(imaprd_copy0): New function.
	* imap4d/fetch.c: Define a new structure command for FETCH.
	(fetch_getcommand): New function.
	(imap4d_fetch0): New function to allow the use of UID COPY.
	(fetch_envelope0): New function to permit to reuse the function
	in bodystructure.
	(fetch_bodystructure): Implemented.
	(fetch_bodystructure0): The implementation.
	(bodystructure): The helper function for fetch_bodystructure.
	* imap4d/imap4d.c (imap4d_mainloop): call imap4d_sync() in the
	mainloop.  Now use FILE *ifile.
	* imap4d/imap4d.h: Update prototypes.  Define ERR_NO_MEM and
	ERR_NO_OFILE.
	* imap4d/select.c (imap4d_select0): Call imap4d_sync() to update.
	* imap4d/store.c (ima4d_store): Cal imap4d_sync_flags() to
	update the flags in the uid_table.
	* imap4d/uid.c: Implemented.
	* imap4d/util.c (imap4d_readline):  Use fgets() and deal
	with literals send from the client.
	* imap4d/sync.c: New file.

	* include/mailutils/header.c: Added some new headers.
	* mailbox/attribute.c (attribute_copy): Do a shalow copy.
	* mailbox/file_stream.c: Check if FILE * is null in all functions.
	* mailbox/mailbox.c (mailbox_is_updated): Should not return ENOSYS
	but rather 1.

2001-05-07  Sam Roberts

	* mailbox/parse822.c: Now allow a unix mailbox in an address.
	* include/mailutils/parse822.h: Declare the function to parse them.
	* doc/address.texi: Document the fact.
	* doc/Makefile.am: Automatically build the example code from addr.c.
	* examples/addr.c: And update the parser test.
	* examples/Addrs.good: Update the parser test.

2001-05-03  Sam Roberts

	* mail/mail.c: Typo

2001-05-03  Alain Magloire

	* argp/argp-help.c (hol_entry_help): Some compiler like Watcomm
	can not initialize a local structure struct ..  = { .. }.  Do it
	explicitely field by field.
	* argp/arpg-parse.c: Watcomm choke on N_() macro.
	(parser_init): Watcomm does not like operation on a void * pointer.

	* imap4d/login.c: Cast the return of crypt(), since some platforms
	do not provide a prototype in <unistd.h>

	* pop3d/user.c: Cast the return of crypt(), since in may not be
	declare in <unistd.h>.

	* lib/snprintf.c: Use only __STDC__ to detect <stdarg.h>
	* lib/snprintf.h: Use only __STDC__.

	* mail/mail.h: The global variable should be declare extern.
	* mail/pipe.c: Use 512 buffer instead of BUFSIZ, go easy on the stack.
	* mail/print.c: Use 512 buffer instead of BUFSIZ, go easy on the stack.
	* mail/write.c: Use 512 buffer instead of BUFSIZ, go easy on the stack.

	* mailbox/folder_imap.c: Declare strtock_r ().

2001-05-03  Sergey Poznyakoff

	* pop3d/user.c: Misplace parentheses around the mailbox_xx() calls.
	Do not free (buf) since it is now static storage. Unfortunately most
	of the pam modules do openlog() on their own, thus after
	authentication all logging output flows to where the last pam module
	has directed it, which is usually `auth' facility.
	Put back closelog()/openlog().
	* pop3d/pop3d.h: ifile is now FILE *.
	pop3d_realine () take FILE * as a prototype.
	* pop3d/pop3d.c (pop3d_mainloop): Refresh lock, pop3d_touchlock().
	Register SIGALRM in the child.
	Do not free (buf) since it is now static storage.
	* pop3d/extra.c (pop3d_readline): Change to use
	fgets () and alarm ().
	With small modification from Alain.
	(pop3d_signal): ofile will be NULL in the *child* process:
	whereas in the parent one, ofile will always be NULL, since it lives
	in the BSS (FILE *ofile;) and gets initialized only in the child
	process. Thus, when the parent receives any signal, SIGTERM for
	example, it does pop3d_abquit(ERR_SIGNAL) and dies doing
	fprintf(ofile, ...)

2001-05-02  Alain Magloire

	Some of the Makefile.am contain gcc specific options
	like -Wall, -pedantic or -ansi remove them.

	* configure.in: Check for stdarg and sysconf.
	* mailbox/mime.c (_mime_set_content_type): Delayed the
	creation of the header-field content-type until the message
	is requested via mime_get_message().
	* pop3d/lock.: new File to implement the locking.
	* pop3d/apop.c: Rearrange the code around the #ifdefs
	to be clearrer.
	Make sure that when we use strncpy() that the buffer is
	null terminated.  Added the locking propose by Sergey to apop.
	* pop3d/capa.c: Announce we support PIPELINING.
	* pop3d/extra.c (pop3d_abquit): Remove ERR_DEAD_SOCK.
	Remove the extra fflush(), the call to exit()  always
	flush the buffers.
	(pop3d_readline):  Implement PIPELINING.
	* pop3d/pop3d.c:  Remove the typedef struct sockaddr SA
	for more clarity since it is not use that often.
	port is not longer a global variable.
	children should have the volatile qualification.

2001-04-29  Alain Magloire

	* pop3d/extra.c (pop3d_readline): Modify the loop to be able
	to support PIPELINING.
	* pop3d/capa.c: Advertise that we support PIPELINING.

2001-04-29  Sergey Poznyakoff

	Return values of all signal handlers are changed to RETSIGTYPE
	and configure.in is modified accordingly. This is more portable.

	* configure.in: New Macro AC_TYPE_SIGNAL.

	* mailbox/locker.c (locker_lock): while trying to read pid value
	from the pidfile passed wrong buffer length to read() call, namely:
	read(fd, buf, sizeof (pid_t)).

2001-04-29  Sergey Poznyakoff

	I have modified locker.c to implement reference count. The
	struct _locker is now:
	struct _locker { int fd; int refcnt; char *fname; int flags; };
	The refcnt member gets incremented each time locker_lock is called and
	decremented each time locker_unlock is called. Actual locking is
	performed only if refcnt == 0 on entry to locker_lock. Similarly,
	unlocking is performed only when refcnt gets decremented to 0 by
	locker_unlock. Also I have added basic support for NFS-secure
	locking.

	* mailbox/locker.c: Reference count implementation.

2001-04-25  Alain Magloire

	* imap4d/store.c: First implementation.
	* mailbox/attribute.c (attribute_unset_flags): New function.

2001-04-23  Sergey Poznyakoff

	* mailbox/mbx_mbox.c (mbx_expunge): It assumes that mbox_get_message()
	will place the pointer to message into mum->message member. But
	mbox_get_message() relies on 1-based message numbers, whereas `mum'
	pointer is obtained using 0-based indexing.

2001-04-23  Alain Magloire

	Sergey Poznyakoff noted: When the user's mailbox has zero size, mmap
	fails on Solaris. On GNU/Linux it return NULL buf subsequent munmap
	fails.

	* mailbox/mapfile_stream.c:  To take care of this, mfs->ptr is set
	to NULL for len == 0;
	*mailbox/mbx_mbox.c (mbox_is_updated): Should I have return 0 (FALSE)
	when size change.

2001-04-23  Sergey Poznyakoff

	Several sources from mailbox subdirectory call fprintf(stderr,...)
	to issue error messages. As the stderr usually gets connected to
	the output socket, the client program receives all these error
	messages and gets confused, since they do not start with
	rfc-compliant +OK, -ERR keywords. So I have added a module
	error.c and changed all these fprintf's to error()'s. Actual
	function that ouputs the messages can be supplied by the
	application using error_set_print() call.

2001-04-23  Alain Magloire

	* pop3d/*.[ch]:  Rename all the pop function pop3d_xx()
	instead of pop3_xx() to be consistent with imap4d/*.

	* mailbox/mbx_pop.c (pop_user): This is sudden death; for many pop
	servers, it is important to let them time to remove locks or move
	the .user.pop files.  This happen when we do BUSY_CHECK().  For
	example, the user does not want to read the entire file, and wants
	start to read a new message, closing the connection and immediately
	contact the server again, and we'll end up having
	"-ERR Mail Lock busy" or something similar. To prevent this race
	condition we sleep 2 seconds.

2001-04-23  Sergey Poznyakoff

	It is often convenient to separate log outputs from POP and SMTP
	servers. --with-log-facility flag which allows to specify to which
	log facility the loggin output should be directed.
	System administrators often prefere to have more information about
	unsuccessfull authentications. I have added more verbose logging
	to pop3d/user.c. Both failed attempts and possible account probes
	(USER immediately followed by QUIT) are logged.
	Made pop3d to be less verbose about its WELCOME prompt. When the
	symbol TERSE_MODE is defined, pop3d introduces itself just as
	+OK POP3 ready <apop_hash>
	insead of divulging its type and version. This is a bit paranoid,
	but it is better to be on the safe side...

	* configure.in: ARGPINC gets assigne a relative path, due
	to which the compilation fails if the package is configure with
	--srdir=<path> option.
	* configure.in: --with-log-facility new option.
	* acconfig.h: LOG_FACILITY

	* doc/mailutils.texi: Typo.

	* mailbox/mapfile_stream.c: Define MAP_FAILED.

	* pop3d/extra.c (pop3_abquit): new case ERR_MBOX_SYNC.
	(pop3_signal): Syslog the reason.
	* pop3d/pop3d.c (pop_mainloop): Syslog the hostname of
	the user on connect.
	(pop3_daemon): Log to many children.  Lacks call to exit(), so if
	pop3d is run as a daemon, any child after exiting from
	pop3_mainloop  tries to accept() from already closed socket
	and issues spurious error messages.
	(pop3_mainloop):  Check if the mailbox is uptodate if not
	and the size shrink, bail out.  Do not send version number.
	* pop3d/pop3d.h: ERR_MBOX_SYNC define. WELCOME removed.
	* pop3d/signal (pop3_sigchld): Lacks signal() call, due to which
	the signal handler gets cleared after first SIGCHLD and all
	subsequent children, when finished, just hang around like zombies.
	* pop3d/user.c: Log to LOG_FACILITY all the errors.

2001-04-23  Alain Magloire

	Sergey Poznyakoff pointed out that errno changes depending
	if _REENTRANT is set or not.  So for enable thread we take
	the approach of always defining _REENTRANT.
	He also noted that when in standalone the child was not exiting.

	* acconfig.h: Define _REENTRANT.
	* configure.in: Check for sigaction().
	* configuire.in: AC_DEFINE(_REENTRANT).

	* doc/Makefile.am: add rfc2060-errata.
	* doc/rfc2060-errata: New File.

	* imap4d/copy.c: First Implementation.
	* imap4d/status.c: First implementation.

	* mailbox/file_stream.c (_file_open): For CREAT, close
	the fd if we failed.
	* mailbox/folder_imap.c: Remove the _REENTRANT.
	* mailbox/mbx_mbox.c: Remove the _REENTRANT.
	* mailbox/monitor.c: Remove the _REENTRANT.

	* pop3d/pop3d.c (main): maxchildren boosted to 20.
	(pop3_daemon_init): Use sigaction() for SIGCHLD,
	the sematics of signal() is unreliable on some platforms.
	* pop3d/signal.c: Save errno.

2001-04-22  Alain Magloire

	* imap4d/create.c: First implementation.
	* imap4d/delete.c: First implementation.
	* imap4d/list.c: First implementation.
	* imap4d/rename.c: First implementation.
	* imap4d/util.c: New functions.
	(util_tilde_expansion): expand ~.
	(util_unquote): Remove surrounding double quotes.
	(util_getfullpath): Expand the path to absolute.
	* imap4d/fetch.c:  Did not cycle throught the items.
	(fetch_send_address): Patch from Sam Roberts, did not
	use the index.

	* mailbox/attachement.c (message_unencapsulate): Little buglet
	strncasemp() passing the wrong size.

2001-04-19  Alain Magloire

	* mailbox/smtp.c(smtp_readline): Because of the buffering mechanism,
	we must maintain the offset.

	* imap4d/list.c: partially implemented the LIST command.
	* imap4d/imap4d.c: homedir new global variable.
	* imap4d/login.c: same ${HOME} in homedir.
	* imap4d/util.c (util_getword): Be aware of the quotes.

	* lib/fnmatch.c: New replacement file.
	* lib/fnmatch.h: New replacement file.
	* configure.in: Check for fnmatch().

2001-04-18  Alain Magloire

	Finally took time to put the code in from Jakob first draft, in
	an email excerpt:
	states is the valid states for a command (eg. LOGIN is only valid in
	non-authenticated state, SELECT is valid in authenticated or
	selected). success is the state to enter when the command completes
	successfully (STATE_NONE means no change) and failure is the state to
	enter when the command fails.

	* imap4d/*.c:  All the commands check there state.
	* imap4d/fetch.c: Cleanup the fetch code, and broke
	the fetch_operation() routine in multiple routines.
	(fetch_message): New function.
	(fetch_header): Likewised
	(fetch_content): Likewised
	(fetch_io): Likewised
	(fetch_header_fields): Likewised
	(fetch_header_fields_not): Likewised
	(fetch_send_address): Likewised

	* mailbox/header.c: Some functions were usefull while
	programming the imap server, put them here.
	(header_aget_value): New function.
	(header_aget_field_name): New function.
	(header_aget_field_value): New function.

	* mailbox/memory_stream.c: New file, implemented a
	malloc() buffer that you can access via the stream interface.
	* mailbox/file_stream.c: Remove spurious checks.
	* mailbox/mapfile_stream.c: Remove spurious checks.
	(_mapfile_read): check if there is no newline left.

2001-04-16  Alain Magloire

	To get things to compile on Solaris, change configure to check
	for -lpthread since in libc the thread functions are defined
	but all return ENOSYS, you need to explicitely link with -lphtread.
	the ctype functions is*() arguments should be explicitely cast
	since Solaris use them as indexes.  __REENTRANT as to be define
	if compile with support for threads.  Never realize this but
	setenv() is a BSD/GNU thing, so took a variant from libiberty
	to cope.

	* configure.in: Check for setenv. First check if -lphtread is ok.
	* lib/setenv.c: New functions.
	* lib/Makefile.am: add setenv.c in EXTRA_DIST.
	* imap4d/imap4d.h: Include <alloca.h>
	* mailbox/attachment.c: Include <alloca.h>
	* (_header_get_param): isspace() cast argument.
	* mail/mail.h: check if <paths.h> is available if not
	define _PATH_SENDMAIL=/usr/lib/sendmail.
	* mailbox/folder_imap.c: if pthread available, define _REENTRANT.
	Include <alloca.h>.
	(imap_bodystructure0): isdigit() cast argument.
	* mailbox/mbx_mbox.c: if pthread available, define _REENTRANT.
	Include <alloca.h>.
	* mailbox/parse822.c: isdigit() cast argument unsigned.

2001-04-15  Alain Magloire

	The FILE* stream "stdout" is not an lvalue so it is an error to
	attempt to assign to it.  To be able to redirect at will stdout
	we need to assign it.  In GNU lib C, it was not error since stdout
	stderr, and stdin are variables, but to be portable we can not
	assume this.  The way out is to always use fprintf () and have
	a global varialbe "ofile" pointing to stdout.

	* mail/*: All the files under mail been change to use fprintf()
	and ofile as the default stdout.
	Copyright updated.

2001-04-15  Alain Magloire

	Create a argp directory, it contains the necessary
	files to build a standalone libargp.a

	* argp: New directory.
	argp-ba.c, argp-eexst.c, argp-fmtstream.c, argp-fmtstream.h
	argp-fs-xinl.c, argp-help.c, argp-namefrob.h, argp-parse.c
	argp-pv.c, argp-pvh.c, argp-xinl.c, argp.h, pin.c.

	* mail/mail.c:  Comment out the code that use readline
	specifics WITH_READLINE.
	* mail/mail.h: Likewised.
	* mail/util.c: Likewised.

2001-04-15  Alain Magloire

	* Makefile.am: Add argp in the list of subdirs.
	* configure.am:  Check for argp.h and look for
	argp_parse().
	* lib/strchrnul.c: New function.
	* lib/strndup.c: New function.
	* lib/strnlen.c: New function.
	* lib/vasnprintf.c: New function.
	* lib/getopt.c: Updated.
	* lib/getopt1.c: Updated.
	* lib/getopt.h: Updated.
	* frm/Makefile.am: Remove -DTESTING in CFLAGS.
	* from/Makefile.am: Remove -DTESTING in CFLAGS.
	Add AUTOMAKE_OPTIONS.
	* imapd/Makefile.am: Likewised.
	* pop3d/Makefile.am: Likewised.
	* mail/Makefile.am: Likewised. Added ARGPLIB macro

2001-04-14  Sam Roberts
	* examples/{Makefile,Addrs,addr.c,Addrs.good}: address test f/w.
	* include/mailutils/address.h,mailbox/{address.c,parse822.c}: now
	  stuff a group name into an _address, and added a function to do
	  a quick check if it is a group.
	* mailbox/parse822.c: fixed bug where ",sam@foo.bar" wasn't valid.

2001-04-14  Alain Magloire

	* mailbox/folder_imap.c: When calling imap_writeline () the
	cookie for the tag should be unsigned %d --> %u.
	(imap_send) : The number of bytes in memmove was wrong.
	* mailbox/mbx_imap.c: Some duplicate degug calls MAILBOX_DEBUG0()
	removed.
	(attribute_string): IMAP does not have a \\Read flag it should be
	the same as \\Seen so attribute_read() == attribute_seen().
	(flag_string): New function.
	(imap_attr_set_flags): Use flag_string(), instead.
	* mailbox/include/imap0.h:  CLEAR_STATE() should also deselect
	the current mailbox.

	* mailbox/mbx_pop.c (pop_write): The number of bytes in the memmove
	was wrong.

	* imap4d/imap4d.h: Add HAVE_SECURITY_PAM_APPL_H.
	* imap4d/login.c: PAM_ERROR wrongly define.
	* imap4d/expunge.c: Initialise variable sp.
	* imap4d/logout.c: Initialise variable sp.
	* imap4d/noop.c: Initialise variable sp.

	* mailbox/attachement.c (message_create_attachment): Use base_name().
	* mailbox/mbx_mbox.c (mbox_tmpfile): Use base_name().
	* configure.in: AC_REP_FUNC(vasprintf strcasecmp strncasecmp).
	* include/mailutils/Makefile.am: Add property.h, parse822.h.
	* lib/vasprintf.c: Taken from libit.
	* lib/basename.c: Taken from libit/fileutils.
	* lib/Makefile.am.c: Always use our basename(base_name).
	(AM_INIT_AUTOMAKE): Change version to 0.0.9

2001-04-13  Sam Roberts

	QNX needed to include <strings.h> for many of the useful string
	functions also to define _QNX_SOURCE so <sys/time.h> doesn't have
	an internal warning.

	* configure.in: Check for libgen.h.
	* imap4d/imap4d.h: Define __QNX_SOURCE.
	* mailbox/mime.c: wasn't including config.h
	* mailbox/attachment.c: QNX needed libgen.h for basename(),
	include <strings.h> if define.
	* mailbox/filter.c: Include <strings.h>.
	* mailbox/mbx_mbox.c: Include <strings.h>.
	* mailbox/folder_imap.c: Include <strings.h>.
	* mailbox/header.c: Include <strings.h>.
	* mailbox/property.c: Include <strings.h>.
	* mailbox/registrar.c: Include <strings.h>.
	* mailbox/url.c: Include <strings.h>.
	* mailbox/url_pop.c: Include <strings.h>.
	* pop3d/user.c: QNX says getspnam(char* n), I cast away the error.

2001-04-13  Sam Roberts

	* mailbox/parse822.c, include/mailutils/parse822.h: now can
	  quote the local-part of and addr-spec, and a string.

2001-04-13  Sam Roberts

	* doc/address.texi: updated docs, now they match the parse822.
	* mailbox/parse822.c: small tweaks to the new parser, the changes
	  made during the tidying over the last month were:
	  - use C comments only.
	  - don't use C++ reserved words.
	  - fix is_digit() to be like the other is functions
	  - Changed return codes to:
	   . no mem (ENOMEM)
	   . function wasn't called correctly, usually a missing
	     argument (EINVAL)
	   . invalid syntax found during parsing (ENOENT)
	   . success == 0
	  - const-corrected the APIs
	  - removed unnecessary (in C) casts.
	  - mailbox_t* removed in favor of address_t.
	  - fix handful of memory leaks detected by Alain.

2001-04-10  Alain Magloire

	* pop3d/retr.c (pop3_retr): Typo.
	* pop3d/top.c (pop3_top): No need to reallocate when sending the
	headers.
	* doc/mailbox.texi: Put the functions in alphabetic orders.

2001-04-10  Alain Magloire

	* mailbox/Makefile.am: filter_trans.c added, trans_stream.c deleted.
	* mailbox/attachment.c (message_create_attachment): use
	filter_create().
	(message_save_attachment): use filter_create().
	* mailbox/body.c (body_set_lines): Wrong comparison for the owner.
	* mailbox/mbx_mbox.c: Do not count the line separtor of part
	of the mailbox.

	* mailbox/url.c (url_is_same_sheme): New function.
	(url_is_same_user): New function.
	(url_is_same_path): New function.
	(url_is_same_host): New function.
	(url_is_same_port): New function.
	* mailbox/folder.c : Moved the is_same_*() functions in url.c
	they can be generally usefull.
	(is_same_sheme): Removed.
	(is_same_user): Removed.
	(is_same_path): Removed.
	(is_same_host): Removed.
	(is_same_port): Removed.

	* mailbox/folder_imap.c (folder_imap_create): New function,
	CREATE a new mailbox.
	(folder_imap_open): Calls folder_imap_create when the MU_STREAM_CREAT
	flag is set.
	* mailbox/mbx_imap.c: Appending messages implemented, if the message
	comes from the same imap folder, it is COPY otherwise APPEND.
	(is_same_folder): New function.
	(imap_append_message): Implemented.
	(attribute_string): New functions.
	(imap_copy_message): New function.
	* mailbox/include/imap0.h: New enum, IMAP_APPEND, IMAP_APPEND_ACK,
	IMAP_APPEND_CONT, IMAP_APPEND_SEND, IMAP_COPY, IMAP_COPY_ACK,
	IMAP_CREATE, IMAP_CREATE_ACK.

2001-04-06  Alain Magloire

	* mailbox/parse822.c: New parser.
	* include/mailutils/parse822.h: New file.
	* mailbox/address.c (address_create): Remove the old parsing and use
	parse822 as the underlying engine.
	(address_parse): Removed.
	(gettoken): Removed.
	(quotes): Removed.
	(address_get_personal): Remove the code to unquote, parse822 takes
	care if it. Return value when no field is ENOENT.
	(address_get_comments): Return value when no field ENOENT.
	(address_get_local_part): Return value when no field ENOENT.
	(address_get_domain): Return value when no field ENOENT.
	(address_get_email): Return value when no field ENOENT.
	(address_get_route): Return value when no field ENOENT.
	* mailbox/message.c (message_sender): Use parse822 to retrieve
	the email from the From: field.
	(message_set_mailbox): New function.
	* mailbox/misc.c : Removed the old parsing code.
	(gettoken): Removed.
	(parseaddr): Removed.
	* mailbox/include/misc.h : Removed parseaddr() prototypes.
	From Sam Roberts, the new parse822 parser..

2001-04-04  Alain Magloire

	Introduction of the notion of filter_t object takes a stream and
	perform some filtering on it.  All the decoding streams will move
	to this i.e. quoted-printable, base64 etc .. This scheme will also
	permit users to add to the list new filters.  Still work in progress.

	* mailbox/Makefile.am : Add filter.c filter_rfc822.c.
	* mailbox/body.c : When creating a floating body i.e creating
	a temporary file, the stream was not "own" by the body_t.
	(_body_get_fd): Likewised.
	(_body_read):_ Likewised.
	(_body_readline): Likewised.
	(_body_write): Likewised.
	(_body_truncate): Likewised.
	(_body_size): Likewised.
	(_body_flush): Likewised.

	* mailbox/folder_imap.c (imap_literal_string): Check if the
	callback.buffer is NULL.
	(imap_body): Do no set the callback.type if "FIELDS" is part of the
	string.

	* mailbox/header.c: Remove the support for RFC822 it will be part
	of the filter_t object.
	* mailbox/mbx_mbox.c: Likewised.
	* mailbox/mailbox.c (mailbox_size): Rename to mailbox_get_size().

	* mailbox/stream.c (stream_is_seekable): New function.
	(stream_set_property): New function.
	(stream_get_property): New function.

	* mailbox/trans_stream.c: Beautify.

	* include/mailutils/filter.h: new file.

	* doc/mailbox.texi: Updated.
	More changes to come.

2001-03-20  Alain Magloire

	* mailbox/folder_imap.c (imap_readline) :  If the server goes away
	suddenly return an error.
	* mailbox/smtp.c (smtp_readline) :  If the server goes away
	suddenly return an error.
	* mailbox/mbx_pop.c (pop_readline) :  If the server goes away suddenly
	return an error.
	* mailbox/mbx_pop.c (pop_open) : The ticket comes from the folder.

2001-03-17  Vesselin Atanasov

	* configure.in: AC_REQUIRE is not .. required.  Just call
	jm_FUNC_MALLOC and jm_FUNC_REALLOC.

2001-03-17  Alain Magloire

	Clean the property object, mailbox and mailer have property object
	that you can examine.  Still a draft: the value of objects are ints.
	This feature was put in to help the imap4d server, in this protocol
	you can get a substring of the message starting from a certain offset.
	To make the coding of imap4d simpler the complexity was move to the

	* mailbox/smtp.c(smtp_readline): Because of the buffering mechanism,
	we must maintain the offset.

	* imap4d/list.c: partially implemented the LIST command.
	* imap4d/imap4d.c: homedir new global variable.
	* imap4d/login.c: same ${HOME} in homedir.
	* imap4d/util.c (util_getword): Be aware of the quotes.

	* lib/fnmatch.c: New replacement file.
	* lib/fnmatch.h: New replacement file.
	* configure.in: Check for fnmatch().

2001-04-18  Alain Magloire

	Finally took time to put the code in from Jakob first draft, in
	an email excerpt:
	states is the valid states for a command (eg. LOGIN is only valid in
	non-authenticated state, SELECT is valid in authenticated or
	selected). success is the state to enter when the command completes
	successfully (STATE_NONE means no change) and failure is the state to
	enter when the command fails.

	* imap4d/*.c:  All the commands check there state.
	* imap4d/fetch.c: Cleanup the fetch code, and broke
	the fetch_operation() routine in multiple routines.
	(fetch_message): New function.
	(fetch_header): Likewised
	(fetch_content): Likewised
	(fetch_io): Likewised
	(fetch_header_fields): Likewised
	(fetch_header_fields_not): Likewised
	(fetch_send_address): Likewised

	* mailbox/header.c: Some functions were usefull while
	programming the imap server, put them here.
	(header_aget_value): New function.
	(header_aget_field_name): New function.
	(header_aget_field_value): New function.

	* mailbox/memory_stream.c: New file, implemented a
	malloc() buffer that you can access via the stream interface.
	* mailbox/file_stream.c: Remove spurious checks.
	* mailbox/mapfile_stream.c: Remove spurious checks.
	(_mapfile_read): check if there is no newline left.

2001-04-16  Alain Magloire

	To get things to compile on Solaris, change configure to check
	for -lpthread since in libc the thread functions are defined
	but all return ENOSYS, you need to explicitely link with -lphtread.
	the ctype functions is*() arguments should be explicitely cast
	since Solaris use them as indexes.  __REENTRANT as to be define
	if compile with support for threads.  Never realize this but
	setenv() is a BSD/GNU thing, so took a variant from libiberty
	to cope.

	* configure.in: Check for setenv. First check if -lphtread is ok.
	* lib/setenv.c: New functions.
	* lib/Makefile.am: add setenv.c in EXTRA_DIST.
	* imap4d/imap4d.h: Include <alloca.h>
	* mailbox/attachment.c: Include <alloca.h>
	* (_header_get_param): isspace() cast argument.
	* mail/mail.h: check if <paths.h> is available if not
	define _PATH_SENDMAIL=/usr/lib/sendmail.
	* mailbox/folder_imap.c: if pthread available, define _REENTRANT.
	Include <alloca.h>.
	(imap_bodystructure0): isdigit() cast argument.
	* mailbox/mbx_mbox.c: if pthread available, define _REENTRANT.
	Include <alloca.h>.
	* mailbox/parse822.c: isdigit() cast argument unsigned.

2001-04-15  Alain Magloire

	The FILE* stream "stdout" is not an lvalue so it is an error to
	attempt to assign to it.  To be able to redirect at will stdout
	we need to assign it.  In GNU lib C, it was not error since stdout
	stderr, and stdin are variables, but to be portable we can not
	assume this.  The way out is to always use fprintf () and have
	a global varialbe "ofile" pointing to stdout.

	* mail/*: All the files under mail been change to use fprintf()
	and ofile as the default stdout.
	Copyright updated.

2001-04-15  Alain Magloire

	Create a argp directory, it contains the necessary
	files to build a standalone libargp.a

	* argp: New directory.
	argp-ba.c, argp-eexst.c, argp-fmtstream.c, argp-fmtstream.h
	argp-fs-xinl.c, argp-help.c, argp-namefrob.h, argp-parse.c
	argp-pv.c, argp-pvh.c, argp-xinl.c, argp.h, pin.c.

	* mail/mail.c:  Comment out the code that use readline
	specifics WITH_READLINE.
	* mail/mail.h: Likewised.
	* mail/util.c: Likewised.

2001-04-15  Alain Magloire

	* Makefile.am: Add argp in the list of subdirs.
	* configure.am:  Check for argp.h and look for
	argp_parse().
	* lib/strchrnul.c: New function.
	* lib/strndup.c: New function.
	* lib/strnlen.c: New function.
	* lib/vasnprintf.c: New function.
	* lib/getopt.c: Updated.
	* lib/getopt1.c: Updated.
	* lib/getopt.h: Updated.
	* frm/Makefile.am: Remove -DTESTING in CFLAGS.
	* from/Makefile.am: Remove -DTESTING in CFLAGS.
	Add AUTOMAKE_OPTIONS.
	* imapd/Makefile.am: Likewised.
	* pop3d/Makefile.am: Likewised.
	* mail/Makefile.am: Likewised. Added ARGPLIB macro

2001-04-14  Sam Roberts
	* examples/{Makefile,Addrs,addr.c,Addrs.good}: address test f/w.
	* include/mailutils/address.h,mailbox/{address.c,parse822.c}: now
	  stuff a group name into an _address, and added a function to do
	  a quick check if it is a group.
	* mailbox/parse822.c: fixed bug where ",sam@foo.bar" wasn't valid.

2001-04-14  Alain Magloire

	* mailbox/folder_imap.c: When calling imap_writeline () the
	cookie for the tag should be unsigned %d --> %u.
	(imap_send) : The number of bytes in memmove was wrong.
	* mailbox/mbx_imap.c: Some duplicate degug calls MAILBOX_DEBUG0()
	removed.
	(attribute_string): IMAP does not have a \\Read flag it should be
	the same as \\Seen so attribute_read() == attribute_seen().
	(flag_string): New function.
	(imap_attr_set_flags): Use flag_string(), instead.
	* mailbox/include/imap0.h:  CLEAR_STATE() should also deselect
	the current mailbox.

	* mailbox/mbx_pop.c (pop_write): The number of bytes in the memmove
	was wrong.

	* imap4d/imap4d.h: Add HAVE_SECURITY_PAM_APPL_H.
	* imap4d/login.c: PAM_ERROR wrongly define.
	* imap4d/expunge.c: Initialise variable sp.
	* imap4d/logout.c: Initialise variable sp.
	* imap4d/noop.c: Initialise variable sp.

	* mailbox/attachement.c (message_create_attachment): Use base_name().
	* mailbox/mbx_mbox.c (mbox_tmpfile): Use base_name().
	* configure.in: AC_REP_FUNC(vasprintf strcasecmp strncasecmp).
	* include/mailutils/Makefile.am: Add property.h, parse822.h.
	* lib/vasprintf.c: Taken from libit.
	* lib/basename.c: Taken from libit/fileutils.
	* lib/Makefile.am.c: Always use our basename(base_name).
	(AM_INIT_AUTOMAKE): Change version to 0.0.9

2001-04-13  Sam Roberts

	QNX needed to include <strings.h> for many of the useful string
	functions also to define _QNX_SOURCE so <sys/time.h> doesn't have
	an internal warning.

	* configure.in: Check for libgen.h.
	* imap4d/imap4d.h: Define __QNX_SOURCE.
	* mailbox/mime.c: wasn't including config.h
	* mailbox/attachment.c: QNX needed libgen.h for basename(),
	include <strings.h> if define.
	* mailbox/filter.c: Include <strings.h>.
	* mailbox/mbx_mbox.c: Include <strings.h>.
	* mailbox/folder_imap.c: Include <strings.h>.
	* mailbox/header.c: Include <strings.h>.
	* mailbox/property.c: Include <strings.h>.
	* mailbox/registrar.c: Include <strings.h>.
	* mailbox/url.c: Include <strings.h>.
	* mailbox/url_pop.c: Include <strings.h>.
	* pop3d/user.c: QNX says getspnam(char* n), I cast away the error.

2001-04-13  Sam Roberts

	* mailbox/parse822.c, include/mailutils/parse822.h: now can
	  quote the local-part of and addr-spec, and a string.

2001-04-13  Sam Roberts

	* doc/address.texi: updated docs, now they match the parse822.
	* mailbox/parse822.c: small tweaks to the new parser, the changes
	  made during the tidying over the last month were:
	  - use C comments only.
	  - don't use C++ reserved words.
	  - fix is_digit() to be like the other is functions
	  - Changed return codes to:
	   . no mem (ENOMEM)
	   . function wasn't called correctly, usually a missing
	     argument (EINVAL)
	   . invalid syntax found during parsing (ENOENT)
	   . success == 0
	  - const-corrected the APIs
	  - removed unnecessary (in C) casts.
	  - mailbox_t* removed in favor of address_t.
	  - fix handful of memory leaks detected by Alain.

2001-04-10  Alain Magloire

	* pop3d/retr.c (pop3_retr): Typo.
	* pop3d/top.c (pop3_top): No need to reallocate when sending the
	headers.
	* doc/mailbox.texi: Put the functions in alphabetic orders.

2001-04-10  Alain Magloire

	* mailbox/Makefile.am: filter_trans.c added, trans_stream.c deleted.
	* mailbox/attachment.c (message_create_attachment): use
	filter_create().
	(message_save_attachment): use filter_create().
	* mailbox/body.c (body_set_lines): Wrong comparison for the owner.
	* mailbox/mbx_mbox.c: Do not count the line separtor of part
	of the mailbox.

	* mailbox/url.c (url_is_same_sheme): New function.
	(url_is_same_user): New function.
	(url_is_same_path): New function.
	(url_is_same_host): New function.
	(url_is_same_port): New function.
	* mailbox/folder.c : Moved the is_same_*() functions in url.c
	they can be generally usefull.
	(is_same_sheme): Removed.
	(is_same_user): Removed.
	(is_same_path): Removed.
	(is_same_host): Removed.
	(is_same_port): Removed.

	* mailbox/folder_imap.c (folder_imap_create): New function,
	CREATE a new mailbox.
	(folder_imap_open): Calls folder_imap_create when the MU_STREAM_CREAT
	flag is set.
	* mailbox/mbx_imap.c: Appending messages implemented, if the message
	comes from the same imap folder, it is COPY otherwise APPEND.
	(is_same_folder): New function.
	(imap_append_message): Implemented.
	(attribute_string): New functions.
	(imap_copy_message): New function.
	* mailbox/include/imap0.h: New enum, IMAP_APPEND, IMAP_APPEND_ACK,
	IMAP_APPEND_CONT, IMAP_APPEND_SEND, IMAP_COPY, IMAP_COPY_ACK,
	IMAP_CREATE, IMAP_CREATE_ACK.

2001-04-06  Alain Magloire

	* mailbox/parse822.c: New parser.
	* include/mailutils/parse822.h: New file.
	* mailbox/address.c (address_create): Remove the old parsing and use
	parse822 as the underlying engine.
	(address_parse): Removed.
	(gettoken): Removed.
	(quotes): Removed.
	(address_get_personal): Remove the code to unquote, parse822 takes
	care if it. Return value when no field is ENOENT.
	(address_get_comments): Return value when no field ENOENT.
	(address_get_local_part): Return value when no field ENOENT.
	(address_get_domain): Return value when no field ENOENT.
	(address_get_email): Return value when no field ENOENT.
	(address_get_route): Return value when no field ENOENT.
	* mailbox/message.c (message_sender): Use parse822 to retrieve
	the email from the From: field.
	(message_set_mailbox): New function.
	* mailbox/misc.c : Removed the old parsing code.
	(gettoken): Removed.
	(parseaddr): Removed.
	* mailbox/include/misc.h : Removed parseaddr() prototypes.
	From Sam Roberts, the new parse822 parser..

2001-04-04  Alain Magloire

	Introduction of the notion of filter_t object takes a stream and
	perform some filtering on it.  All the decoding streams will move
	to this i.e. quoted-printable, base64 etc .. This scheme will also
	permit users to add to the list new filters.  Still work in progress.

	* mailbox/Makefile.am : Add filter.c filter_rfc822.c.
	* mailbox/body.c : When creating a floating body i.e creating
	a temporary file, the stream was not "own" by the body_t.
	(_body_get_fd): Likewised.
	(_body_read):_ Likewised.
	(_body_readline): Likewised.
	(_body_write): Likewised.
	(_body_truncate): Likewised.
	(_body_size): Likewised.
	(_body_flush): Likewised.

	* mailbox/folder_imap.c (imap_literal_string): Check if the
	callback.buffer is NULL.
	(imap_body): Do no set the callback.type if "FIELDS" is part of the
	string.

	* mailbox/header.c: Remove the support for RFC822 it will be part
	of the filter_t object.
	* mailbox/mbx_mbox.c: Likewised.
	* mailbox/mailbox.c (mailbox_size): Rename to mailbox_get_size().

	* mailbox/stream.c (stream_is_seekable): New function.
	(stream_set_property): New function.
	(stream_get_property): New function.

	* mailbox/trans_stream.c: Beautify.

	* include/mailutils/filter.h: new file.

	* doc/mailbox.texi: Updated.
	More changes to come.

2001-03-20  Alain Magloire

	* mailbox/folder_imap.c (imap_readline) :  If the server goes away
	suddenly return an error.
	* mailbox/smtp.c (smtp_readline) :  If the server goes away
	suddenly return an error.
	* mailbox/mbx_pop.c (pop_readline) :  If the server goes away suddenly
	return an error.
	* mailbox/mbx_pop.c (pop_open) : The ticket comes from the folder.

2001-03-17  Vesselin Atanasov

	* configure.in: AC_REQUIRE is not .. required.  Just call
	jm_FUNC_MALLOC and jm_FUNC_REALLOC.

2001-03-17  Alain Magloire

	Clean the property object, mailbox and mailer have property object
	that you can examine.  Still a draft: the value of objects are ints.
	This feature was put in to help the imap4d server, in this protocol
	you can get a substring of the message starting from a certain offset.
	To make the coding of imap4d simpler the complexity was move to the
	library.  It is possible now by setting a property of the mailbox
	to make it output rfc822 stream i.e. "\r\n" terminated stream, the
	offset and the size are also in term of rfc822.

	* mailbox/property.c (property_set_int): Removed.
	* mailbox/property.c (property_set_long): Removed.
	* mailbox/property.c (property_set_double): Removed.
	* mailbox/property.c (property_set_set_value): Removed.
	* mailbox/property.c (property_set_get_value): Removed.
	* mailbox/property.c (property_add_propety): New function.
	* mailbox/property.c (hash): Renamed poperty_hash.
	* include/mailutils/property.h (struct property_list): New structure.

	* mailbox/include/mailbox0.h: new fields properties, properties_count.
	* mailbox/mailbox.c (mailbox_get_property): The function will create
	the proprety and add the default properties.
	(mailbox_destroy): The default poperties and property are freed.
	(mailbox_is_updated): Return ENOSYS if the argumets are wrong.
	(mailbox_scan): Return ENOSYS if the argumets are wrong.
	(mailbox_uidvalidity): Return ENOSYS if the argumets are wrong.
	(mailbox_uidnext): Return ENOSYS if the argumets are wrong.

	* mailbox/mbx_mbox.c (mbx_init): Set its default properties.
	(mbx_header_get_fvalue): Return the len, even if buffer is null.
	(mbx_body_read): If property rfc822 is set call
	mbx_body_readstream_rfc822 to the conversion.
	(mbx_body_readstream_rfc822): New function, do the conversion.
	(struct _mbox_message): Remove the stream field.
	added struct rfc822.
	(mbox_get_header_readstream): Removed.
	(mbox_header_size): Do the conversion if rfc822 set.
	(mbox_body_size): Do the conversion if rfc822 set.
	(mbox_get_message): Set the property on the header_t.

	* mailbox/mbx_pop.c (pop_init): Set its default properties.
	(pop_open): Remove MU_STREAM_POP flag obsolete.
	(pop_readline):  Do the converstion if rfc822 is set.

	* mailbox/mbx_imap.c (mbx_imap_init): Set its default properties.
	* mailbox/folder_imap.c (folder_imap_open): Remove MU_STREAM_IMAP,
	no longer pertinent.
	(imap_readline): If propety rfc822 is set don't strip '\r'.

	* mailbox/header.c (header_set_property): New functions.
	(header_get_property): New functions.
	(header_destroy): Destroy property object.
	(header_get_value): If property rfc822 is set
	convert all "\n" to "\r\n".
	(header_read): If property rfc822 is et convert to \n to \r\n.
	(header_readline): If property rfc822 is et convert to \n to \r\n.
	(fill_blurb): Clear the function overloading, when the blurb is fill.
	* mailbox/include/header0.h: New field property.
	* include/mailutils/header.h: Added prototypes for
	header_set_property and header_get_property.

	* include/mailutils/stream.h: Remove the identification macros;
	MU_STREAM_IMAP, MU_STREAM_FILE, MU_STREAM_POP, it is part of the
	properties of each object.

	* mailbox/mailer.c (mailer_destroy): Free the properties.
	* mailbox/mailer.c (mailer_get_poperty): New function, return the
	property of the mailbox.

	* mailbox/smtp.c (_mailer_smtp_init): Set its default properties.
	* mailbox/sendmail.c (_sendmail_init): Set its default properties.

	* mailbox/include/Makefile.am: Add property0.h.

2001-03-09  Sam Roberts

	* include/mailutils/address.h: api for new parser,
	address_create0(), and to get route, local-part, and domain.
	* mailbox/address.c: implementation of 3 new get functions, first
	cut, needs cleanup
	* mailbox/include/address0.h: new members of _address, deleted
	one that looked unused.
	* mailbox/parse822.c: implementation of address_create0(),
	which handles groups, routes, and the hoary old comment phrase
	* addr/addr.c - parses addresses from its command line or
	stding using create() or create0().
	* mailbox/mbx_imap.c: need strings.h on some systems, like Nto

2001-03-12  Sam Roberts

	* frm/frm.c (main): Changed to only print subject if
	header_get_value(SUBJECT) returned success, otherwise I assume
	it would print the stack.
	(usage): Corrected a tiny typo in usage message.
	(long_options): Added an option -f,--field that prints the named field
	in the mailbox, and nothing else.

2001-03-09  Alain Magloire

	* mailbox/Makefile.am: add property.c in the src list.
	* doc/mailutils.texi: add Sam to the list of acknowlegment.

2001-03-09  Sam Roberts

	* doc/address.texi: documented all the functions in address.h
	* doc/url.texi: corrected location or url.h header

2001-03-08  Sam Roberts

	* README-alpha:  Be clearer on how to configure.
	* doc/address.texi : New File, description of address_t object.
	* doc/mailutils.texi : add include address.texi.

2001-03-03  Alain Magloire

	* imap4d/fetch.c (fetch_operation) : HEADER.FIELDS.NOT implemented.
	fetch_opertaion() take a new argument.
	* imap4d/util.c (util_upper) : New function string upper.

	* mailbox/heder.c: Added new functionnalities to help the imap4d
	fetch command.
	(header_get_field_count) : New function returns the number of header
	fields in the header.
	(header_get_field_name): New function returns the field name.
	(header_get_field_value): New function returns the field value.

2001-03-03  Alain Magloire

	* include/mailutils/address.h: s/_cplusplus/__cplusplus/g
	(include/mailutils/auth.h): Likewised.
	(include/mailutils/body.h): Likewised.
	(include/mailutils/debug.h): Likewised.
	(include/mailutils/header.h): Likewised.
	(include/mailutils/iterator.h): Likewised.
	(include/mailutils/list.h): Likewised.
	(include/mailutils/mailer.h): Likewised.
	(include/mailutils/message.h): Likewised.
	(include/mailutils/mime.h): Likewised.
	(include/mailutils/observer.h): Likewised.
	(include/mailutils/property.h): Likewised.
	(include/mailutils/registrar.h): Likewised.
	(mailbox/include/address0.h): Likewised.
	(mailbox/include/auth0.h): Likewised.
	(mailbox/include/body0.h): Likewised.
	(mailbox/include/debug0.h): Likewised.
	(mailbox/include/header0.h): Likewised.
	(mailbox/include/iterator0.h): Likewised.
	(mailbox/include/list0.h): Likewised.
	(mailbox/include/mailer0.h): Likewised.
	(mailbox/include/message0.h): Likewised.
	(mailbox/include/mime0.h): Likewised.
	(mailbox/include/observer0.h): Likewised.
	Pointed by Sam Roberts.

2001-02-28  Alain Magloire

	* mailbox/address.c (address_get_personal): Remove surrounding quotes.
	* mailbox/mbx_mbox.c (mbox_scan): If the mailbox is updated don't
	rescan again.
	(mbox_expunge): Same the uidvalidity in the header field "IMABase:"
	on the first message of the mailbox.

	* imap4d/fetch.c (fetch_envelope): Envelope imap4 command implemented.
	(fetch_send_address): New function.

2001-02-26  Alain Magloire

	* mailbox/mbx_imap.c (imap_submessage_size): New function to
	retrieve message size of attachments.
	* imap4d/fetch.c: More functionnality for the FETCH command.
	(fetch_operation): New operation.
	* imap4d/util.c (util_token): little helper function.

2001-02-25  Alain Magloire

	* lib/strtok_r.c: If there are no delimiters left save the old string
	and return NULL.

	* mailbox/folder_imap.c (imap_fetch): Finish imap FETCH command.
	(imap_rfc822): New Function.
	(imap_rfc822_text): New Function.
	(imap_rfc822_size): New Function.
	(imap_rfc822_header): New Function.
	(imap_uid): New Function.
	(imap_body): New Function.
	(imap_bodystructure0): Save the size.

2001-02-22  Alain Magloire

	* mailbox/property.c: New file.
	* include/mailutils/property.h: New file.
	* mailbox/mailbox.c (mailbox_get_property): New function,
	a first draft to let set "property" on a mailbox that can
	change its behaviour.
	* mailbox/include/mailbox0.h: New field in struct _mailbox, property.

	* sieve/lex-sieve.lex: Add LGPL banner.
	* sieve/gram-sieve.y: Add LGPL banner.

2001-02-22  Alain Magloire

	* sieve: New Directory.
	* sieve/lex-sieve.lex: RFC3028 tokenizer.
	* sieve/gram-sieve.y: RFC3028 grammar.

2001-02-20  Alain Magloire

	* mailbox/mailbox.c (mailbox_set_ticket): Those objects are now part
	of the folder if a folder is attached to the mailbox.
	(mailbox_set_authority: Likewise.
	(mailbox_set_stream): Likewise.
	* mailbox/mbx_imap.c (imap_message_read): If offset == 0, reset
	the lines to 0.
	(imap_body_read): Likewise.

2001-02-19  Alain Magloire

	* mailbox/mbx_pop.c (pop_body_read): Move the CHECK_BUSY higher
	it should be the first thing done.  If the state is POP_NO_STATE
	reset the offset and the size to 0 i.e we are starting fresh.
	(pop_header_read): Likewise.
	(pop_message_read): Likewise.
	* mailbox/stream.c (stream_write): Don't call stream_flush().

2001-02-04  Alain Magloire

	* mailbox/message.c (message_get_uid): Add message_get_uid() for
	the UID of the message (IMAP definition) and message_get_uidl() for
	the POP3 definition.
	* mailbox/attachment.c: Indentation fixes.
	* mailbox/file_stream.c: Make sure that the FILE* is close before		opening.
	* mailbox/folder_imap.c: Use strcasecmp() not strcmp().
	* mailbox/mailbox.c: Added mailbox_uidnext() and mailbox_uidvalidity.
	* mailbox/mapfile_stream.c: When munmap() failed we should check
	against MAP_FAILED, not NULL.
	* mailbox/mbx_imap.c: Implement imap_uidnext(), imap_uidvalidity()
	imap_message_uid().
	* mailbox/mbx_mbox.c: Implement mbox_uidnext(), mbox_uidvalidity()
	mbox_message_uid().
	* mailbox/mbx_mboxscan.c: Implement uidvalidity, it is save int the
	header of the first message, "X-IMAPbase: 127673838 12", a la c-client.
	Save UID, it is save in "X-UID".
	* mailbox/mbx_pop.c: Implement pop_messages_recent(),
	pop_message_unseen() and pop_uid().
	* mailbox/trans_stream.c: Indentation fixes.

	* include/mailutils/message.h: New prototypes message_get_uid(),
	message_set_get_uid().
	* include/mailutils/mailbox.h: New prototypes mailbox_uidnext(),
	mailbox_uidvalidity().

	* lib/snprintf.c lib/snprintf.h: Put it under the LGPL term.

	* mailbox/imap4d/fetch.c: First draft implementation, very yucky.
	* mailbox/imap4d/select.c: First draft implementation.
	* mailbox/imap4d/util.c: Add util_msgset() and util_send().
	Reuse of util_getcommand() for subcommands.

	* mailbox/pop3d/uidl.c: API change the call is message_get_uidl()
	to have UIDL POP3.


2001-02-03  Alain Magloire

	* mailbox/mailbox.c mailbox/mbx_mbox.c mailbox/mbx_imap.c:
	Implement mailbox_messages_recent() and mailbox_message_unseen(), this
	time as define by the IMAP rfc.

2001-02-02  Alain Magloire

	* mailbox/header.c: ENOENT was not return if the header was
	not found.
	* mailbox/mbx_mbox.c: When expunging check to see if the registar
	the path_record too.

2001-02-02  Alain Magloire

	* pop3d/extra.c (pop3_readline): Since the length of the string
	is known, we can use memcpy() and friends for string manipulations.
	memXXX() functions are builtin in GNU C (gcc) and are much faster
	then the strXXX() counterparts. Small change in the loop to take
	advantage of this.

	* pop3d/quit.c: The rfc1939 insist that after a QUIT, we must
	release any resources and close the connection:
	"Whether the removal was successful or not, the server
        then releases any exclusive-access lock on the maildrop
        and closes the TCP connection."  This was not done if error
	occured while expunging, now we will close the connection and
	notify the client of the error(ERR_FILE).

2001-02-01  Alain Magloire

	"Premature Optimization Is The Root Of All Evil", Knuth.

	* mailbox/attachment.c: Typo should be "Content-Disposition"

	* mailbox/mbx_mbox.c mailbox/mbx_mboxscan.c mailbox/header.c:
	Attempt to optimze the header, header_get_fvalue() is created,
	The mailbox save/cache the most common headers, when doing a
	header_get_value(), header_get_fvalue() is call first hoping
	that the requested header was cache, if it fails we fall back
	to the usual parsing.  The common elected headers are : From,
	To, Cc, Subject, Date, Content-Type, X-UIDL, X-UID.

	* mailbox/mailbox.c mailbox/mbx_mbox.c mailbox/mbx_imap.c:
	I've confuse the semantic of "unseen" and "recent", "unseen"
	means new mail, not recent.  Renamed mailbox_recent_count()
	to mailbox_unseen_count().
	* include/mailutils/mailbox.h: updated for mailbox_unseen_count()


2001-01-25  Alain Magloire

	* frm/frm.c: Forget to add --summary option and fix return status.
	When being very quiet just freopen(/dev/null, w, stdout).

2001-01-25  Alain Magloire

	* pop3d/capa.c: Add UIDL in the capability list.
	and update Copyrigth.
	* pop3d/pop3d.c: Remove mbox_record register, only need path_record.
	* pop3d/retr.c: When retrieve a message should be mark as read.
	since we do not strip out the header "Status:".
	* pop3d/top.c: Adjust stream_readline().

2001-01-25  Alain Magloire

	While working on the new version of the API mailbox, Changelog was
	discontinued, since the API could literaly change overnight a
	maintenace of the entries were of a particular burden.
	The API of the library, and some utilities like pop3d are
	stable enough to restart normal entries.

	* mailbox/*: New Api to access mailbox.
	* include/mailutils: Public prototypes of the API.
	* frm/frm.c frm/Makefile.am: A clone of elm frm utility.
	* from/from.c from/Makefile.am: A utility to scan mailboxes.
	* pop3d/* : GNU pop3d server.

2000-05-19  Sean 'Shaleh' Perry <shaleh@debian.org>

	* libmailbox/mh.c: fleshed out mh_open() some more

2000-05-18  Sean 'Shaleh' Perry <shaleh@debian.org>

	* libmailbox/mh.c: fleshed out mh_open() some more

2000-05-15  Sean 'Shaleh' Perry <shaleh@debian.org>

	* libmailbox/*: ran some files thru emacs indent, I think I introduced
	some oddness with vi
	* libmailbox/mh.[ch]: new files, based on maildir
	the mh work is very empty -- just mh_open right now

2000-04-19  Jeff Bailey  <jbailey@nisa.net>

	* configure.in: Test for limits.h and inttypes.h, add malloc
	and realloc checks.
	* m4/: New directory
	* m4/Makefile.am: New file to support directory
	* m4/malloc.m4: File to support lib/ directory
	* m4/realloc.m4: File to support lib/ directory
	* lib/Makefile.am: Distribute xalloc.h
	* lib/xalloc.h: New file to support xmalloc.c
	* lib/xmalloc.c: New version from sh-utils-2.0g
	* autogen.sh: Look in m4 for extra macros
	* doc/Makefile.am: Rearrange to quiet automake

2000-03-28  Jakob 'sparky' Kaivo  <jkaivo@elijah.nodomainname.net>

	* pop3d/pop3d.c (main): handle SIGPIPE

2000-01-19  Sean 'Shaleh' Perry

	* mailbox/mbx_mh.c: some more code fleshing, still ugly
	* README README-alpha: updates, corrected README to list mailbox as LGPL

2000-01-19  Sean 'Shaleh' Perry

	* mailbox/mbx_mh.c: new file
	no header, no error checking, no hable englais
	* url/url_mh.[ch]: new files
	url support for MH mailboxes

2000-01-17  Sean 'Shaleh' Perry

	* examples/from.c: remove extraneous copyright notice

1999-12-15  Alain Magloire

	* url/url_mbox.h url/url_pop.h url/url_imap.h url/url_mailto.h
	New files.

1999-12-01  Alain Magloire

	* url/_cpystr.c url/chewurl.c url/url.c url/url_imap.c
	url/url_mailto.c url/url_mbox.c url/url_pop.c : New files,
	first attempt to define the URL API.

	* lib/Makefile.am: added xmalloc.c, xstrdup.c, xstrtol.{c,h}
	* lib/xmalloc.c lib/xstrdup.c lib/xstrtol.c lib/xstrtol.h : New files

1999-11-21  Jeff Bailey

	* doc/rfc*: Add.  Standards followed should be included here.

1999-11-23  Jakob 'sparky' Kaivo

	* TODO: Mention Maildir
	* libmailbox/mailbox.c (mbox_init): new function
	* libmailbox/maildir.h: new file
	* libmailbox/maildir.c: new file
	* libmailbox/mailbox.c (mbox_open): uncommented maildir_open attempt

1999-11-15  Jeff Bailey

	* lib/ansi2knr.c lib/ansi2knr.h: Add

	* configure.in: Add AM_C_PROTOTYPES

	* libmailbox/Makefile.am: Add ansi2knr handling

1999-11-08  Sean 'Shaleh' Perry

	* cleaned up some of the automake autoconf magic for non-Linux

1999-11-07  Sean 'Shaleh' Perry

	* TODO: restructuring, now split into sections
	* libmailbox/mailbox.c libmailbox/mailbox.h: added two new functions
	to the api and began implementing them in unixmbox
		is_updated() => has this mailbox been updated externally?
		scan() => build info on mailbox, removing old data as needed
		currently not implemented

1999-11-06  Sean 'Shaleh' Perry

	* libmailbox/mailbox.c: more work on expunge
	* libmailbox/mailbox.c: added a tester routine
	* Makefile.am: added -g

1999-11-06  Sean 'Shaleh' Perry

	* libmailbox/unixmbox.c: work on expunge
	use read/write along with lseek still blows up -- getting there
	* mail/mail.c: check return value of mbox_open()

1999-10-23  Alain Magloire

	* ChangeLog: Cleanup according to GNU std, and remove
	of email addresses. The emails should be AUTHORS or THANKS
	so if they change no need to sed everything.

1999-10-11  Jeff Bailey

	* libmailbox/Makefile.am: Remove no-install option, add -pedantic

1999-10-12  Sean 'Shaleh' Perry

	* made sure that the imap4 was REALLY broken

1999-10-11  Jeff Bailey

	* imap4d/Makefile.am: New file

	* configure.in: Create imap4d/Makefile, and no install option
	for library

	* pop3d/Makefile.am: Add warnings, remove unneeded variable

        * TODO: Update

	* impa4rev1/: Rename to imap4d. (I asked first, really I did...)

	* lib/Makefile.am: Update for new files

	* lib/getline.c: New File

	* lib/getline.h: New file

1999-10-11  Sean 'Shaleh' Perry

	* added my imap code -- PLEASE DO NOT TOUCH

1999-10-10  Jeff Bailey

	* THANKS: New file

	* doc/mailutils.texi: New File
	Provided by Alain Magloire <alainm@rcsm.ece.mcgill.ca> with some
	changes so that Makeinfo reports no errors.

	* doc/Makefile.am: New file

	* configure.in: Deal with libsrc to lib rename

	* pop3d/Makefile.am: Deal with libsrc to lib rename

	* Makefile.am: Deal with libsrc to lib rename.
	Add reference to doc/ subdirectory.

	* libsrc/: Rename to lib/

1999-10-09  Sean 'Shaleh' Perry

	* Made changelog.pl output in approved format -- I miss the time stamp

1999-10-09 Sean 'Shaleh' Perry

	* added examples/gnu-pop3d.pam

1999-10-08  Jeff Bailey

	* doc/: New directory

	* pop3d/Makefile.am: Remove pam detection, now handled by configure
	in the @AUTHLIBS@ spot.

	* configure.in: Detect pam correctly/handle crypt case correctly
	Add option: --disable-pam

	* acconfig.h: New File

1999-10-08 Sean 'Shaleh' Perry

	* added showmail.c to examples
	* libmailbox: some minor code cleanups

1999-10-08 Sean 'Shaleh' Perry

	* fixed the "if empty mailbox, return not implemented"
	NB: seems there was a large assumption being made:
	if unixmbox_open() failed, it was because it was not mbox
	this was wrong for many reasons, so on actual "not mbox",
	return EBADMSG.
	Prolly want to come up with a better error, but this works for now
	* more cleaning in the mailbox code
	a) added stat() call -- we can bomb earlier, plus detect if
	passed object is a directory or file
	b) unixmbox_close() free()'s mbox.  This will hamper the use
	when we add support for more mailboxes later.  Need to find
	a solution.  Perhaps a unixmbox_free() call.
	There was also a small leak there -- mbox->name was being left.
	c) To aid checking in unixbox_open(), added checks around fgets call.
	Now properly detects EOF, errors, etc.  This was a large cause of the
	spurious "not implemented" bug.
	d) all of unixmbox_open()'s function calls should now be checked
	NB: need to do the same for rest of file

1999-10-07 Sean 'Shaleh' Perry

	* removed spurious code in from.c
	* added TODO file

1999-10-07  Jeff Bailey

	* Makefile.am: Compile libsrc/ first.

	* pop3d/Makefile.am: Link properly with crypt and libmailutils.a
	from libsrc/

	* libsrc/Makefile.am: Produce one library for all functions.
	Do not use libtool for this library, it will never be shared.

	* configure.in: Remove AM_MAINTAINER_MODE.  Export crypt detection
	to Makefiles

1999-10-07 Sean 'Shaleh' Perry

	* included my read_a_line() in examples/

1999-10-06 Sean 'Shaleh' Perry

	* Cleanup some compilation issues
	* changed "w+" to "w" in called to pop3_mainloop():ofile = fdopen()
	why was it called with w+?  It is only ever used for writing.
	* catch EINTR in call to accept() (play nice w/ our UNIX friends)
	* set SO_REUSEADDR on daemon's socket

1999-10-05 Sean 'Shaleh' Perry

	* Added changelog.pl so we can have automated entries
	set CVS_EMAIL=me@here.com and CVS_FULLNAME="Joe Blow"
	usage: changelog.pl "added signal.c" or changelog.pl, an editor will
	then appear (uses $VISUAL and $EDITOR)
	the format is controlled simply via the format call at the end
	and the section of perl code directly above it

1999-10-05 Sean 'Shaleh' Perry

	* added pop3d/signal.c -- contains pop3_sigchld() currently

1999-10-05 Sean 'Shaleh' Perry

	* initial fork() rewrite, not even compiled it yet

1999-10-04 Sean 'Shaleh' Perry

	* changed lock(int mode) to lock(mailbox_lock_t mode), this will allow
	the type to be chnaged later without affecting code compatibility
	* added name to AUTHORS
	* noticed mention of IMAP4 server and went back to coding it (-:

1999-10-03  Jeff Bailey

	* mail/mail.c: Support --help, --version.

	* mail/Makefile.am: Add -Wall to compile line.

	* libmailbox/Makefile.am: Add -Wall to compile line.

	* libmailbox/mailbox.c: Warning cleanup, second parameter of lock
	should be unsigned int, not int.

	* libmailbox/mailbox.h: ""

	* libmailbox/unixmbox.h: ""

	* libmailbox/unixmbox.c: ""

	* AUTHORS: Include my name. =)

	* README: Rewrite for public consumption

	* README-alpha: New file, add mailing list address, CVS information.

	* libmailbox/unixmbox.c: Include config.h if defined

	* libmailbox/mailbox.c: Include config.h if defined

	* mail/mail.c: Include config.h if defined, update copyright.


1999-10-01 Sean 'Shaleh' Perry

	* added an examples directory and the first example, from.c

1999-10-01 Jakob 'sparky' Kaivo

	* libmailbox/*.[ch]: added cleanup patches from Shaleh while he works
	on getting CVS access

1999-09-22  Jakob 'sparky' Kaivo

	* mail/mail.c (main): added 'f' and 'F' to test mbox_header_line

	* pop3d/apop.c (pop3_apop): cleanup, partial rewrite for libmailbox

	* pop3d/retr.c (pop3_retr): fixed a potential segfault

	* pop3d/user.c (pop3_user): cleanup and use mbox_lock

	* libmailbox/mailbox.c (mbox_header_line): new function
	(mbox_body_lines): new function

	* mail/Makefile.am (mail_DEPENDENCIES): added libmailbox.la

	* pop3d/top.c (pop3_top): made it work with libmailbox

	* libmailbox/unixmbox.c (unixmbox_open): added check to see if it's
	actually an mbox file
	(unixmbox_open): Set mbox->_lock to unixmbox_lock
	(unixmbox_lock): new function

	* libmailbox/unixmbox.h: Added prototype for locking

	* libmailbox/mailbox.c: Add dummy initializer for locking

	* libmailbox/mailbox.h: Added interface for locking
	Added interfaces for mbox_header_line and mbox_body_lines

	* pop3d/*.[ch]: changed copyright info to FSF

	* libmailbox/*.[ch]: added copyright/licensing info

1999-09-21  Jakob 'sparky' Kaivo

	* pop3d/Makefile.am (pop3d_LDADD): add $(AUTHLIBS)

	* configure.in: Added libsrc/Makefile to AC_OUTPUT (duh, Jake!)
	fixed the PAM and crypt checks

	* README: actually put something here, noted necessary tools to build
	from CVS

1999-09-14  Jakob 'sparky' Kaivo

	* pop3d/pop3d.c (main): moved setgid() call to after option parsing
	(main): make --version report PACKAGE and VERSION

	* libmailbox/mailbox.c (mbox_open): changed paramater type to const

	* pop3d/Makefile.am (INCLUDES): change relative directories to
	top_srcdir base

	* configure.in: Added checks for PAM and crypt

1999-09-13  Jakob 'sparky' Kaivo

	* pop3d/retr.c (pop3_retr): fixed calls mbox_header => mbox_get_header
	and mbox_body => mbox_get_body

	* pop3d/user.c (pop3_user): removed references to mailbox variable

	* pop3d/stat.c (pop3_stat): fixed mbox->is_deleted => mbox_is_deleted

	* pop3d/pop3d.c (pop3_mainloop): removed reference to lockfile variable

	* pop3d/extra.c (pop3_abquit): change fclose(mbox) to mbox_close(mbox)
	removed calls to free(messages) and pop3_unlock()

	* pop3d/dele.c (pop3_dele): fixed call to mbox_delete()

	* Makefile.am (SUBDIRS): added pop3d and libsrc

	* configure.in: Added checks needed for pop3d/*
	made it work with libtool

	* libsrc/*: imported from gnu-pop3d tree

	* pop3d/*: imported from gnu-pop3d tree

1999-09-11  Jeff Bailey

	* libmailbox/unixmbox.h: Do not prefix config.h defines with _

1999-09-10  Jeff Bailey

	* */*: Accomidate directory rearrange

