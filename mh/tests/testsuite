#! /bin/sh
# Generated from testsuite.at by GNU Autoconf 2.69.
#
# Copyright (C) 2009-2012 Free Software Foundation, Inc.
#
# This test suite is free software; the Free Software Foundation gives
# unlimited permission to copy, distribute and modify it.
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

if test "x$CONFIG_SHELL" = x; then
  as_bourne_compatible="if test -n \"\${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on \${1+\"\$@\"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '\${1+\"\$@\"}'='\"\$@\"'
  setopt NO_GLOB_SUBST
else
  case \`(set -o) 2>/dev/null\` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi
"
  as_required="as_fn_return () { (exit \$1); }
as_fn_success () { as_fn_return 0; }
as_fn_failure () { as_fn_return 1; }
as_fn_ret_success () { return 0; }
as_fn_ret_failure () { return 1; }

exitcode=0
as_fn_success || { exitcode=1; echo as_fn_success failed.; }
as_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }
as_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }
as_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }
if ( set x; as_fn_ret_success y && test x = \"\$1\" ); then :

else
  exitcode=1; echo positional parameters were not saved.
fi
test x\$exitcode = x0 || exit 1
test -x / || exit 1"
  as_suggested="  as_lineno_1=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_1a=\$LINENO
  as_lineno_2=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_2a=\$LINENO
  eval 'test \"x\$as_lineno_1'\$as_run'\" != \"x\$as_lineno_2'\$as_run'\" &&
  test \"x\`expr \$as_lineno_1'\$as_run' + 1\`\" = \"x\$as_lineno_2'\$as_run'\"' || exit 1
test \$(( 1 + 1 )) = 2 || exit 1"
  if (eval "$as_required") 2>/dev/null; then :
  as_have_required=yes
else
  as_have_required=no
fi
  if test x$as_have_required = xyes && (eval "$as_suggested") 2>/dev/null; then :

else
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_found=false
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  as_found=:
  case $as_dir in #(
	 /*)
	   for as_base in sh bash ksh sh5; do
	     # Try only shells that exist, to save several forks.
	     as_shell=$as_dir/$as_base
	     if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
		    { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$as_shell"; } 2>/dev/null; then :
  CONFIG_SHELL=$as_shell as_have_required=yes
		   if { $as_echo "$as_bourne_compatible""$as_suggested" | as_run=a "$as_shell"; } 2>/dev/null; then :
  break 2
fi
fi
	   done;;
       esac
  as_found=false
done
$as_found || { if { test -f "$SHELL" || test -f "$SHELL.exe"; } &&
	      { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$SHELL"; } 2>/dev/null; then :
  CONFIG_SHELL=$SHELL as_have_required=yes
fi; }
IFS=$as_save_IFS


      if test "x$CONFIG_SHELL" != x; then :
  export CONFIG_SHELL
             # We cannot yet assume a decent shell, so we have to provide a
# neutralization value for shells without unset; and this also
# works around shells that cannot unset nonexistent variables.
# Preserve -v and -x to the replacement shell.
BASH_ENV=/dev/null
ENV=/dev/null
(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
case $- in # ((((
  *v*x* | *x*v* ) as_opts=-vx ;;
  *v* ) as_opts=-v ;;
  *x* ) as_opts=-x ;;
  * ) as_opts= ;;
esac
exec $CONFIG_SHELL $as_opts "$as_myself" ${1+"$@"}
# Admittedly, this is quite paranoid, since all the known shells bail
# out after a failed `exec'.
$as_echo "$0: could not re-execute with $CONFIG_SHELL" >&2
exit 255
fi

    if test x$as_have_required = xno; then :
  $as_echo "$0: This script requires a shell more modern than all"
  $as_echo "$0: the shells that I found on your system."
  if test x${ZSH_VERSION+set} = xset ; then
    $as_echo "$0: In particular, zsh $ZSH_VERSION has bugs and should"
    $as_echo "$0: be upgraded to zsh 4.3.4 or later."
  else
    $as_echo "$0: Please tell bug-autoconf@gnu.org about your system,
$0: including any error possibly output before this
$0: message. Then install a modern shell, or manually run
$0: the script under such a shell if you do have one."
  fi
  exit 1
fi
fi
fi
SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
# Unset more variables known to interfere with behavior of common tools.
CLICOLOR_FORCE= GREP_OPTIONS=
unset CLICOLOR_FORCE GREP_OPTIONS

## --------------------- ##
## M4sh Shell Functions. ##
## --------------------- ##
# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset

# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p

# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error

if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


  as_lineno_1=$LINENO as_lineno_1a=$LINENO
  as_lineno_2=$LINENO as_lineno_2a=$LINENO
  eval 'test "x$as_lineno_1'$as_run'" != "x$as_lineno_2'$as_run'" &&
  test "x`expr $as_lineno_1'$as_run' + 1`" = "x$as_lineno_2'$as_run'"' || {
  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)
  sed -n '
    p
    /[$]LINENO/=
  ' <$as_myself |
    sed '
      s/[$]LINENO.*/&-/
      t lineno
      b
      :lineno
      N
      :loop
      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
      t loop
      s/-\n.*//
    ' >$as_me.lineno &&
  chmod +x "$as_me.lineno" ||
    { $as_echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2; as_fn_exit 1; }

  # If we had to re-execute with $CONFIG_SHELL, we're ensured to have
  # already done that, so ensure we don't try to do so again and fall
  # in an infinite loop.  This has already happened in practice.
  _as_can_reexec=no; export _as_can_reexec
  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensitive to this).
  . "./$as_me.lineno"
  # Exit status is that of the last command.
  exit
}

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null

if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"





SHELL=${CONFIG_SHELL-/bin/sh}

# How were we run?
at_cli_args="$@"


# Not all shells have the 'times' builtin; the subshell is needed to make
# sure we discard the 'times: not found' message from the shell.
at_times_p=false
(times) >/dev/null 2>&1 && at_times_p=:

# CLI Arguments to pass to the debugging scripts.
at_debug_args=
# -e sets to true
at_errexit_p=false
# Shall we be verbose?  ':' means no, empty means yes.
at_verbose=:
at_quiet=
# Running several jobs in parallel, 0 means as many as test groups.
at_jobs=1
at_traceon=:
at_trace_echo=:
at_check_filter_trace=:

# Shall we keep the debug scripts?  Must be `:' when the suite is
# run by a debug script, so that the script doesn't remove itself.
at_debug_p=false
# Display help message?
at_help_p=false
# Display the version message?
at_version_p=false
# List test groups?
at_list_p=false
# --clean
at_clean=false
# Test groups to run
at_groups=
# Whether to rerun failed tests.
at_recheck=
# Whether a write failure occurred
at_write_fail=0

# The directory we run the suite in.  Default to . if no -C option.
at_dir=`pwd`
# An absolute reference to this testsuite script.
case $as_myself in
  [\\/]* | ?:[\\/]* ) at_myself=$as_myself ;;
  * ) at_myself=$at_dir/$as_myself ;;
esac
# Whether -C is in effect.
at_change_dir=false

# Whether to enable colored test results.
at_color=no
# List of the tested programs.
at_tested=''
# As many question marks as there are digits in the last test group number.
# Used to normalize the test group numbers so that `ls' lists them in
# numerical order.
at_format='???'
# Description of all the test groups.
at_help_all="1;install-mh.at:18;install-mh -auto;install-mh install-mh00;
2;install-mh.at:44;install-mh with invalid profile;install-mh install-mh01;
3;mhseq.at:22;mhseq: existing message number;mhseq mh-sequences mhseq00;
4;mhseq.at:30;mhseq: not existing message number;mhseq mh-sequences mhseq01;
5;mhseq.at:40;mhseq: contiguous message range;mhseq mh-sequences mhseq02;
6;mhseq.at:51;mhseq: reversed contiguous message range;mhseq mh-sequences mhseq03;
7;mhseq.at:62;mhseq: reversed non-contiguous message range;mhseq mh-sequences mhseq04;
8;mhseq.at:73;mhseq: message range (left fixup);mhseq mh-sequences mhseq05;
9;mhseq.at:85;mhseq: message range (right fixup);mhseq mh-sequences mhseq06;
10;mhseq.at:97;mhseq: message range (both fixups);mhseq mh-sequences mhseq07;
11;mhseq.at:109;mhseq: non-existent message range (left);mhseq mh-sequences mhseq08;
12;mhseq.at:120;mhseq: non-existent message range (right);mhseq mh-sequences mhseq09;
13;mhseq.at:129;mhseq: message set addition;mhseq mh-sequences mhseq10;
14;mhseq.at:146;mhseq: message set optimization;mhseq mh-sequences mhseq11;
15;mhseq.at:169;mhseq: counted range (positive);mhseq mh-sequences mhseq12;
16;mhseq.at:180;mhseq: non-contiguous counted range (positive);mhseq mh-sequences mhseq13;
17;mhseq.at:193;mhseq: counted range (positive, left fixup);mhseq mh-sequences mhseq14;
18;mhseq.at:205;mhseq: counted range (positive, right fixup);mhseq mh-sequences mhseq15;
19;mhseq.at:216;mhseq: invalid counted range (negative);mhseq mh-sequences mhseq16;
20;mhseq.at:227;mhseq: counted range (negative);mhseq mh-sequences mhseq17;
21;mhseq.at:238;mhseq: non-contiguous counted range (negative);mhseq mh-sequences mhseq18;
22;mhseq.at:251;mhseq: counted range (negative, left fixup);mhseq mh-sequences mhseq19;
23;mhseq.at:262;mhseq: counted range (negative, right fixup);mhseq mh-sequences mhseq20;
24;mhseq.at:273;mhseq: invalid counted range (negative);mhseq mh-sequences mhseq21;
25;mhseq.at:284;mhseq: cur;mhseq mh-sequences mhseq22 cur;
26;mhseq.at:294;mhseq: cur:n -- default direction;mhseq mh-sequences mhseq23 cur:n;
27;mhseq.at:305;mhseq: cur:n -- explicit dir (negative);mhseq mh-sequences mhseq24 cur:n cur:n-;
28;mhseq.at:316;mhseq: cur:n -- explicit dir (positive);mhseq mh-sequences mhseq25 cur:n cur:n+;
29;mhseq.at:327;mhseq: next;mhseq mh-sequences mhseq26 next;
30;mhseq.at:338;mhseq: next:n -- default direction;mhseq mh-sequences mhseq27 next:n;
31;mhseq.at:349;mhseq: prev;mhseq mh-sequences mhseq28 prev;
32;mhseq.at:360;mhseq: prev:n -- default direction;mhseq mh-sequences mhseq29 prev:n;
33;mhseq.at:371;mhseq: first;mhseq mh-sequences mhseq30 first;
34;mhseq.at:381;mhseq: first:n -- default direction;mhseq mh-sequences mhseq31 first:n;
35;mhseq.at:392;mhseq: last;mhseq mh-sequences mhseq32 last;
36;mhseq.at:400;mhseq: last:n -- default direction;mhseq mh-sequences mhseq33 last:n;
37;ali.at:20;ali: simple aliases;ali ali00;
38;ali.at:31;ali: recursive aliases;ali ali01;
39;ali.at:42;ali: file inlcusion;ali ali02 ali-include;
40;ali.at:56;ali: recursive inlcusion;ali ali03 ali-include-recursive;
41;ali.at:77;ali: group name;ali ali04 ali-group-name;
42;ali.at:87;ali: group id;ali ali05 ali-group-id ali-gid;
43;ali.at:100;ali: everybody;ali ali06 ali-everybody;
44;ali.at:111;ali: executable file inlcusion;ali ali02 ali-xinclude;
45;folder.at:20;folder;folder folder00 folder-print;
46;folder.at:30;folder -all;folder folder01 folder-all;
47;folder.at:45;folder -all -fast;folder folder02 folder-all folder-all-fast;
48;folder.at:56;folder +mbox;folder folder03 folder+mbox;
49;folder.at:69;folder +mbox msg;folder folder04 folder+mbox_msg;
50;folder.at:84;folder -pack;folder folder05 folder-pack;
51;folder.at:102;folder --pack=N;folder folder06 folder--pack=n;
52;folder.at:120;folder -push/-pop;folder folder07 folder-push folder-pop folder-push-pop;
53;folder.at:138;folder -create;folder folder08 folder-create;
54;inc.at:20;inc -notruncate;inc inc00 inc-notruncate;
55;inc.at:33;inc -truncate;inc inc01 inc-truncate;
56;inc.at:48;inc -folder;inc inc02 inc-folder;
57;inc.at:61;inc -changecur;inc inc03 inc-changecur;
58;inc.at:74;inc -nochangecur;inc inc04 inc-nochangecur;
59;scan.at:21;scan;scan scan00;
60;scan.at:34;scan -folder;scan scan01 scan-folder;
61;scan.at:46;scan -format;scan scan02 scan-format;
62;scan.at:58;scan -form;scan scan03 scan-form;
63;scan.at:71;scan -reverse;scan scan04 scan-reverse;
64;rmm.at:21;rmm msg;rmm rmm00 rmm-msg;
65;rmm.at:34;rmm seq;rmm rmm01 rmm-seq;
66;rmm.at:52;rmm rmmproc;rmm rmm02 rmmproc;
67;rmm.at:67;rmm -- null rmmproc;rmm rmm03 null-rmmproc;
68;rmf.at:21;rmf +folder;rmf rmf00 rmf+folder;
69;rmf.at:33;rmf;rmf rmf01 rmf_cur;
70;mark.at:20;mark -add;mark mark00 mark-add;
71;mark.at:31;mark -add -zero;mark mark01 mark-add-zero;
72;mark.at:44;mark -add -nopublic;mark mark02 mark-add-nopublic;
73;mark.at:54;mark -del;mark mark03 mark-del;
74;mark.at:65;mark -del -nopublic;mark mark04 mark-del-nopublic;
75;mark.at:79;mark -list;mark mark05 mark-list;
76;mhparam.at:20;mhparam -all;mhparam mhparam00 mhparam-all;
77;mhparam.at:37;mhparam comp;mhparam mhparam01 mhparam_comp;
78;mhparam.at:49;mhparam comp comp;mhparam mhparam02 mhparam_comp_comp;
79;mhparam.at:62;mhparam -component comp;mhparam mhparam03 mhparam-component_comp;
80;refile.at:20;refile;refile refile00;
81;refile.at:39;refile -file;refile refile01 refile-file;
82;refile.at:56;refile --copy;refile refile02 refile--copy;
83;mhpath.at:20;mhpath;mhpath mhpath00;
84;mhpath.at:29;mhpath +;mhpath mhpath01 mhpath+;
85;mhpath.at:38;mhpath msgs;mhpath mhpath02 mhparam_msgs;
86;mhpath.at:48;mhpath msgs (some nonexistent);mhpath mhpath03 mhparam_msgs_some_nonex;
87;mhpath.at:57;mhpath msgs (all nonexistent);mhpath mhpath04 mhparam_msgs_all_nonex;
88;mhpath.at:88;mhpath nonexistent;mhpath mhpath05 mhparam_nonexistent;
89;mhpath.at:97;mhpath new;mhpath mhpath06 mhparam_new;
90;mhl.at:20;mhl;mhl mhl00;
91;mhl.at:38;mhl repl;mhl mhl01 mhl.repl;
92;mhl.at:49;mhl usenet;mhl mhl02 mhl.usenet;
93;anno.at:20;anno;anno anno00;
94;anno.at:31;anno -component;anno anno01 anno-component;
95;anno.at:41;anno -component -text;anno anno02 anno-component-text;
96;anno.at:52;anno -component -text -nodate;anno anno03 anno-component-text-nodate;
97;pick.at:20;pick -from;pick pick00 pick-from;
98;pick.at:44;pick -from -sequence;pick pick01 pick-from-sequence;
99;pick.at:55;pick -search;pick pick02 pick-search;
100;pick.at:65;pick -search regex;pick pick03 pick-search-regex;
101;pick.at:77;pick -subject -from;pick pick04 pick-subject-from;
102;pick.at:98;pick -subject -and -from;pick pick05 pick-subject-and-from;
103;pick.at:119;pick -subject -or -from;pick pick06 pick-subject-or-from;
104;pick.at:161;pick: default precedence;pick pick07 pick-subject-and-from-or-from;
105;pick.at:220;pick: explicit precedence (1);pick pick08 pick-expl-1;
106;pick.at:279;pick: explicit precedence (2);pick pick09 pick-expl-2;
107;pick.at:313;pick -before;pick pick10 pick-before;
108;pick.at:323;pick --Component pattern;pick pick11 pick-component;
109;burst.at:20;burst digest;burst burst00 burst-digest;
110;burst.at:70;burst digest /w EB length limit;burst burst01 burst-digest-eb-length;
111;burst.at:120;burst mime;burst burst02 burst-mime;
112;burst.at:141;burst mime recursive;burst burst03 burst-mime-recursive;
113;burst.at:202;burst non-digest;burst burst04 burst-non-digest;
114;comp.at:21;comp -file;comp comp00 comp-file;
115;comp.at:41;comp -file (del);comp comp01 comp-file_del;
116;comp.at:55;comp file;comp comp02 comp_file;
117;comp.at:75;comp -use file;comp comp03 comp-use_file;
118;comp.at:104;comp +folder msg;comp comp04 comp+folder_msg;
119;comp.at:144;comp -draftfolder;comp comp05 comp-draftfolder draftfolder;
120;comp.at:165;comp +draftfolder -use;comp comp06 comp-draftfolder-use draftfolder;
121;forw.at:21;forw msg;forw forw00 forw-msg;
122;forw.at:81;forw -format msg;forw forw01 forw-format-msg;
123;forw.at:141;forw msgs;forw forw02 forw-msgs;
124;forw.at:231;forw -build msg;forw forw03 forw-build-msg;
125;forw.at:270;forw -build -mime msgs;forw forw04 forw-build-mime-msg;
126;forw.at:315;forw -draftfolder;forw forw05 forw-draftfolder draftfolder;
127;forw.at:374;forw -file;forw forw06 forw-file;
128;repl.at:23;repl msg;repl repl00 repl-msg;
129;repl.at:52;repl -draftfolder;repl repl01 repl-draftfolder;
130;mhn.at:24;mhn -list;mhn mhn00 mhn-list;
131;mhn.at:47;mhn -list -realsize;mhn mhn01 mhn-list-realsize;
132;mhn.at:74;mhn -store;mhn mhn02 mhn-store;
133;mhn.at:131;mhn -store -auto;mhn mhn03 mhn-store-auto;
134;mhn.at:142;mhn -store -auto -part;mhn mhn04 mhn-store-auto-part;
135;mhn.at:150;mhn -store -auto (pathname safety);mhn mhn05 mhn-store-auto-safety;
136;mhn.at:173;mhn-storage;mhn mhn06 mhn-store-auto;
137;mhn.at:190;mhn-store-: all escapes;mhn mhn07 mhn-store_escapes;
138;mhn.at:209;mhn-store-: absolute path;mhn mhn08 mhn-store_abspath;
139;mhn.at:225;mhn-store-: +folder;mhn mhn09 mhn-store+folder;
140;mhn.at:241;mhn-store-: +;mhn mhn10 mhn-store+;
141;mhn.at:256;mhn-store-: pipe;mhn mhn11 mhn-store-pipe;
142;mhn.at:287;mhn-show msg1;mhn mhn12 mhn-show-msg1;
143;mhn.at:338;mhn-show type=tar;mhn mhn13 mhn-show-type=tar;
144;mhn.at:366;mhn-show unsupported type;mhn mhn14 mhn-show-unsupported-type;
145;mhn.at:387;mhn-show- variable (with subtype);mhn mhn15 mhn-show-with-subtype;
146;mhn.at:416;mhn-show- variable (without subtype);mhn mhn16 mhn-show-without-subtype;
147;mhn.at:448;mhn-compose: adjacent plain text;mhn mhn17 mhn-compose mhn-compose-01;
148;mhn.at:482;mhn-compose: plain text content types;mhn mhn18 mhn-compose mhn-compose-02;
149;mhn.at:528;mhn-compose: sharp at the beginning of a line;mhn mhn19 mhn-compose mhn-compose-03;
150;mhn.at:550;mhn-compose: charset;mhn mhn20 mhn-compose mhn-compose-04;
151;mhn.at:573;mhn-compose: forward;mhn mhn21 mhn-compose mhn-compose-05;
152;mhn.at:699;mhn-compose: forward (current folder);mhn mhn22 mhn-compose mhn-compose-06;
153;mhn.at:826;mhn-compose: forward (single message);mhn mhn23 mhn-compose mhn-compose-07;
154;mhn.at:896;mhn-compose: external data;mhn mhn24 mhn-compose mhn-compose-08;
155;mhn.at:929;mhn-compose: multipart;mhn mhn25 mhn-compose mhn-compose-09;
156;send.at:21;send file;send send00 send-file;
157;send.at:48;send files;send send01 send-files;
158;send.at:98;send -draft;send send02 send-draft;
159;send.at:131;send -draftfolder;send send03 send-draftfolder draftfolder draftmessage;
160;send.at:160;send -draftmessage;send send04 send-draftmessage draftfolder draftmessage;
161;sortm.at:22;sortm -textfield;sortm sortm00 sortm-textfield;
162;sortm.at:126;sortm -datefield;sortm sortm01 sortm-datefield;
"
# List of the all the test groups.
at_groups_all=`$as_echo "$at_help_all" | sed 's/;.*//'`

# at_fn_validate_ranges NAME...
# -----------------------------
# Validate and normalize the test group number contained in each variable
# NAME. Leading zeroes are treated as decimal.
at_fn_validate_ranges ()
{
  for at_grp
  do
    eval at_value=\$$at_grp
    if test $at_value -lt 1 || test $at_value -gt 162; then
      $as_echo "invalid test group: $at_value" >&2
      exit 1
    fi
    case $at_value in
      0*) # We want to treat leading 0 as decimal, like expr and test, but
	  # AS_VAR_ARITH treats it as octal if it uses $(( )).
	  # With XSI shells, ${at_value#${at_value%%[1-9]*}} avoids the
	  # expr fork, but it is not worth the effort to determine if the
	  # shell supports XSI when the user can just avoid leading 0.
	  eval $at_grp='`expr $at_value + 0`' ;;
    esac
  done
}

at_prev=
for at_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$at_prev"; then
    at_option=$at_prev=$at_option
    at_prev=
  fi

  case $at_option in
  *=?*) at_optarg=`expr "X$at_option" : '[^=]*=\(.*\)'` ;;
  *)    at_optarg= ;;
  esac

  # Accept the important Cygnus configure options, so we can diagnose typos.

  case $at_option in
    --help | -h )
	at_help_p=:
	;;

    --list | -l )
	at_list_p=:
	;;

    --version | -V )
	at_version_p=:
	;;

    --clean | -c )
	at_clean=:
	;;

    --color )
	at_color=always
	;;
    --color=* )
	case $at_optarg in
	no | never | none) at_color=never ;;
	auto | tty | if-tty) at_color=auto ;;
	always | yes | force) at_color=always ;;
	*) at_optname=`echo " $at_option" | sed 's/^ //; s/=.*//'`
	   as_fn_error $? "unrecognized argument to $at_optname: $at_optarg" ;;
	esac
	;;

    --debug | -d )
	at_debug_p=:
	;;

    --errexit | -e )
	at_debug_p=:
	at_errexit_p=:
	;;

    --verbose | -v )
	at_verbose=; at_quiet=:
	;;

    --trace | -x )
	at_traceon='set -x'
	at_trace_echo=echo
	at_check_filter_trace=at_fn_filter_trace
	;;

    [0-9] | [0-9][0-9] | [0-9][0-9][0-9] | [0-9][0-9][0-9][0-9])
	at_fn_validate_ranges at_option
	as_fn_append at_groups "$at_option$as_nl"
	;;

    # Ranges
    [0-9]- | [0-9][0-9]- | [0-9][0-9][0-9]- | [0-9][0-9][0-9][0-9]-)
	at_range_start=`echo $at_option |tr -d X-`
	at_fn_validate_ranges at_range_start
	at_range=`$as_echo "$at_groups_all" | \
	  sed -ne '/^'$at_range_start'$/,$p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    -[0-9] | -[0-9][0-9] | -[0-9][0-9][0-9] | -[0-9][0-9][0-9][0-9])
	at_range_end=`echo $at_option |tr -d X-`
	at_fn_validate_ranges at_range_end
	at_range=`$as_echo "$at_groups_all" | \
	  sed -ne '1,/^'$at_range_end'$/p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    [0-9]-[0-9] | [0-9]-[0-9][0-9] | [0-9]-[0-9][0-9][0-9] | \
    [0-9]-[0-9][0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9] | \
    [0-9][0-9]-[0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] )
	at_range_start=`expr $at_option : '\(.*\)-'`
	at_range_end=`expr $at_option : '.*-\(.*\)'`
	if test $at_range_start -gt $at_range_end; then
	  at_tmp=$at_range_end
	  at_range_end=$at_range_start
	  at_range_start=$at_tmp
	fi
	at_fn_validate_ranges at_range_start at_range_end
	at_range=`$as_echo "$at_groups_all" | \
	  sed -ne '/^'$at_range_start'$/,/^'$at_range_end'$/p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    # Directory selection.
    --directory | -C )
	at_prev=--directory
	;;
    --directory=* )
	at_change_dir=:
	at_dir=$at_optarg
	if test x- = "x$at_dir" ; then
	  at_dir=./-
	fi
	;;

    # Parallel execution.
    --jobs | -j )
	at_jobs=0
	;;
    --jobs=* | -j[0-9]* )
	if test -n "$at_optarg"; then
	  at_jobs=$at_optarg
	else
	  at_jobs=`expr X$at_option : 'X-j\(.*\)'`
	fi
	case $at_jobs in *[!0-9]*)
	  at_optname=`echo " $at_option" | sed 's/^ //; s/[0-9=].*//'`
	  as_fn_error $? "non-numeric argument to $at_optname: $at_jobs" ;;
	esac
	;;

    # Keywords.
    --keywords | -k )
	at_prev=--keywords
	;;
    --keywords=* )
	at_groups_selected=$at_help_all
	at_save_IFS=$IFS
	IFS=,
	set X $at_optarg
	shift
	IFS=$at_save_IFS
	for at_keyword
	do
	  at_invert=
	  case $at_keyword in
	  '!'*)
	    at_invert="-v"
	    at_keyword=`expr "X$at_keyword" : 'X!\(.*\)'`
	    ;;
	  esac
	  # It is on purpose that we match the test group titles too.
	  at_groups_selected=`$as_echo "$at_groups_selected" |
	      grep -i $at_invert "^[1-9][^;]*;.*[; ]$at_keyword[ ;]"`
	done
	# Smash the keywords.
	at_groups_selected=`$as_echo "$at_groups_selected" | sed 's/;.*//'`
	as_fn_append at_groups "$at_groups_selected$as_nl"
	;;
    --recheck)
	at_recheck=:
	;;

    *=*)
	at_envvar=`expr "x$at_option" : 'x\([^=]*\)='`
	# Reject names that are not valid shell variable names.
	case $at_envvar in
	  '' | [0-9]* | *[!_$as_cr_alnum]* )
	    as_fn_error $? "invalid variable name: \`$at_envvar'" ;;
	esac
	at_value=`$as_echo "$at_optarg" | sed "s/'/'\\\\\\\\''/g"`
	# Export now, but save eval for later and for debug scripts.
	export $at_envvar
	as_fn_append at_debug_args " $at_envvar='$at_value'"
	;;

     *) $as_echo "$as_me: invalid option: $at_option" >&2
	$as_echo "Try \`$0 --help' for more information." >&2
	exit 1
	;;
  esac
done

# Verify our last option didn't require an argument
if test -n "$at_prev"; then :
  as_fn_error $? "\`$at_prev' requires an argument"
fi

# The file containing the suite.
at_suite_log=$at_dir/$as_me.log

# Selected test groups.
if test -z "$at_groups$at_recheck"; then
  at_groups=$at_groups_all
else
  if test -n "$at_recheck" && test -r "$at_suite_log"; then
    at_oldfails=`sed -n '
      /^Failed tests:$/,/^Skipped tests:$/{
	s/^[ ]*\([1-9][0-9]*\):.*/\1/p
      }
      /^Unexpected passes:$/,/^## Detailed failed tests/{
	s/^[ ]*\([1-9][0-9]*\):.*/\1/p
      }
      /^## Detailed failed tests/q
      ' "$at_suite_log"`
    as_fn_append at_groups "$at_oldfails$as_nl"
  fi
  # Sort the tests, removing duplicates.
  at_groups=`$as_echo "$at_groups" | sort -nu | sed '/^$/d'`
fi

if test x"$at_color" = xalways \
   || { test x"$at_color" = xauto && test -t 1; }; then
  at_red=`printf '\033[0;31m'`
  at_grn=`printf '\033[0;32m'`
  at_lgn=`printf '\033[1;32m'`
  at_blu=`printf '\033[1;34m'`
  at_std=`printf '\033[m'`
else
  at_red= at_grn= at_lgn= at_blu= at_std=
fi

# Help message.
if $at_help_p; then
  cat <<_ATEOF || at_write_fail=1
Usage: $0 [OPTION]... [VARIABLE=VALUE]... [TESTS]

Run all the tests, or the selected TESTS, given by numeric ranges, and
save a detailed log file.  Upon failure, create debugging scripts.

Do not change environment variables directly.  Instead, set them via
command line arguments.  Set \`AUTOTEST_PATH' to select the executables
to exercise.  Each relative directory is expanded as build and source
directories relative to the top level of this distribution.
E.g., from within the build directory /tmp/foo-1.0, invoking this:

  $ $0 AUTOTEST_PATH=bin

is equivalent to the following, assuming the source directory is /src/foo-1.0:

  PATH=/tmp/foo-1.0/bin:/src/foo-1.0/bin:\$PATH $0
_ATEOF
cat <<_ATEOF || at_write_fail=1

Operation modes:
  -h, --help     print the help message, then exit
  -V, --version  print version number, then exit
  -c, --clean    remove all the files this test suite might create and exit
  -l, --list     describes all the tests, or the selected TESTS
_ATEOF
cat <<_ATEOF || at_write_fail=1

Execution tuning:
  -C, --directory=DIR
                 change to directory DIR before starting
      --color[=never|auto|always]
                 enable colored test results on terminal, or always
  -j, --jobs[=N]
                 Allow N jobs at once; infinite jobs with no arg (default 1)
  -k, --keywords=KEYWORDS
                 select the tests matching all the comma-separated KEYWORDS
                 multiple \`-k' accumulate; prefixed \`!' negates a KEYWORD
      --recheck  select all tests that failed or passed unexpectedly last time
  -e, --errexit  abort as soon as a test fails; implies --debug
  -v, --verbose  force more detailed output
                 default for debugging scripts
  -d, --debug    inhibit clean up and top-level logging
                 default for debugging scripts
  -x, --trace    enable tests shell tracing
_ATEOF
cat <<_ATEOF || at_write_fail=1

Report bugs to <bug-mailutils@gnu.org>.
General help using GNU software: <http://www.gnu.org/gethelp/>.
_ATEOF
  exit $at_write_fail
fi

# List of tests.
if $at_list_p; then
  cat <<_ATEOF || at_write_fail=1
GNU Mailutils 2.99.98 test suite test groups:

 NUM: FILE-NAME:LINE     TEST-GROUP-NAME
      KEYWORDS

_ATEOF
  # Pass an empty line as separator between selected groups and help.
  $as_echo "$at_groups$as_nl$as_nl$at_help_all" |
    awk 'NF == 1 && FS != ";" {
	   selected[$ 1] = 1
	   next
	 }
	 /^$/ { FS = ";" }
	 NF > 0 {
	   if (selected[$ 1]) {
	     printf " %3d: %-18s %s\n", $ 1, $ 2, $ 3
	     if ($ 4) {
	       lmax = 79
	       indent = "     "
	       line = indent
	       len = length (line)
	       n = split ($ 4, a, " ")
	       for (i = 1; i <= n; i++) {
		 l = length (a[i]) + 1
		 if (i > 1 && len + l > lmax) {
		   print line
		   line = indent " " a[i]
		   len = length (line)
		 } else {
		   line = line " " a[i]
		   len += l
		 }
	       }
	       if (n)
		 print line
	     }
	   }
	 }' || at_write_fail=1
  exit $at_write_fail
fi
if $at_version_p; then
  $as_echo "$as_me (GNU Mailutils 2.99.98)" &&
  cat <<\_ATEOF || at_write_fail=1

Copyright (C) 2012 Free Software Foundation, Inc.
This test suite is free software; the Free Software Foundation gives
unlimited permission to copy, distribute and modify it.
_ATEOF
  exit $at_write_fail
fi

# Should we print banners?  Yes if more than one test is run.
case $at_groups in #(
  *$as_nl* )
      at_print_banners=: ;; #(
  * ) at_print_banners=false ;;
esac
# Text for banner N, set to a single space once printed.
# Banner 1. install-mh.at:17
# Category starts at test group 1.
at_banner_text_1="install-mh"
# Banner 2. mhseq.at:17
# Category starts at test group 3.
at_banner_text_2="mhseq"
# Banner 3. ali.at:17
# Category starts at test group 37.
at_banner_text_3="ali"
# Banner 4. folder.at:17
# Category starts at test group 45.
at_banner_text_4="folder"
# Banner 5. inc.at:17
# Category starts at test group 54.
at_banner_text_5="inc"
# Banner 6. scan.at:17
# Category starts at test group 59.
at_banner_text_6="scan"
# Banner 7. rmm.at:17
# Category starts at test group 64.
at_banner_text_7="rmm"
# Banner 8. rmf.at:17
# Category starts at test group 68.
at_banner_text_8="rmf"
# Banner 9. mark.at:17
# Category starts at test group 70.
at_banner_text_9="mark"
# Banner 10. mhparam.at:17
# Category starts at test group 76.
at_banner_text_10="mhparam"
# Banner 11. refile.at:17
# Category starts at test group 80.
at_banner_text_11="refile"
# Banner 12. mhpath.at:17
# Category starts at test group 83.
at_banner_text_12="mhpath"
# Banner 13. mhl.at:17
# Category starts at test group 90.
at_banner_text_13="mhl"
# Banner 14. anno.at:17
# Category starts at test group 93.
at_banner_text_14="anno"
# Banner 15. pick.at:17
# Category starts at test group 97.
at_banner_text_15="pick"
# Banner 16. burst.at:17
# Category starts at test group 109.
at_banner_text_16="burst"
# Banner 17. comp.at:17
# Category starts at test group 114.
at_banner_text_17="comp"
# Banner 18. forw.at:17
# Category starts at test group 121.
at_banner_text_18="forw"
# Banner 19. repl.at:17
# Category starts at test group 128.
at_banner_text_19="repl"
# Banner 20. mhn.at:17
# Category starts at test group 130.
at_banner_text_20="mhn"
# Banner 21. send.at:17
# Category starts at test group 156.
at_banner_text_21="send"
# Banner 22. sortm.at:17
# Category starts at test group 161.
at_banner_text_22="sortm"

# Take any -C into account.
if $at_change_dir ; then
  test x != "x$at_dir" && cd "$at_dir" \
    || as_fn_error $? "unable to change directory"
  at_dir=`pwd`
fi

# Load the config files for any default variable assignments.
for at_file in atconfig atlocal
do
  test -r $at_file || continue
  . ./$at_file || as_fn_error $? "invalid content: $at_file"
done

# Autoconf <=2.59b set at_top_builddir instead of at_top_build_prefix:
: "${at_top_build_prefix=$at_top_builddir}"

# Perform any assignments requested during argument parsing.
eval "$at_debug_args"

# atconfig delivers names relative to the directory the test suite is
# in, but the groups themselves are run in testsuite-dir/group-dir.
if test -n "$at_top_srcdir"; then
  builddir=../..
  for at_dir_var in srcdir top_srcdir top_build_prefix
  do
    eval at_val=\$at_$at_dir_var
    case $at_val in
      [\\/$]* | ?:[\\/]* ) at_prefix= ;;
      *) at_prefix=../../ ;;
    esac
    eval "$at_dir_var=\$at_prefix\$at_val"
  done
fi

## -------------------- ##
## Directory structure. ##
## -------------------- ##

# This is the set of directories and files used by this script
# (non-literals are capitalized):
#
# TESTSUITE         - the testsuite
# TESTSUITE.log     - summarizes the complete testsuite run
# TESTSUITE.dir/    - created during a run, remains after -d or failed test
# + at-groups/      - during a run: status of all groups in run
# | + NNN/          - during a run: meta-data about test group NNN
# | | + check-line  - location (source file and line) of current AT_CHECK
# | | + status      - exit status of current AT_CHECK
# | | + stdout      - stdout of current AT_CHECK
# | | + stder1      - stderr, including trace
# | | + stderr      - stderr, with trace filtered out
# | | + test-source - portion of testsuite that defines group
# | | + times       - timestamps for computing duration
# | | + pass        - created if group passed
# | | + xpass       - created if group xpassed
# | | + fail        - created if group failed
# | | + xfail       - created if group xfailed
# | | + skip        - created if group skipped
# + at-stop         - during a run: end the run if this file exists
# + at-source-lines - during a run: cache of TESTSUITE line numbers for extraction
# + 0..NNN/         - created for each group NNN, remains after -d or failed test
# | + TESTSUITE.log - summarizes the group results
# | + ...           - files created during the group

# The directory the whole suite works in.
# Should be absolute to let the user `cd' at will.
at_suite_dir=$at_dir/$as_me.dir
# The file containing the suite ($at_dir might have changed since earlier).
at_suite_log=$at_dir/$as_me.log
# The directory containing helper files per test group.
at_helper_dir=$at_suite_dir/at-groups
# Stop file: if it exists, do not start new jobs.
at_stop_file=$at_suite_dir/at-stop
# The fifo used for the job dispatcher.
at_job_fifo=$at_suite_dir/at-job-fifo

if $at_clean; then
  test -d "$at_suite_dir" &&
    find "$at_suite_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
  rm -f -r "$at_suite_dir" "$at_suite_log"
  exit $?
fi

# Don't take risks: use only absolute directories in PATH.
#
# For stand-alone test suites (ie. atconfig was not found),
# AUTOTEST_PATH is relative to `.'.
#
# For embedded test suites, AUTOTEST_PATH is relative to the top level
# of the package.  Then expand it into build/src parts, since users
# may create executables in both places.
AUTOTEST_PATH=`$as_echo "$AUTOTEST_PATH" | sed "s|:|$PATH_SEPARATOR|g"`
at_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $AUTOTEST_PATH $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -n "$at_path" && as_fn_append at_path $PATH_SEPARATOR
case $as_dir in
  [\\/]* | ?:[\\/]* )
    as_fn_append at_path "$as_dir"
    ;;
  * )
    if test -z "$at_top_build_prefix"; then
      # Stand-alone test suite.
      as_fn_append at_path "$as_dir"
    else
      # Embedded test suite.
      as_fn_append at_path "$at_top_build_prefix$as_dir$PATH_SEPARATOR"
      as_fn_append at_path "$at_top_srcdir/$as_dir"
    fi
    ;;
esac
  done
IFS=$as_save_IFS


# Now build and simplify PATH.
#
# There might be directories that don't exist, but don't redirect
# builtins' (eg., cd) stderr directly: Ultrix's sh hates that.
at_new_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $at_path
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -d "$as_dir" || continue
case $as_dir in
  [\\/]* | ?:[\\/]* ) ;;
  * ) as_dir=`(cd "$as_dir" && pwd) 2>/dev/null` ;;
esac
case $PATH_SEPARATOR$at_new_path$PATH_SEPARATOR in
  *$PATH_SEPARATOR$as_dir$PATH_SEPARATOR*) ;;
  $PATH_SEPARATOR$PATH_SEPARATOR) at_new_path=$as_dir ;;
  *) as_fn_append at_new_path "$PATH_SEPARATOR$as_dir" ;;
esac
  done
IFS=$as_save_IFS

PATH=$at_new_path
export PATH

# Setting up the FDs.



# 5 is the log file.  Not to be overwritten if `-d'.
if $at_debug_p; then
  at_suite_log=/dev/null
else
  : >"$at_suite_log"
fi
exec 5>>"$at_suite_log"

# Banners and logs.
$as_echo "## --------------------------------- ##
## GNU Mailutils 2.99.98 test suite. ##
## --------------------------------- ##"
{
  $as_echo "## --------------------------------- ##
## GNU Mailutils 2.99.98 test suite. ##
## --------------------------------- ##"
  echo

  $as_echo "$as_me: command line was:"
  $as_echo "  \$ $0 $at_cli_args"
  echo

  # If ChangeLog exists, list a few lines in case it might help determining
  # the exact version.
  if test -n "$at_top_srcdir" && test -f "$at_top_srcdir/ChangeLog"; then
    $as_echo "## ---------- ##
## ChangeLog. ##
## ---------- ##"
    echo
    sed 's/^/| /;10q' "$at_top_srcdir/ChangeLog"
    echo
  fi

  {
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    $as_echo "PATH: $as_dir"
  done
IFS=$as_save_IFS

}
  echo

  # Contents of the config files.
  for at_file in atconfig atlocal
  do
    test -r $at_file || continue
    $as_echo "$as_me: $at_file:"
    sed 's/^/| /' $at_file
    echo
  done
} >&5


## ------------------------- ##
## Autotest shell functions. ##
## ------------------------- ##

# at_fn_banner NUMBER
# -------------------
# Output banner NUMBER, provided the testsuite is running multiple groups and
# this particular banner has not yet been printed.
at_fn_banner ()
{
  $at_print_banners || return 0
  eval at_banner_text=\$at_banner_text_$1
  test "x$at_banner_text" = "x " && return 0
  eval "at_banner_text_$1=\" \""
  if test -z "$at_banner_text"; then
    $at_first || echo
  else
    $as_echo "$as_nl$at_banner_text$as_nl"
  fi
} # at_fn_banner

# at_fn_check_prepare_notrace REASON LINE
# ---------------------------------------
# Perform AT_CHECK preparations for the command at LINE for an untraceable
# command; REASON is the reason for disabling tracing.
at_fn_check_prepare_notrace ()
{
  $at_trace_echo "Not enabling shell tracing (command contains $1)"
  $as_echo "$2" >"$at_check_line_file"
  at_check_trace=: at_check_filter=:
  : >"$at_stdout"; : >"$at_stderr"
}

# at_fn_check_prepare_trace LINE
# ------------------------------
# Perform AT_CHECK preparations for the command at LINE for a traceable
# command.
at_fn_check_prepare_trace ()
{
  $as_echo "$1" >"$at_check_line_file"
  at_check_trace=$at_traceon at_check_filter=$at_check_filter_trace
  : >"$at_stdout"; : >"$at_stderr"
}

# at_fn_check_prepare_dynamic COMMAND LINE
# ----------------------------------------
# Decide if COMMAND at LINE is traceable at runtime, and call the appropriate
# preparation function.
at_fn_check_prepare_dynamic ()
{
  case $1 in
    *$as_nl*)
      at_fn_check_prepare_notrace 'an embedded newline' "$2" ;;
    *)
      at_fn_check_prepare_trace "$2" ;;
  esac
}

# at_fn_filter_trace
# ------------------
# Remove the lines in the file "$at_stderr" generated by "set -x" and print
# them to stderr.
at_fn_filter_trace ()
{
  mv "$at_stderr" "$at_stder1"
  grep '^ *+' "$at_stder1" >&2
  grep -v '^ *+' "$at_stder1" >"$at_stderr"
}

# at_fn_log_failure FILE-LIST
# ---------------------------
# Copy the files in the list on stdout with a "> " prefix, and exit the shell
# with a failure exit code.
at_fn_log_failure ()
{
  for file
    do $as_echo "$file:"; sed 's/^/> /' "$file"; done
  echo 1 > "$at_status_file"
  exit 1
}

# at_fn_check_skip EXIT-CODE LINE
# -------------------------------
# Check whether EXIT-CODE is a special exit code (77 or 99), and if so exit
# the test group subshell with that same exit code. Use LINE in any report
# about test failure.
at_fn_check_skip ()
{
  case $1 in
    99) echo 99 > "$at_status_file"; at_failed=:
	$as_echo "$2: hard failure"; exit 99;;
    77) echo 77 > "$at_status_file"; exit 77;;
  esac
}

# at_fn_check_status EXPECTED EXIT-CODE LINE
# ------------------------------------------
# Check whether EXIT-CODE is the EXPECTED exit code, and if so do nothing.
# Otherwise, if it is 77 or 99, exit the test group subshell with that same
# exit code; if it is anything else print an error message referring to LINE,
# and fail the test.
at_fn_check_status ()
{
  case $2 in
    $1 ) ;;
    77) echo 77 > "$at_status_file"; exit 77;;
    99) echo 99 > "$at_status_file"; at_failed=:
	$as_echo "$3: hard failure"; exit 99;;
    *) $as_echo "$3: exit code was $2, expected $1"
      at_failed=:;;
  esac
}

# at_fn_diff_devnull FILE
# -----------------------
# Emit a diff between /dev/null and FILE. Uses "test -s" to avoid useless diff
# invocations.
at_fn_diff_devnull ()
{
  test -s "$1" || return 0
  $at_diff "$at_devnull" "$1"
}

# at_fn_test NUMBER
# -----------------
# Parse out test NUMBER from the tail of this file.
at_fn_test ()
{
  eval at_sed=\$at_sed$1
  sed "$at_sed" "$at_myself" > "$at_test_source"
}

# at_fn_create_debugging_script
# -----------------------------
# Create the debugging script $at_group_dir/run which will reproduce the
# current test group.
at_fn_create_debugging_script ()
{
  {
    echo "#! /bin/sh" &&
    echo 'test "${ZSH_VERSION+set}" = set && alias -g '\''${1+"$@"}'\''='\''"$@"'\''' &&
    $as_echo "cd '$at_dir'" &&
    $as_echo "exec \${CONFIG_SHELL-$SHELL} \"$at_myself\" -v -d $at_debug_args $at_group \${1+\"\$@\"}" &&
    echo 'exit 1'
  } >"$at_group_dir/run" &&
  chmod +x "$at_group_dir/run"
}

## -------------------------------- ##
## End of autotest shell functions. ##
## -------------------------------- ##
{
  $as_echo "## ---------------- ##
## Tested programs. ##
## ---------------- ##"
  echo
} >&5

# Report what programs are being tested.
for at_program in : $at_tested
do
  test "$at_program" = : && continue
  case $at_program in
    [\\/]* | ?:[\\/]* ) $at_program_=$at_program ;;
    * )
    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -f "$as_dir/$at_program" && break
  done
IFS=$as_save_IFS

    at_program_=$as_dir/$at_program ;;
  esac
  if test -f "$at_program_"; then
    {
      $as_echo "$at_srcdir/testsuite.at:63: $at_program_ --version"
      "$at_program_" --version </dev/null
      echo
    } >&5 2>&1
  else
    as_fn_error $? "cannot find $at_program" "$LINENO" 5
  fi
done

{
  $as_echo "## ------------------ ##
## Running the tests. ##
## ------------------ ##"
} >&5

at_start_date=`date`
at_start_time=`date +%s 2>/dev/null`
$as_echo "$as_me: starting at: $at_start_date" >&5

# Create the master directory if it doesn't already exist.
as_dir="$at_suite_dir"; as_fn_mkdir_p ||
  as_fn_error $? "cannot create \`$at_suite_dir'" "$LINENO" 5

# Can we diff with `/dev/null'?  DU 5.0 refuses.
if diff /dev/null /dev/null >/dev/null 2>&1; then
  at_devnull=/dev/null
else
  at_devnull=$at_suite_dir/devnull
  >"$at_devnull"
fi

# Use `diff -u' when possible.
if at_diff=`diff -u "$at_devnull" "$at_devnull" 2>&1` && test -z "$at_diff"
then
  at_diff='diff -u'
else
  at_diff=diff
fi

# Get the last needed group.
for at_group in : $at_groups; do :; done

# Extract the start and end lines of each test group at the tail
# of this file
awk '
BEGIN { FS="" }
/^#AT_START_/ {
  start = NR
}
/^#AT_STOP_/ {
  test = substr ($ 0, 10)
  print "at_sed" test "=\"1," start "d;" (NR-1) "q\""
  if (test == "'"$at_group"'") exit
}' "$at_myself" > "$at_suite_dir/at-source-lines" &&
. "$at_suite_dir/at-source-lines" ||
  as_fn_error $? "cannot create test line number cache" "$LINENO" 5
rm -f "$at_suite_dir/at-source-lines"

# Set number of jobs for `-j'; avoid more jobs than test groups.
set X $at_groups; shift; at_max_jobs=$#
if test $at_max_jobs -eq 0; then
  at_jobs=1
fi
if test $at_jobs -ne 1 &&
   { test $at_jobs -eq 0 || test $at_jobs -gt $at_max_jobs; }; then
  at_jobs=$at_max_jobs
fi

# If parallel mode, don't output banners, don't split summary lines.
if test $at_jobs -ne 1; then
  at_print_banners=false
  at_quiet=:
fi

# Set up helper dirs.
rm -rf "$at_helper_dir" &&
mkdir "$at_helper_dir" &&
cd "$at_helper_dir" &&
{ test -z "$at_groups" || mkdir $at_groups; } ||
as_fn_error $? "testsuite directory setup failed" "$LINENO" 5

# Functions for running a test group.  We leave the actual
# test group execution outside of a shell function in order
# to avoid hitting zsh 4.x exit status bugs.

# at_fn_group_prepare
# -------------------
# Prepare for running a test group.
at_fn_group_prepare ()
{
  # The directory for additional per-group helper files.
  at_job_dir=$at_helper_dir/$at_group
  # The file containing the location of the last AT_CHECK.
  at_check_line_file=$at_job_dir/check-line
  # The file containing the exit status of the last command.
  at_status_file=$at_job_dir/status
  # The files containing the output of the tested commands.
  at_stdout=$at_job_dir/stdout
  at_stder1=$at_job_dir/stder1
  at_stderr=$at_job_dir/stderr
  # The file containing the code for a test group.
  at_test_source=$at_job_dir/test-source
  # The file containing dates.
  at_times_file=$at_job_dir/times

  # Be sure to come back to the top test directory.
  cd "$at_suite_dir"

  # Clearly separate the test groups when verbose.
  $at_first || $at_verbose echo

  at_group_normalized=$at_group

  eval 'while :; do
    case $at_group_normalized in #(
    '"$at_format"'*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done'


  # Create a fresh directory for the next test group, and enter.
  # If one already exists, the user may have invoked ./run from
  # within that directory; we remove the contents, but not the
  # directory itself, so that we aren't pulling the rug out from
  # under the shell's notion of the current directory.
  at_group_dir=$at_suite_dir/$at_group_normalized
  at_group_log=$at_group_dir/$as_me.log
  if test -d "$at_group_dir"; then
  find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx {} \;
  rm -fr "$at_group_dir"/* "$at_group_dir"/.[!.] "$at_group_dir"/.??*
fi ||
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: test directory for $at_group_normalized could not be cleaned" >&5
$as_echo "$as_me: WARNING: test directory for $at_group_normalized could not be cleaned" >&2;}
  # Be tolerant if the above `rm' was not able to remove the directory.
  as_dir="$at_group_dir"; as_fn_mkdir_p

  echo 0 > "$at_status_file"

  # In verbose mode, append to the log file *and* show on
  # the standard output; in quiet mode only write to the log.
  if test -z "$at_verbose"; then
    at_tee_pipe='tee -a "$at_group_log"'
  else
    at_tee_pipe='cat >> "$at_group_log"'
  fi
}

# at_fn_group_banner ORDINAL LINE DESC PAD [BANNER]
# -------------------------------------------------
# Declare the test group ORDINAL, located at LINE with group description DESC,
# and residing under BANNER. Use PAD to align the status column.
at_fn_group_banner ()
{
  at_setup_line="$2"
  test -n "$5" && at_fn_banner $5
  at_desc="$3"
  case $1 in
    [0-9])      at_desc_line="  $1: ";;
    [0-9][0-9]) at_desc_line=" $1: " ;;
    *)          at_desc_line="$1: "  ;;
  esac
  as_fn_append at_desc_line "$3$4"
  $at_quiet $as_echo_n "$at_desc_line"
  echo "#                             -*- compilation -*-" >> "$at_group_log"
}

# at_fn_group_postprocess
# -----------------------
# Perform cleanup after running a test group.
at_fn_group_postprocess ()
{
  # Be sure to come back to the suite directory, in particular
  # since below we might `rm' the group directory we are in currently.
  cd "$at_suite_dir"

  if test ! -f "$at_check_line_file"; then
    sed "s/^ */$as_me: WARNING: /" <<_ATEOF
      A failure happened in a test group before any test could be
      run. This means that test suite is improperly designed.  Please
      report this failure to <bug-mailutils@gnu.org>.
_ATEOF
    $as_echo "$at_setup_line" >"$at_check_line_file"
    at_status=99
  fi
  $at_verbose $as_echo_n "$at_group. $at_setup_line: "
  $as_echo_n "$at_group. $at_setup_line: " >> "$at_group_log"
  case $at_xfail:$at_status in
    yes:0)
	at_msg="UNEXPECTED PASS"
	at_res=xpass
	at_errexit=$at_errexit_p
	at_color=$at_red
	;;
    no:0)
	at_msg="ok"
	at_res=pass
	at_errexit=false
	at_color=$at_grn
	;;
    *:77)
	at_msg='skipped ('`cat "$at_check_line_file"`')'
	at_res=skip
	at_errexit=false
	at_color=$at_blu
	;;
    no:* | *:99)
	at_msg='FAILED ('`cat "$at_check_line_file"`')'
	at_res=fail
	at_errexit=$at_errexit_p
	at_color=$at_red
	;;
    yes:*)
	at_msg='expected failure ('`cat "$at_check_line_file"`')'
	at_res=xfail
	at_errexit=false
	at_color=$at_lgn
	;;
  esac
  echo "$at_res" > "$at_job_dir/$at_res"
  # In parallel mode, output the summary line only afterwards.
  if test $at_jobs -ne 1 && test -n "$at_verbose"; then
    $as_echo "$at_desc_line $at_color$at_msg$at_std"
  else
    # Make sure there is a separator even with long titles.
    $as_echo " $at_color$at_msg$at_std"
  fi
  at_log_msg="$at_group. $at_desc ($at_setup_line): $at_msg"
  case $at_status in
    0|77)
      # $at_times_file is only available if the group succeeded.
      # We're not including the group log, so the success message
      # is written in the global log separately.  But we also
      # write to the group log in case they're using -d.
      if test -f "$at_times_file"; then
	at_log_msg="$at_log_msg     ("`sed 1d "$at_times_file"`')'
	rm -f "$at_times_file"
      fi
      $as_echo "$at_log_msg" >> "$at_group_log"
      $as_echo "$at_log_msg" >&5

      # Cleanup the group directory, unless the user wants the files
      # or the success was unexpected.
      if $at_debug_p || test $at_res = xpass; then
	at_fn_create_debugging_script
	if test $at_res = xpass && $at_errexit; then
	  echo stop > "$at_stop_file"
	fi
      else
	if test -d "$at_group_dir"; then
	  find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
	  rm -fr "$at_group_dir"
	fi
	rm -f "$at_test_source"
      fi
      ;;
    *)
      # Upon failure, include the log into the testsuite's global
      # log.  The failure message is written in the group log.  It
      # is later included in the global log.
      $as_echo "$at_log_msg" >> "$at_group_log"

      # Upon failure, keep the group directory for autopsy, and create
      # the debugging script.  With -e, do not start any further tests.
      at_fn_create_debugging_script
      if $at_errexit; then
	echo stop > "$at_stop_file"
      fi
      ;;
  esac
}


## ------------ ##
## Driver loop. ##
## ------------ ##


if (set -m && set +m && set +b) >/dev/null 2>&1; then
  set +b
  at_job_control_on='set -m' at_job_control_off='set +m' at_job_group=-
else
  at_job_control_on=: at_job_control_off=: at_job_group=
fi

for at_signal in 1 2 15; do
  trap 'set +x; set +e
	$at_job_control_off
	at_signal='"$at_signal"'
	echo stop > "$at_stop_file"
	trap "" $at_signal
	at_pgids=
	for at_pgid in `jobs -p 2>/dev/null`; do
	  at_pgids="$at_pgids $at_job_group$at_pgid"
	done
	test -z "$at_pgids" || kill -$at_signal $at_pgids 2>/dev/null
	wait
	if test "$at_jobs" -eq 1 || test -z "$at_verbose"; then
	  echo >&2
	fi
	at_signame=`kill -l $at_signal 2>&1 || echo $at_signal`
	set x $at_signame
	test 0 -gt 2 && at_signame=$at_signal
	{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: caught signal $at_signame, bailing out" >&5
$as_echo "$as_me: WARNING: caught signal $at_signame, bailing out" >&2;}
	as_fn_arith 128 + $at_signal && exit_status=$as_val
	as_fn_exit $exit_status' $at_signal
done

rm -f "$at_stop_file"
at_first=:

if test $at_jobs -ne 1 &&
     rm -f "$at_job_fifo" &&
     test -n "$at_job_group" &&
     ( mkfifo "$at_job_fifo" && trap 'exit 1' PIPE STOP TSTP ) 2>/dev/null
then
  # FIFO job dispatcher.

  trap 'at_pids=
	for at_pid in `jobs -p`; do
	  at_pids="$at_pids $at_job_group$at_pid"
	done
	if test -n "$at_pids"; then
	  at_sig=TSTP
	  test "${TMOUT+set}" = set && at_sig=STOP
	  kill -$at_sig $at_pids 2>/dev/null
	fi
	kill -STOP $$
	test -z "$at_pids" || kill -CONT $at_pids 2>/dev/null' TSTP

  echo
  # Turn jobs into a list of numbers, starting from 1.
  at_joblist=`$as_echo "$at_groups" | sed -n 1,${at_jobs}p`

  set X $at_joblist
  shift
  for at_group in $at_groups; do
    $at_job_control_on 2>/dev/null
    (
      # Start one test group.
      $at_job_control_off
      if $at_first; then
	exec 7>"$at_job_fifo"
      else
	exec 6<&-
      fi
      trap 'set +x; set +e
	    trap "" PIPE
	    echo stop > "$at_stop_file"
	    echo >&7
	    as_fn_exit 141' PIPE
      at_fn_group_prepare
      if cd "$at_group_dir" &&
	 at_fn_test $at_group &&
	 . "$at_test_source"
      then :; else
	{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unable to parse test group: $at_group" >&5
$as_echo "$as_me: WARNING: unable to parse test group: $at_group" >&2;}
	at_failed=:
      fi
      at_fn_group_postprocess
      echo >&7
    ) &
    $at_job_control_off
    if $at_first; then
      at_first=false
      exec 6<"$at_job_fifo" 7>"$at_job_fifo"
    fi
    shift # Consume one token.
    if test $# -gt 0; then :; else
      read at_token <&6 || break
      set x $*
    fi
    test -f "$at_stop_file" && break
  done
  exec 7>&-
  # Read back the remaining ($at_jobs - 1) tokens.
  set X $at_joblist
  shift
  if test $# -gt 0; then
    shift
    for at_job
    do
      read at_token
    done <&6
  fi
  exec 6<&-
  wait
else
  # Run serially, avoid forks and other potential surprises.
  for at_group in $at_groups; do
    at_fn_group_prepare
    if cd "$at_group_dir" &&
       at_fn_test $at_group &&
       . "$at_test_source"; then :; else
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unable to parse test group: $at_group" >&5
$as_echo "$as_me: WARNING: unable to parse test group: $at_group" >&2;}
      at_failed=:
    fi
    at_fn_group_postprocess
    test -f "$at_stop_file" && break
    at_first=false
  done
fi

# Wrap up the test suite with summary statistics.
cd "$at_helper_dir"

# Use ?..???? when the list must remain sorted, the faster * otherwise.
at_pass_list=`for f in */pass; do echo $f; done | sed '/\*/d; s,/pass,,'`
at_skip_list=`for f in */skip; do echo $f; done | sed '/\*/d; s,/skip,,'`
at_xfail_list=`for f in */xfail; do echo $f; done | sed '/\*/d; s,/xfail,,'`
at_xpass_list=`for f in ?/xpass ??/xpass ???/xpass ????/xpass; do
		 echo $f; done | sed '/?/d; s,/xpass,,'`
at_fail_list=`for f in ?/fail ??/fail ???/fail ????/fail; do
		echo $f; done | sed '/?/d; s,/fail,,'`

set X $at_pass_list $at_xpass_list $at_xfail_list $at_fail_list $at_skip_list
shift; at_group_count=$#
set X $at_xpass_list; shift; at_xpass_count=$#; at_xpass_list=$*
set X $at_xfail_list; shift; at_xfail_count=$#
set X $at_fail_list; shift; at_fail_count=$#; at_fail_list=$*
set X $at_skip_list; shift; at_skip_count=$#

as_fn_arith $at_group_count - $at_skip_count && at_run_count=$as_val
as_fn_arith $at_xpass_count + $at_fail_count && at_unexpected_count=$as_val
as_fn_arith $at_xfail_count + $at_fail_count && at_total_fail_count=$as_val

# Back to the top directory.
cd "$at_dir"
rm -rf "$at_helper_dir"

# Compute the duration of the suite.
at_stop_date=`date`
at_stop_time=`date +%s 2>/dev/null`
$as_echo "$as_me: ending at: $at_stop_date" >&5
case $at_start_time,$at_stop_time in
  [0-9]*,[0-9]*)
    as_fn_arith $at_stop_time - $at_start_time && at_duration_s=$as_val
    as_fn_arith $at_duration_s / 60 && at_duration_m=$as_val
    as_fn_arith $at_duration_m / 60 && at_duration_h=$as_val
    as_fn_arith $at_duration_s % 60 && at_duration_s=$as_val
    as_fn_arith $at_duration_m % 60 && at_duration_m=$as_val
    at_duration="${at_duration_h}h ${at_duration_m}m ${at_duration_s}s"
    $as_echo "$as_me: test suite duration: $at_duration" >&5
    ;;
esac

echo
$as_echo "## ------------- ##
## Test results. ##
## ------------- ##"
echo
{
  echo
  $as_echo "## ------------- ##
## Test results. ##
## ------------- ##"
  echo
} >&5

if test $at_run_count = 1; then
  at_result="1 test"
  at_were=was
else
  at_result="$at_run_count tests"
  at_were=were
fi
if $at_errexit_p && test $at_unexpected_count != 0; then
  if test $at_xpass_count = 1; then
    at_result="$at_result $at_were run, one passed"
  else
    at_result="$at_result $at_were run, one failed"
  fi
  at_result="$at_result unexpectedly and inhibited subsequent tests."
  at_color=$at_red
else
  # Don't you just love exponential explosion of the number of cases?
  at_color=$at_red
  case $at_xpass_count:$at_fail_count:$at_xfail_count in
    # So far, so good.
    0:0:0) at_result="$at_result $at_were successful." at_color=$at_grn ;;
    0:0:*) at_result="$at_result behaved as expected." at_color=$at_lgn ;;

    # Some unexpected failures
    0:*:0) at_result="$at_result $at_were run,
$at_fail_count failed unexpectedly." ;;

    # Some failures, both expected and unexpected
    0:*:1) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    0:*:*) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;

    # No unexpected failures, but some xpasses
    *:0:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly." ;;

    # No expected failures, but failures and xpasses
    *:1:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failure)." ;;
    *:*:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failures)." ;;

    # All of them.
    *:*:1) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    *:*:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;
  esac

  if test $at_skip_count = 0 && test $at_run_count -gt 1; then
    at_result="All $at_result"
  fi
fi

# Now put skips in the mix.
case $at_skip_count in
  0) ;;
  1) at_result="$at_result
1 test was skipped." ;;
  *) at_result="$at_result
$at_skip_count tests were skipped." ;;
esac

if test $at_unexpected_count = 0; then
  echo "$at_color$at_result$at_std"
  echo "$at_result" >&5
else
  echo "${at_color}ERROR: $at_result$at_std" >&2
  echo "ERROR: $at_result" >&5
  {
    echo
    $as_echo "## ------------------------ ##
## Summary of the failures. ##
## ------------------------ ##"

    # Summary of failed and skipped tests.
    if test $at_fail_count != 0; then
      echo "Failed tests:"
      $SHELL "$at_myself" $at_fail_list --list
      echo
    fi
    if test $at_skip_count != 0; then
      echo "Skipped tests:"
      $SHELL "$at_myself" $at_skip_list --list
      echo
    fi
    if test $at_xpass_count != 0; then
      echo "Unexpected passes:"
      $SHELL "$at_myself" $at_xpass_list --list
      echo
    fi
    if test $at_fail_count != 0; then
      $as_echo "## ---------------------- ##
## Detailed failed tests. ##
## ---------------------- ##"
      echo
      for at_group in $at_fail_list
      do
	at_group_normalized=$at_group

  eval 'while :; do
    case $at_group_normalized in #(
    '"$at_format"'*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done'

	cat "$at_suite_dir/$at_group_normalized/$as_me.log"
	echo
      done
      echo
    fi
    if test -n "$at_top_srcdir"; then
      sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## ${at_top_build_prefix}config.log ##
_ASBOX
      sed 's/^/| /' ${at_top_build_prefix}config.log
      echo
    fi
  } >&5

  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## $as_me.log was created. ##
_ASBOX

  echo
  if $at_debug_p; then
    at_msg='per-test log files'
  else
    at_msg="\`${at_testdir+${at_testdir}/}$as_me.log'"
  fi
  $as_echo "Please send $at_msg and all information you think might help:

   To: <bug-mailutils@gnu.org>
   Subject: [GNU Mailutils 2.99.98] $as_me: $at_fail_list${at_fail_list:+ failed${at_xpass_list:+, }}$at_xpass_list${at_xpass_list:+ passed unexpectedly}

You may investigate any problem if you feel able to do so, in which
case the test suite provides a good starting point.  Its output may
be found below \`${at_testdir+${at_testdir}/}$as_me.dir'.
"
  exit 1
fi

exit 0

## ------------- ##
## Actual tests. ##
## ------------- ##
#AT_START_1
at_fn_group_banner 1 'install-mh.at:18' \
  "install-mh -auto" "                               " 1
at_xfail=no
(
  $as_echo "1. $at_setup_line: testing $at_desc ..."
  $at_traceon



{ set +x
$as_echo "$at_srcdir/install-mh.at:21:
mkdir home
dir=\`cd home; pwd\`
HOME=\$dir MH=\$dir/mh_profile install-mh -auto || exit \$?
find home | sort
HOME=\$dir MH=\$dir/mh_profile install-mh -auto 2>errout
echo \$?
cat errout
"
at_fn_check_prepare_notrace 'a `...` command substitution' "install-mh.at:21"
( $at_check_trace;
mkdir home
dir=`cd home; pwd`
HOME=$dir MH=$dir/mh_profile install-mh -auto || exit $?
find home | sort
HOME=$dir MH=$dir/mh_profile install-mh -auto 2>errout
echo $?
cat errout

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "I'm going to create the standard MH path for you.
home
home/Mail
home/Mail/context
home/Mail/inbox
home/mh_profile
1
install-mh: You already have an MH profile, use an editor to modify it
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/install-mh.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1
#AT_START_2
at_fn_group_banner 2 'install-mh.at:44' \
  "install-mh with invalid profile" "                " 1
at_xfail=no
(
  $as_echo "2. $at_setup_line: testing $at_desc ..."
  $at_traceon



{ set +x
$as_echo "$at_srcdir/install-mh.at:47:
mkdir home
dir=\`cd home; pwd\`
mkdir \$dir/mh_profile
HOME=\$dir MH=\$dir/mh_profile install-mh -auto 2>errout
code=\$?
cat errout | sed 's|[^ ][^ ]*/mh_profile|mh_profile|' >&2
exit \$code
"
at_fn_check_prepare_notrace 'a `...` command substitution' "install-mh.at:47"
( $at_check_trace;
mkdir home
dir=`cd home; pwd`
mkdir $dir/mh_profile
HOME=$dir MH=$dir/mh_profile install-mh -auto 2>errout
code=$?
cat errout | sed 's|[^ ][^ ]*/mh_profile|mh_profile|' >&2
exit $code

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "install-mh: You already have file mh_profile which is not a regular file or a symbolic link.
install-mh: Please remove it and try again
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/install-mh.at:47"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_2
#AT_START_3
at_fn_group_banner 3 'mhseq.at:22' \
  "mhseq: existing message number" "                 " 2
at_xfail=no
(
  $as_echo "3. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:22:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq 1
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:22"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq 1

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "1
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:22"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_3
#AT_START_4
at_fn_group_banner 4 'mhseq.at:30' \
  "mhseq: not existing message number" "             " 2
at_xfail=no
(
  $as_echo "4. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:30:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq 100
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:30"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq 100

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "mhseq: message 100 does not exist
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/mhseq.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_4
#AT_START_5
at_fn_group_banner 5 'mhseq.at:40' \
  "mhseq: contiguous message range" "                " 2
at_xfail=no
(
  $as_echo "5. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:40:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq 2-5
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:40"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq 2-5

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "2
3
4
5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_5
#AT_START_6
at_fn_group_banner 6 'mhseq.at:51' \
  "mhseq: reversed contiguous message range" "       " 2
at_xfail=no
(
  $as_echo "6. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:51:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq 5-2
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:51"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq 5-2

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "2
3
4
5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_6
#AT_START_7
at_fn_group_banner 7 'mhseq.at:62' \
  "mhseq: reversed non-contiguous message range" "   " 2
at_xfail=no
(
  $as_echo "7. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:62:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/3 Mail/inbox/4

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 5-2
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:62"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/3 Mail/inbox/4

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 5-2

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "2
5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:62"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_7
#AT_START_8
at_fn_group_banner 8 'mhseq.at:73' \
  "mhseq: message range (left fixup)" "              " 2
at_xfail=no
(
  $as_echo "8. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:73:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1 Mail/inbox/2

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 1-5
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:73"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1 Mail/inbox/2

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 1-5

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "3
4
5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_8
#AT_START_9
at_fn_group_banner 9 'mhseq.at:85' \
  "mhseq: message range (right fixup)" "             " 2
at_xfail=no
(
  $as_echo "9. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:85:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/4 Mail/inbox/5

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 1-5
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:85"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/4 Mail/inbox/5

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 1-5

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "1
2
3
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_9
#AT_START_10
at_fn_group_banner 10 'mhseq.at:97' \
  "mhseq: message range (both fixups)" "             " 2
at_xfail=no
(
  $as_echo "10. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:97:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1 Mail/inbox/5

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 1-5
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:97"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1 Mail/inbox/5

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 1-5

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "2
3
4
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:97"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_10
#AT_START_11
at_fn_group_banner 11 'mhseq.at:109' \
  "mhseq: non-existent message range (left)" "       " 2
at_xfail=no
(
  $as_echo "11. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:109:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1 Mail/inbox/2 Mail/inbox/3

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 1-2
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:109"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1 Mail/inbox/2 Mail/inbox/3

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 1-2

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "mhseq: no messages in range 1-2
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/mhseq.at:109"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_11
#AT_START_12
at_fn_group_banner 12 'mhseq.at:120' \
  "mhseq: non-existent message range (right)" "      " 2
at_xfail=no
(
  $as_echo "12. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:120:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq 6-10
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:120"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq 6-10

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "mhseq: no messages in range 6-10
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/mhseq.at:120"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_12
#AT_START_13
at_fn_group_banner 13 'mhseq.at:129' \
  "mhseq: message set addition" "                    " 2
at_xfail=no
(
  $as_echo "13. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:129:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to 700
find Mail/inbox/teaparty | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq 5 8-10 15-20
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:129"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to 700
find Mail/inbox/teaparty | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq 5 8-10 15-20

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "5
8
9
10
15
16
17
18
19
20
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:129"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_13
#AT_START_14
at_fn_group_banner 14 'mhseq.at:146' \
  "mhseq: message set optimization" "                " 2
at_xfail=no
(
  $as_echo "14. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:146:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/17 Mail/inbox/19

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 5 1-10 15-20
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:146"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/17 Mail/inbox/19

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 5 1-10 15-20

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "1
2
3
4
5
6
7
8
9
10
15
16
18
20
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:146"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_14
#AT_START_15
at_fn_group_banner 15 'mhseq.at:169' \
  "mhseq: counted range (positive)" "                " 2
at_xfail=no
(
  $as_echo "15. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:169:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to 700
find Mail/inbox/teaparty | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq 10:4
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:169"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to 700
find Mail/inbox/teaparty | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq 10:4

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "10
11
12
13
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:169"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_15
#AT_START_16
at_fn_group_banner 16 'mhseq.at:180' \
  "mhseq: non-contiguous counted range (positive)" " " 2
at_xfail=no
(
  $as_echo "16. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:180:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/12 Mail/inbox/14

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 10:4
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:180"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/12 Mail/inbox/14

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 10:4

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "10
11
13
15
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:180"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_16
#AT_START_17
at_fn_group_banner 17 'mhseq.at:193' \
  "mhseq: counted range (positive, left fixup)" "    " 2
at_xfail=no
(
  $as_echo "17. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:193:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1 Mail/inbox/2

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 1:3
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:193"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1 Mail/inbox/2

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 1:3

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "3
4
5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:193"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_17
#AT_START_18
at_fn_group_banner 18 'mhseq.at:205' \
  "mhseq: counted range (positive, right fixup)" "   " 2
at_xfail=no
(
  $as_echo "18. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:205:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq 2:10
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:205"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq 2:10

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "2
3
4
5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:205"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_18
#AT_START_19
at_fn_group_banner 19 'mhseq.at:216' \
  "mhseq: invalid counted range (negative)" "        " 2
at_xfail=no
(
  $as_echo "19. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:216:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1 Mail/inbox/2

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 10:2
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:216"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1 Mail/inbox/2

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 10:2

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "mhseq: no messages in range 10:2
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/mhseq.at:216"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_19
#AT_START_20
at_fn_group_banner 20 'mhseq.at:227' \
  "mhseq: counted range (negative)" "                " 2
at_xfail=no
(
  $as_echo "20. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:227:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to 700
find Mail/inbox/teaparty | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq 10:-4
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:227"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to 700
find Mail/inbox/teaparty | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq 10:-4

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "7
8
9
10
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:227"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_20
#AT_START_21
at_fn_group_banner 21 'mhseq.at:238' \
  "mhseq: non-contiguous counted range (negative)" " " 2
at_xfail=no
(
  $as_echo "21. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:238:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/8 Mail/inbox/6

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 10:-4
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:238"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/8 Mail/inbox/6

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 10:-4

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "5
7
9
10
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:238"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_21
#AT_START_22
at_fn_group_banner 22 'mhseq.at:251' \
  "mhseq: counted range (negative, left fixup)" "    " 2
at_xfail=no
(
  $as_echo "22. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:251:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1 Mail/inbox/2

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 4:-30
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:251"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1 Mail/inbox/2

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 4:-30

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "3
4
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:251"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_22
#AT_START_23
at_fn_group_banner 23 'mhseq.at:262' \
  "mhseq: counted range (negative, right fixup)" "   " 2
at_xfail=no
(
  $as_echo "23. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:262:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1 Mail/inbox/2

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 4:30
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:262"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1 Mail/inbox/2

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 4:30

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "4
5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:262"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_23
#AT_START_24
at_fn_group_banner 24 'mhseq.at:273' \
  "mhseq: invalid counted range (negative)" "        " 2
at_xfail=no
(
  $as_echo "24. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:273:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1 Mail/inbox/2

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 1:-30
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:273"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1 Mail/inbox/2

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq 1:-30

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "mhseq: no messages in range 1:-30
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/mhseq.at:273"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_24
#AT_START_25
at_fn_group_banner 25 'mhseq.at:284' \
  "mhseq: cur" "                                     " 2
at_xfail=no
(
  $as_echo "25. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:284:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"cur: 3\" > Mail/inbox/.mh_sequences

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq cur
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:284"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "cur: 3" > Mail/inbox/.mh_sequences

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq cur

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "3
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:284"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_25
#AT_START_26
at_fn_group_banner 26 'mhseq.at:294' \
  "mhseq: cur:n -- default direction" "              " 2
at_xfail=no
(
  $as_echo "26. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:294:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"cur: 3\" > Mail/inbox/.mh_sequences

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq cur:2
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:294"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "cur: 3" > Mail/inbox/.mh_sequences

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq cur:2

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "3
4
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:294"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_26
#AT_START_27
at_fn_group_banner 27 'mhseq.at:305' \
  "mhseq: cur:n -- explicit dir (negative)" "        " 2
at_xfail=no
(
  $as_echo "27. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:305:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"cur: 3\" > Mail/inbox/.mh_sequences

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq cur:-2
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:305"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "cur: 3" > Mail/inbox/.mh_sequences

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq cur:-2

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "2
3
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:305"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_27
#AT_START_28
at_fn_group_banner 28 'mhseq.at:316' \
  "mhseq: cur:n -- explicit dir (positive)" "        " 2
at_xfail=no
(
  $as_echo "28. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:316:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"cur: 3\" > Mail/inbox/.mh_sequences

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq cur:+2
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:316"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "cur: 3" > Mail/inbox/.mh_sequences

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq cur:+2

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "3
4
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:316"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_28
#AT_START_29
at_fn_group_banner 29 'mhseq.at:327' \
  "mhseq: next" "                                    " 2
at_xfail=no
(
  $as_echo "29. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:327:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"cur: 3\" > Mail/inbox/.mh_sequences
rm Mail/inbox/4

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq next
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:327"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "cur: 3" > Mail/inbox/.mh_sequences
rm Mail/inbox/4

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq next

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:327"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_29
#AT_START_30
at_fn_group_banner 30 'mhseq.at:338' \
  "mhseq: next:n -- default direction" "             " 2
at_xfail=no
(
  $as_echo "30. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:338:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"cur: 3\" > Mail/inbox/.mh_sequences

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq next:2
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:338"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "cur: 3" > Mail/inbox/.mh_sequences

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq next:2

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "4
5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:338"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_30
#AT_START_31
at_fn_group_banner 31 'mhseq.at:349' \
  "mhseq: prev" "                                    " 2
at_xfail=no
(
  $as_echo "31. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:349:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"cur: 3\" > Mail/inbox/.mh_sequences
rm Mail/inbox/2

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq prev
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:349"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "cur: 3" > Mail/inbox/.mh_sequences
rm Mail/inbox/2

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq prev

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "1
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:349"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_31
#AT_START_32
at_fn_group_banner 32 'mhseq.at:360' \
  "mhseq: prev:n -- default direction" "             " 2
at_xfail=no
(
  $as_echo "32. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:360:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"cur: 3\" > Mail/inbox/.mh_sequences

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq prev:2
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:360"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "cur: 3" > Mail/inbox/.mh_sequences

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq prev:2

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "1
2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:360"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_32
#AT_START_33
at_fn_group_banner 33 'mhseq.at:371' \
  "mhseq: first" "                                   " 2
at_xfail=no
(
  $as_echo "33. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:371:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq first
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:371"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq first

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:371"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_33
#AT_START_34
at_fn_group_banner 34 'mhseq.at:381' \
  "mhseq: first:n -- default direction" "            " 2
at_xfail=no
(
  $as_echo "34. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:381:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq first:2
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:381"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



rm Mail/inbox/1

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhseq first:2

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "2
3
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:381"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_34
#AT_START_35
at_fn_group_banner 35 'mhseq.at:392' \
  "mhseq: last" "                                    " 2
at_xfail=no
(
  $as_echo "35. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:392:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq last
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:392"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq last

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:392"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_35
#AT_START_36
at_fn_group_banner 36 'mhseq.at:400' \
  "mhseq: last:n -- default direction" "             " 2
at_xfail=no
(
  $as_echo "36. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhseq.at:400:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq last:2
"
at_fn_check_prepare_notrace 'an embedded newline' "mhseq.at:400"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhseq last:2

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "4
5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhseq.at:400"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_36
#AT_START_37
at_fn_group_banner 37 'ali.at:20' \
  "ali: simple aliases" "                            " 3
at_xfail=no
(
  $as_echo "37. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/ali.at:20:
cat >mh_aliases <<'_ATEOF'

devel: gray, polak
admin: gray, jeff
_ATEOF

ali -a ./mh_aliases devel
"
at_fn_check_prepare_notrace 'an embedded newline' "ali.at:20"
( $at_check_trace;
cat >mh_aliases <<'_ATEOF'

devel: gray, polak
admin: gray, jeff
_ATEOF

ali -a ./mh_aliases devel

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "gray, polak
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/ali.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_37
#AT_START_38
at_fn_group_banner 38 'ali.at:31' \
  "ali: recursive aliases" "                         " 3
at_xfail=no
(
  $as_echo "38. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/ali.at:31:
cat >mh_aliases <<'_ATEOF'

devel: gray, polak, admin
admin: gray, jeff
_ATEOF

ali -a ./mh_aliases devel
"
at_fn_check_prepare_notrace 'an embedded newline' "ali.at:31"
( $at_check_trace;
cat >mh_aliases <<'_ATEOF'

devel: gray, polak, admin
admin: gray, jeff
_ATEOF

ali -a ./mh_aliases devel

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "gray, polak, gray, jeff
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/ali.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_38
#AT_START_39
at_fn_group_banner 39 'ali.at:42' \
  "ali: file inlcusion" "                            " 3
at_xfail=no
(
  $as_echo "39. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/ali.at:42:
cat >Mail/mh_aliases2 <<'_ATEOF'

admin: gray, jeff
_ATEOF

cat >mh_aliases <<'_ATEOF'

devel: gray, polak, admin
<mh_aliases2
_ATEOF

ali -a ./mh_aliases devel
"
at_fn_check_prepare_notrace 'an embedded newline' "ali.at:42"
( $at_check_trace;
cat >Mail/mh_aliases2 <<'_ATEOF'

admin: gray, jeff
_ATEOF

cat >mh_aliases <<'_ATEOF'

devel: gray, polak, admin
<mh_aliases2
_ATEOF

ali -a ./mh_aliases devel

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "gray, polak, gray, jeff
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/ali.at:42"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_39
#AT_START_40
at_fn_group_banner 40 'ali.at:56' \
  "ali: recursive inlcusion" "                       " 3
at_xfail=no
(
  $as_echo "40. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/ali.at:56:
cat >Mail/mh_aliases2 <<'_ATEOF'

<mh_aliases
_ATEOF

cat >Mail/mh_aliases <<'_ATEOF'

devel: gray, polak, admin
<mh_aliases2
_ATEOF

ali -a ./Mail/mh_aliases devel 2>errout
code=\$?
dir=\`cd Mail;pwd\`
sed \"s|\$dir/||g\" errout >&2
exit \$code
"
at_fn_check_prepare_notrace 'a `...` command substitution' "ali.at:56"
( $at_check_trace;
cat >Mail/mh_aliases2 <<'_ATEOF'

<mh_aliases
_ATEOF

cat >Mail/mh_aliases <<'_ATEOF'

devel: gray, polak, admin
<mh_aliases2
_ATEOF

ali -a ./Mail/mh_aliases devel 2>errout
code=$?
dir=`cd Mail;pwd`
sed "s|$dir/||g" errout >&2
exit $code

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "ali: mh_aliases2:2: recursive inclusion
ali: mh_aliases2:2: \`mh_aliases' already included at top level
" | \
  $at_diff - "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "gray, polak, admin
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/ali.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_40
#AT_START_41
at_fn_group_banner 41 'ali.at:77' \
  "ali: group name" "                                " 3
at_xfail=no
(
  $as_echo "41. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/ali.at:77:
cat /etc/group | awk -F : '/^#/ { next } \$4!=\"\" { print \$1; print \$4; exit 0 }' > tmpout
test -s tmpout || exit 77
sed -n '1s/.*/korzen: =&/p' tmpout > mh_aliases
sed '1d' tmpout | tr -d ' ' > expout
ali -a ./mh_aliases korzen | tr -d ' '
"
at_fn_check_prepare_notrace 'an embedded newline' "ali.at:77"
( $at_check_trace;
cat /etc/group | awk -F : '/^#/ { next } $4!="" { print $1; print $4; exit 0 }' > tmpout
test -s tmpout || exit 77
sed -n '1s/.*/korzen: =&/p' tmpout > mh_aliases
sed '1d' tmpout | tr -d ' ' > expout
ali -a ./mh_aliases korzen | tr -d ' '

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/ali.at:77"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_41
#AT_START_42
at_fn_group_banner 42 'ali.at:87' \
  "ali: group id" "                                  " 3
at_xfail=no
(
  $as_echo "42. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/ali.at:87:
cat /etc/passwd | awk -F : '/^#/ { next } \$4==0 { print \$1 }' > expout
test -s expout || exit 77
name=\`awk -F : '/^#/ { next } \$3==0 { print \$1 }' /etc/group < /dev/null\`
test -z \"\$name\" && exit 77

echo \"korzen: +\$name\" > mh_aliases
# FIXME: Do I need to sort the output?
ali -list -a ./mh_aliases korzen
"
at_fn_check_prepare_notrace 'a `...` command substitution' "ali.at:87"
( $at_check_trace;
cat /etc/passwd | awk -F : '/^#/ { next } $4==0 { print $1 }' > expout
test -s expout || exit 77
name=`awk -F : '/^#/ { next } $3==0 { print $1 }' /etc/group < /dev/null`
test -z "$name" && exit 77

echo "korzen: +$name" > mh_aliases
# FIXME: Do I need to sort the output?
ali -list -a ./mh_aliases korzen

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/ali.at:87"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_42
#AT_START_43
at_fn_group_banner 43 'ali.at:100' \
  "ali: everybody" "                                 " 3
at_xfail=no
(
  $as_echo "43. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/ali.at:100:
lu 200 > expout
test -s expout || exit 77
cat >mh_aliases <<'_ATEOF'

everybody: *
_ATEOF

ali -list -a ./mh_aliases everybody
"
at_fn_check_prepare_notrace 'an embedded newline' "ali.at:100"
( $at_check_trace;
lu 200 > expout
test -s expout || exit 77
cat >mh_aliases <<'_ATEOF'

everybody: *
_ATEOF

ali -list -a ./mh_aliases everybody

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
$at_diff expout "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/ali.at:100"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_43
#AT_START_44
at_fn_group_banner 44 'ali.at:111' \
  "ali: executable file inlcusion" "                 " 3
at_xfail=no
(
  $as_echo "44. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/ali.at:111:
cat >Mail/ali.sh <<'_ATEOF'
#! /bin/sh
echo \"admin: gray, jeff\"
_ATEOF

chmod +x Mail/ali.sh
cat >mh_aliases <<'_ATEOF'

devel: gray, polak, admin
<ali.sh
_ATEOF

ali -a ./mh_aliases devel
"
at_fn_check_prepare_notrace 'an embedded newline' "ali.at:111"
( $at_check_trace;
cat >Mail/ali.sh <<'_ATEOF'
#! /bin/sh
echo "admin: gray, jeff"
_ATEOF

chmod +x Mail/ali.sh
cat >mh_aliases <<'_ATEOF'

devel: gray, polak, admin
<ali.sh
_ATEOF

ali -a ./mh_aliases devel

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "gray, polak, gray, jeff
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/ali.at:111"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_44
#AT_START_45
at_fn_group_banner 45 'folder.at:20' \
  "folder" "                                         " 4
at_xfail=no
(
  $as_echo "45. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/folder.at:20:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
folder
"
at_fn_check_prepare_notrace 'an embedded newline' "folder.at:20"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
folder

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "                 inbox+ has    5 messages (   1-   5).
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/folder.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_45
#AT_START_46
at_fn_group_banner 46 'folder.at:30' \
  "folder -all" "                                    " 4
at_xfail=no
(
  $as_echo "46. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/folder.at:30:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
folder -all
"
at_fn_check_prepare_notrace 'an embedded newline' "folder.at:30"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
folder -all

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Folder                  # of messages     (  range  )  cur msg   (other files)
                 inbox+ has    5 messages (   1-   5).
              teaparty  has   95 messages (   1-  95).

                   TOTAL= 100 messages in    2 folders
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/folder.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_46
#AT_START_47
at_fn_group_banner 47 'folder.at:45' \
  "folder -all -fast" "                              " 4
at_xfail=no
(
  $as_echo "47. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/folder.at:45:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
folder -all -fast
"
at_fn_check_prepare_notrace 'an embedded newline' "folder.at:45"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
folder -all -fast

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "inbox
teaparty
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/folder.at:45"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_47
#AT_START_48
at_fn_group_banner 48 'folder.at:56' \
  "folder +mbox" "                                   " 4
at_xfail=no
(
  $as_echo "48. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/folder.at:56:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
folder +teaparty
sed -n 's/^\\(Current-Folder\\): *\\(.*\\)/\\1: \\2/p' Mail/context
"
at_fn_check_prepare_notrace 'an embedded newline' "folder.at:56"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
folder +teaparty
sed -n 's/^\(Current-Folder\): *\(.*\)/\1: \2/p' Mail/context

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "              teaparty+ has   95 messages (   1-  95).
Current-Folder: teaparty
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/folder.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_48
#AT_START_49
at_fn_group_banner 49 'folder.at:69' \
  "folder +mbox msg" "                               " 4
at_xfail=no
(
  $as_echo "49. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/folder.at:69:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
folder +teaparty 35
sed -n 's/^\\(Current-Folder\\): *\\(.*\\)/context: \\1: \\2/p' Mail/context
sed -n 's/^\\(cur\\): *\\(.*\\)/mh_sequences: \\1: \\2/p' Mail/teaparty/.mh_sequences
"
at_fn_check_prepare_notrace 'an embedded newline' "folder.at:69"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
folder +teaparty 35
sed -n 's/^\(Current-Folder\): *\(.*\)/context: \1: \2/p' Mail/context
sed -n 's/^\(cur\): *\(.*\)/mh_sequences: \1: \2/p' Mail/teaparty/.mh_sequences

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "              teaparty+ has   95 messages (   1-  95); cur=  35.
context: Current-Folder: teaparty
mh_sequences: cur: 35
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/folder.at:69"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_49
#AT_START_50
at_fn_group_banner 50 'folder.at:84' \
  "folder -pack" "                                   " 4
at_xfail=no
(
  $as_echo "50. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/folder.at:84:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



for i in 2 3 4 5
do
  mv Mail/inbox/\$i Mail/inbox/\${i}0
done
folder -pack || exit \$?
find Mail/inbox -not -name '.mu-prop' | sort
"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "folder.at:84"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



for i in 2 3 4 5
do
  mv Mail/inbox/$i Mail/inbox/${i}0
done
folder -pack || exit $?
find Mail/inbox -not -name '.mu-prop' | sort

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Mail/inbox
Mail/inbox/1
Mail/inbox/2
Mail/inbox/3
Mail/inbox/4
Mail/inbox/5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/folder.at:84"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_50
#AT_START_51
at_fn_group_banner 51 'folder.at:102' \
  "folder --pack=N" "                                " 4
at_xfail=no
(
  $as_echo "51. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/folder.at:102:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



for i in 1 2 3 4 5
do
  mv Mail/inbox/\$i Mail/inbox/\${i}0
done
folder --pack=1 || exit \$?
find Mail/inbox -not -name '.mu-prop' | sort
"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "folder.at:102"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



for i in 1 2 3 4 5
do
  mv Mail/inbox/$i Mail/inbox/${i}0
done
folder --pack=1 || exit $?
find Mail/inbox -not -name '.mu-prop' | sort

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Mail/inbox
Mail/inbox/1
Mail/inbox/2
Mail/inbox/3
Mail/inbox/4
Mail/inbox/5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/folder.at:102"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_51
#AT_START_52
at_fn_group_banner 52 'folder.at:120' \
  "folder -push/-pop" "                              " 4
at_xfail=no
(
  $as_echo "52. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/folder.at:120:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



folder -push +teaparty
folder -pop
folder -push +teaparty
folder -push
folder -pop
"
at_fn_check_prepare_notrace 'an embedded newline' "folder.at:120"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



folder -push +teaparty
folder -pop
folder -push +teaparty
folder -push
folder -pop

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "teaparty inbox
inbox
teaparty inbox
inbox teaparty
teaparty
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/folder.at:120"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_52
#AT_START_53
at_fn_group_banner 53 'folder.at:138' \
  "folder -create" "                                 " 4
at_xfail=no
(
  $as_echo "53. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/folder.at:138:
folder -create +new
"
at_fn_check_prepare_notrace 'an embedded newline' "folder.at:138"
( $at_check_trace;
folder -create +new

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "                   new+ has no messages.
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/folder.at:138"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_53
#AT_START_54
at_fn_group_banner 54 'inc.at:20' \
  "inc -notruncate" "                                " 5
at_xfail=no
(
  $as_echo "54. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/inc.at:20:




cp -r \$abs_top_srcdir/testsuite/spool/mbox1 .
if test -e ./mbox1; then

# First, set all modes to +w
find ./mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find ./mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find . | xargs chmod +w
# Then, remove executable bit from regular files
find . -type f | xargs chmod -x

fi



inc -notruncate -file ./mbox1 | sed 's/ *\$//'
cmp \$abs_top_srcdir/testsuite/spool/mbox1 mbox1
"
at_fn_check_prepare_notrace 'an embedded newline' "inc.at:20"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/spool/mbox1 .
if test -e ./mbox1; then

# First, set all modes to +w
find ./mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find ./mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find . | xargs chmod +w
# Then, remove executable bit from regular files
find . -type f | xargs chmod -x

fi



inc -notruncate -file ./mbox1 | sed 's/ *$//'
cmp $abs_top_srcdir/testsuite/spool/mbox1 mbox1

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "   1+ 12/28 Foo Bar            Jabberwocky<<\`Twas brillig, and the slithy toves
   2  12/28 Bar                Re: Jabberwocky<<It seems very pretty, but it's
   3  07/13 Sergey Poznyakoff  Simple MIME<<------- =_aaaaaaaaaa0 Content-Type:
   4  07/13 Sergey Poznyakoff  Nested MIME<<------- =_aaaaaaaaaa0 Content-Type:
   5  07/13 Sergey Poznyakoff  Empty MIME Parts<<------- =_aaaaaaaaaa0 Content-
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/inc.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_54
#AT_START_55
at_fn_group_banner 55 'inc.at:33' \
  "inc -truncate" "                                  " 5
at_xfail=no
(
  $as_echo "55. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/inc.at:33:




cp -r \$abs_top_srcdir/testsuite/spool/mbox1 .
if test -e ./mbox1; then

# First, set all modes to +w
find ./mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find ./mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find . | xargs chmod +w
# Then, remove executable bit from regular files
find . -type f | xargs chmod -x

fi



inc -truncate -file ./mbox1 | sed 's/ *\$//'
echo \"Next\"
inc -truncate -file ./mbox1 | sed 's/ *\$//'
"
at_fn_check_prepare_notrace 'an embedded newline' "inc.at:33"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/spool/mbox1 .
if test -e ./mbox1; then

# First, set all modes to +w
find ./mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find ./mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find . | xargs chmod +w
# Then, remove executable bit from regular files
find . -type f | xargs chmod -x

fi



inc -truncate -file ./mbox1 | sed 's/ *$//'
echo "Next"
inc -truncate -file ./mbox1 | sed 's/ *$//'

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "   1+ 12/28 Foo Bar            Jabberwocky<<\`Twas brillig, and the slithy toves
   2  12/28 Bar                Re: Jabberwocky<<It seems very pretty, but it's
   3  07/13 Sergey Poznyakoff  Simple MIME<<------- =_aaaaaaaaaa0 Content-Type:
   4  07/13 Sergey Poznyakoff  Nested MIME<<------- =_aaaaaaaaaa0 Content-Type:
   5  07/13 Sergey Poznyakoff  Empty MIME Parts<<------- =_aaaaaaaaaa0 Content-
Next
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/inc.at:33"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_55
#AT_START_56
at_fn_group_banner 56 'inc.at:48' \
  "inc -folder" "                                    " 5
at_xfail=no
(
  $as_echo "56. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/inc.at:48:




cp -r \$abs_top_srcdir/testsuite/spool/mbox1 .
if test -e ./mbox1; then

# First, set all modes to +w
find ./mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find ./mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find . | xargs chmod +w
# Then, remove executable bit from regular files
find . -type f | xargs chmod -x

fi



mkdir Mail/new
inc +new -file ./mbox1 | sed 's/ *\$//'
"
at_fn_check_prepare_notrace 'an embedded newline' "inc.at:48"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/spool/mbox1 .
if test -e ./mbox1; then

# First, set all modes to +w
find ./mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find ./mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find . | xargs chmod +w
# Then, remove executable bit from regular files
find . -type f | xargs chmod -x

fi



mkdir Mail/new
inc +new -file ./mbox1 | sed 's/ *$//'

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "   1+ 12/28 Foo Bar            Jabberwocky<<\`Twas brillig, and the slithy toves
   2  12/28 Bar                Re: Jabberwocky<<It seems very pretty, but it's
   3  07/13 Sergey Poznyakoff  Simple MIME<<------- =_aaaaaaaaaa0 Content-Type:
   4  07/13 Sergey Poznyakoff  Nested MIME<<------- =_aaaaaaaaaa0 Content-Type:
   5  07/13 Sergey Poznyakoff  Empty MIME Parts<<------- =_aaaaaaaaaa0 Content-
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/inc.at:48"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_56
#AT_START_57
at_fn_group_banner 57 'inc.at:61' \
  "inc -changecur" "                                 " 5
at_xfail=no
(
  $as_echo "57. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/inc.at:61:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r \$abs_top_srcdir/testsuite/spool/mbox1 .
if test -e ./mbox1; then

# First, set all modes to +w
find ./mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find ./mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find . | xargs chmod +w
# Then, remove executable bit from regular files
find . -type f | xargs chmod -x

fi



inc -changecur -file ./mbox1 | sed 's/ *\$//'
"
at_fn_check_prepare_notrace 'an embedded newline' "inc.at:61"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r $abs_top_srcdir/testsuite/spool/mbox1 .
if test -e ./mbox1; then

# First, set all modes to +w
find ./mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find ./mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find . | xargs chmod +w
# Then, remove executable bit from regular files
find . -type f | xargs chmod -x

fi



inc -changecur -file ./mbox1 | sed 's/ *$//'

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "   6+ 12/28 Foo Bar            Jabberwocky<<\`Twas brillig, and the slithy toves
   7  12/28 Bar                Re: Jabberwocky<<It seems very pretty, but it's
   8  07/13 Sergey Poznyakoff  Simple MIME<<------- =_aaaaaaaaaa0 Content-Type:
   9  07/13 Sergey Poznyakoff  Nested MIME<<------- =_aaaaaaaaaa0 Content-Type:
  10  07/13 Sergey Poznyakoff  Empty MIME Parts<<------- =_aaaaaaaaaa0 Content-
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/inc.at:61"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_57
#AT_START_58
at_fn_group_banner 58 'inc.at:74' \
  "inc -nochangecur" "                               " 5
at_xfail=no
(
  $as_echo "58. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/inc.at:74:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"cur: 1\" > Mail/inbox/.mh_sequences




cp -r \$abs_top_srcdir/testsuite/spool/mbox1 .
if test -e ./mbox1; then

# First, set all modes to +w
find ./mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find ./mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find . | xargs chmod +w
# Then, remove executable bit from regular files
find . -type f | xargs chmod -x

fi



inc -nochangecur -file ./mbox1 | sed 's/ *\$//'
grep ^cur: Mail/inbox/.mh_sequences
"
at_fn_check_prepare_notrace 'an embedded newline' "inc.at:74"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "cur: 1" > Mail/inbox/.mh_sequences




cp -r $abs_top_srcdir/testsuite/spool/mbox1 .
if test -e ./mbox1; then

# First, set all modes to +w
find ./mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find ./mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find . | xargs chmod +w
# Then, remove executable bit from regular files
find . -type f | xargs chmod -x

fi



inc -nochangecur -file ./mbox1 | sed 's/ *$//'
grep ^cur: Mail/inbox/.mh_sequences

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "   6  12/28 Foo Bar            Jabberwocky<<\`Twas brillig, and the slithy toves
   7  12/28 Bar                Re: Jabberwocky<<It seems very pretty, but it's
   8  07/13 Sergey Poznyakoff  Simple MIME<<------- =_aaaaaaaaaa0 Content-Type:
   9  07/13 Sergey Poznyakoff  Nested MIME<<------- =_aaaaaaaaaa0 Content-Type:
  10  07/13 Sergey Poznyakoff  Empty MIME Parts<<------- =_aaaaaaaaaa0 Content-
cur: 1
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/inc.at:74"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_58
#AT_START_59
at_fn_group_banner 59 'scan.at:21' \
  "scan" "                                           " 6
at_xfail=no
(
  $as_echo "59. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/scan.at:21:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"Current-Folder: inbox\" > Mail/context
scan | sed 's/ *\$//'
"
at_fn_check_prepare_notrace 'an embedded newline' "scan.at:21"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "Current-Folder: inbox" > Mail/context
scan | sed 's/ *$//'

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "   1  12/28 Foo Bar            Jabberwocky<<\`Twas brillig, and the slithy toves
   2  12/28 Bar                Re: Jabberwocky<<It seems very pretty, but it's
   3  07/13 Sergey Poznyakoff  Simple MIME<<------- =_aaaaaaaaaa0 Content-Type:
   4  07/13 Sergey Poznyakoff  Nested MIME<<------- =_aaaaaaaaaa0 Content-Type:
   5  07/13 Sergey Poznyakoff  Empty MIME Parts<<------- =_aaaaaaaaaa0 Content-
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/scan.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_59
#AT_START_60
at_fn_group_banner 60 'scan.at:34' \
  "scan -folder" "                                   " 6
at_xfail=no
(
  $as_echo "60. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/scan.at:34:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



scan +inbox | sed 's/ *\$//'
"
at_fn_check_prepare_notrace 'an embedded newline' "scan.at:34"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



scan +inbox | sed 's/ *$//'

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "   1  12/28 Foo Bar            Jabberwocky<<\`Twas brillig, and the slithy toves
   2  12/28 Bar                Re: Jabberwocky<<It seems very pretty, but it's
   3  07/13 Sergey Poznyakoff  Simple MIME<<------- =_aaaaaaaaaa0 Content-Type:
   4  07/13 Sergey Poznyakoff  Nested MIME<<------- =_aaaaaaaaaa0 Content-Type:
   5  07/13 Sergey Poznyakoff  Empty MIME Parts<<------- =_aaaaaaaaaa0 Content-
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/scan.at:34"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_60
#AT_START_61
at_fn_group_banner 61 'scan.at:46' \
  "scan -format" "                                   " 6
at_xfail=no
(
  $as_echo "61. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/scan.at:46:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail
if test -e Mail/mbox1; then

# First, set all modes to 700
find Mail/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail | xargs chmod 700
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



scan +mbox1 -format '%4(msg) %{from} - %{to}'
"
at_fn_check_prepare_notrace 'an embedded newline' "scan.at:46"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail
if test -e Mail/mbox1; then

# First, set all modes to 700
find Mail/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail | xargs chmod 700
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



scan +mbox1 -format '%4(msg) %{from} - %{to}'

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "   1 Foo Bar <foobar@nonexistent.net> - Bar <bar@dontmailme.org>
   2 Bar <bar@dontmailme.org> - Foo Bar <foobar@nonexistent.net>
   3 Sergey Poznyakoff <gray@example.net> - Foo Bar <foobar@nonexistent.net>
   4 Sergey Poznyakoff <gray@example.net> - Foo Bar <foobar@nonexistent.net>
   5 Sergey Poznyakoff <gray@example.net> - Foo Bar <foobar@nonexistent.net>
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/scan.at:46"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_61
#AT_START_62
at_fn_group_banner 62 'scan.at:58' \
  "scan -form" "                                     " 6
at_xfail=no
(
  $as_echo "62. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/scan.at:58:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail
if test -e Mail/mbox1; then

# First, set all modes to 700
find Mail/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail | xargs chmod 700
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo '%4(msg) %(decode(friendly{from})) - %(decode(friendly{to}))' > formfile
scan +mbox1 -form formfile
"
at_fn_check_prepare_notrace 'an embedded newline' "scan.at:58"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail
if test -e Mail/mbox1; then

# First, set all modes to 700
find Mail/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail | xargs chmod 700
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo '%4(msg) %(decode(friendly{from})) - %(decode(friendly{to}))' > formfile
scan +mbox1 -form formfile

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "   1 Foo Bar - Bar
   2 Bar - Foo Bar
   3 Sergey Poznyakoff - Foo Bar
   4 Sergey Poznyakoff - Foo Bar
   5 Sergey Poznyakoff - Foo Bar
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/scan.at:58"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_62
#AT_START_63
at_fn_group_banner 63 'scan.at:71' \
  "scan -reverse" "                                  " 6
at_xfail=no
(
  $as_echo "63. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/scan.at:71:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail
if test -e Mail/mbox1; then

# First, set all modes to 700
find Mail/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail | xargs chmod 700
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



scan +mbox1 -reverse | sed 's/ *\$//'
"
at_fn_check_prepare_notrace 'an embedded newline' "scan.at:71"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail
if test -e Mail/mbox1; then

# First, set all modes to 700
find Mail/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail | xargs chmod 700
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



scan +mbox1 -reverse | sed 's/ *$//'

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "   5  07/13 Sergey Poznyakoff  Empty MIME Parts<<------- =_aaaaaaaaaa0 Content-
   4  07/13 Sergey Poznyakoff  Nested MIME<<------- =_aaaaaaaaaa0 Content-Type:
   3  07/13 Sergey Poznyakoff  Simple MIME<<------- =_aaaaaaaaaa0 Content-Type:
   2  12/28 Bar                Re: Jabberwocky<<It seems very pretty, but it's
   1  12/28 Foo Bar            Jabberwocky<<\`Twas brillig, and the slithy toves
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/scan.at:71"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_63
#AT_START_64
at_fn_group_banner 64 'rmm.at:21' \
  "rmm msg" "                                        " 7
at_xfail=no
(
  $as_echo "64. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/rmm.at:21:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
rmm 4 || exit \$?
find Mail/inbox -name '[0-9]' | sort
"
at_fn_check_prepare_notrace 'an embedded newline' "rmm.at:21"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
rmm 4 || exit $?
find Mail/inbox -name '[0-9]' | sort

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Mail/inbox/1
Mail/inbox/2
Mail/inbox/3
Mail/inbox/5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/rmm.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_64
#AT_START_65
at_fn_group_banner 65 'rmm.at:34' \
  "rmm seq" "                                        " 7
at_xfail=no
(
  $as_echo "65. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/rmm.at:34:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
cat > Mail/inbox/.mh_sequences <<EOT
test: 2 3 5
cur: 1
EOT
rmm test || exit \$?
find Mail/inbox -name '[0-9]' | sort
sed '/^\$/d' Mail/inbox/.mh_sequences
"
at_fn_check_prepare_notrace 'an embedded newline' "rmm.at:34"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
cat > Mail/inbox/.mh_sequences <<EOT
test: 2 3 5
cur: 1
EOT
rmm test || exit $?
find Mail/inbox -name '[0-9]' | sort
sed '/^$/d' Mail/inbox/.mh_sequences

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Mail/inbox/1
Mail/inbox/4
test: 2 3 5
cur: 1
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/rmm.at:34"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_65
#AT_START_66
at_fn_group_banner 66 'rmm.at:52' \
  "rmm rmmproc" "                                    " 7
at_xfail=no
(
  $as_echo "66. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/rmm.at:52:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"rmmproc: \$abs_top_srcdir/mh/tests/movemsg\" >> \$MH
rmm 1 4 || exit \$?
find Mail/inbox -name '[0-9]' | sort
find Mail/removed -name '[0-9]' | sort
"
at_fn_check_prepare_notrace 'an embedded newline' "rmm.at:52"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "rmmproc: $abs_top_srcdir/mh/tests/movemsg" >> $MH
rmm 1 4 || exit $?
find Mail/inbox -name '[0-9]' | sort
find Mail/removed -name '[0-9]' | sort

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Mail/inbox/2
Mail/inbox/3
Mail/inbox/5
Mail/removed/1
Mail/removed/4
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/rmm.at:52"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_66
#AT_START_67
at_fn_group_banner 67 'rmm.at:67' \
  "rmm -- null rmmproc" "                            " 7
at_xfail=no
(
  $as_echo "67. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/rmm.at:67:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"rmmproc:\" >> \$MH
rmm 1 4 || exit \$?
find Mail/inbox -name '[0-9]' | sort
test -f Mail/inbox/,1 || echo OK
test -f Mail/inbox/,4 || echo OK
"
at_fn_check_prepare_notrace 'an embedded newline' "rmm.at:67"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "rmmproc:" >> $MH
rmm 1 4 || exit $?
find Mail/inbox -name '[0-9]' | sort
test -f Mail/inbox/,1 || echo OK
test -f Mail/inbox/,4 || echo OK

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Mail/inbox/2
Mail/inbox/3
Mail/inbox/5
OK
OK
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/rmm.at:67"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_67
#AT_START_68
at_fn_group_banner 68 'rmf.at:21' \
  "rmf +folder" "                                    " 8
at_xfail=no
(
  $as_echo "68. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/rmf.at:21:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
rmf +teaparty || exit \$?
find Mail -type d | sort
"
at_fn_check_prepare_notrace 'an embedded newline' "rmf.at:21"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
rmf +teaparty || exit $?
find Mail -type d | sort

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Mail
Mail/inbox
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/rmf.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_68
#AT_START_69
at_fn_group_banner 69 'rmf.at:33' \
  "rmf" "                                            " 8
at_xfail=no
(
  $as_echo "69. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/rmf.at:33:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo 'Current-Folder: teaparty' > Mail/context
rmf || exit \$?
find Mail -type d | sort
"
at_fn_check_prepare_notrace 'an embedded newline' "rmf.at:33"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo 'Current-Folder: teaparty' > Mail/context
rmf || exit $?
find Mail -type d | sort

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "[+inbox now current]
Mail
Mail/inbox
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/rmf.at:33"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_69
#AT_START_70
at_fn_group_banner 70 'mark.at:20' \
  "mark -add" "                                      " 9
at_xfail=no
(
  $as_echo "70. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mark.at:20:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
mark -sequence andro -add 2
mark -sequence andro -add 3-5
sed -n '/^andro:/{s/  */ /g;s/ \$//;p;}' Mail/inbox/.mh_sequences
"
at_fn_check_prepare_notrace 'an embedded newline' "mark.at:20"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
mark -sequence andro -add 2
mark -sequence andro -add 3-5
sed -n '/^andro:/{s/  */ /g;s/ $//;p;}' Mail/inbox/.mh_sequences

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "andro: 2-5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mark.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_70
#AT_START_71
at_fn_group_banner 71 'mark.at:31' \
  "mark -add -zero" "                                " 9
at_xfail=no
(
  $as_echo "71. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mark.at:31:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
mark -sequence andro -add 2
sed -n '/^andro:/{s/  */ /g;s/ \$//;p;}' Mail/inbox/.mh_sequences
mark -zero -sequence andro -add 1 3
sed -n '/^andro:/{s/  */ /g;s/ \$//;p;}' Mail/inbox/.mh_sequences
"
at_fn_check_prepare_notrace 'an embedded newline' "mark.at:31"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
mark -sequence andro -add 2
sed -n '/^andro:/{s/  */ /g;s/ $//;p;}' Mail/inbox/.mh_sequences
mark -zero -sequence andro -add 1 3
sed -n '/^andro:/{s/  */ /g;s/ $//;p;}' Mail/inbox/.mh_sequences

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "andro: 2
andro: 1 3
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mark.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_71
#AT_START_72
at_fn_group_banner 72 'mark.at:44' \
  "mark -add -nopublic" "                            " 9
at_xfail=no
(
  $as_echo "72. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mark.at:44:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
mark -nopublic -sequence andro -add 1 2 3
sed -n '/^atr-andro/{s/  */ /g;s/ \$//;s/^[^:]*:/atr-andro:/;p;}' Mail/context
"
at_fn_check_prepare_notrace 'an embedded newline' "mark.at:44"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
mark -nopublic -sequence andro -add 1 2 3
sed -n '/^atr-andro/{s/  */ /g;s/ $//;s/^[^:]*:/atr-andro:/;p;}' Mail/context

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "atr-andro: 1-3
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mark.at:44"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_72
#AT_START_73
at_fn_group_banner 73 'mark.at:54' \
  "mark -del" "                                      " 9
at_xfail=no
(
  $as_echo "73. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mark.at:54:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
echo 'andro: 2 3 4 5' > Mail/inbox/.mh_sequences
mark -sequence andro -del 3
sed -n '/^andro:/{s/  */ /g;s/ \$//;p;}' Mail/inbox/.mh_sequences
"
at_fn_check_prepare_notrace 'an embedded newline' "mark.at:54"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
echo 'andro: 2 3 4 5' > Mail/inbox/.mh_sequences
mark -sequence andro -del 3
sed -n '/^andro:/{s/  */ /g;s/ $//;p;}' Mail/inbox/.mh_sequences

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "andro: 2 4 5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mark.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_73
#AT_START_74
at_fn_group_banner 74 'mark.at:65' \
  "mark -del -nopublic" "                            " 9
at_xfail=no
(
  $as_echo "74. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mark.at:65:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
inbox=\`pwd\`/Mail/inbox
cat > Mail/context <<EOT
atr-andro-\$inbox: 2-5
EOT
mark -nopublic -sequence andro -del 3
sed -n '/^atr-andro/{s/  */ /g;s/ \$//;s/^[^:]*:/atr-andro:/;p;}' Mail/context
"
at_fn_check_prepare_notrace 'a `...` command substitution' "mark.at:65"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
inbox=`pwd`/Mail/inbox
cat > Mail/context <<EOT
atr-andro-$inbox: 2-5
EOT
mark -nopublic -sequence andro -del 3
sed -n '/^atr-andro/{s/  */ /g;s/ $//;s/^[^:]*:/atr-andro:/;p;}' Mail/context

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "atr-andro: 2 4 5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mark.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_74
#AT_START_75
at_fn_group_banner 75 'mark.at:79' \
  "mark -list" "                                     " 9
at_xfail=no
(
  $as_echo "75. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mark.at:79:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
inbox=\`pwd\`/Mail/inbox
cat > Mail/context <<EOT
atr-andro-\$inbox: 2 3
EOT
cat > Mail/inbox/.mh_sequences <<EOT
cur: 1
andro: 1 5
gwerz: 4
EOT
mark -list
"
at_fn_check_prepare_notrace 'a `...` command substitution' "mark.at:79"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
inbox=`pwd`/Mail/inbox
cat > Mail/context <<EOT
atr-andro-$inbox: 2 3
EOT
cat > Mail/inbox/.mh_sequences <<EOT
cur: 1
andro: 1 5
gwerz: 4
EOT
mark -list

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "cur: 1
andro: 1 5
gwerz: 4
andro (private): 2 3
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mark.at:79"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_75
#AT_START_76
at_fn_group_banner 76 'mhparam.at:20' \
  "mhparam -all" "                                   " 10
at_xfail=no
(
  $as_echo "76. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhparam.at:20:
cat >>\$MH <<EOT
Sequence-Negation: not
Draft-Folder: Mail/drafts
Aliasfile: .mh_aliases
EOT
mhparam -all | tr '\\t' ' ' | sed 's/^Path:.*/Path: Mail/;s/^mhetcdir:.*/mhetcdir: dir/;s/  */ /g'
"
at_fn_check_prepare_notrace 'an embedded newline' "mhparam.at:20"
( $at_check_trace;
cat >>$MH <<EOT
Sequence-Negation: not
Draft-Folder: Mail/drafts
Aliasfile: .mh_aliases
EOT
mhparam -all | tr '\t' ' ' | sed 's/^Path:.*/Path: Mail/;s/^mhetcdir:.*/mhetcdir: dir/;s/  */ /g'

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Path: Mail
mhetcdir: dir
moreproc: /bin/cat
Sequence-Negation: not
Draft-Folder: Mail/drafts
Aliasfile: .mh_aliases
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhparam.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_76
#AT_START_77
at_fn_group_banner 77 'mhparam.at:37' \
  "mhparam comp" "                                   " 10
at_xfail=no
(
  $as_echo "77. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhparam.at:37:
cat >>\$MH <<EOT
Sequence-Negation: not
Draft-Folder: Mail/drafts
Aliasfile: .mh_aliases
EOT
mhparam Sequence-Negation
"
at_fn_check_prepare_notrace 'an embedded newline' "mhparam.at:37"
( $at_check_trace;
cat >>$MH <<EOT
Sequence-Negation: not
Draft-Folder: Mail/drafts
Aliasfile: .mh_aliases
EOT
mhparam Sequence-Negation

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "not
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhparam.at:37"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_77
#AT_START_78
at_fn_group_banner 78 'mhparam.at:49' \
  "mhparam comp comp" "                              " 10
at_xfail=no
(
  $as_echo "78. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhparam.at:49:
cat >>\$MH <<EOT
Sequence-Negation: not
Draft-Folder: Mail/drafts
Aliasfile: .mh_aliases
EOT
mhparam Sequence-Negation Aliasfile | tr '\\t' ' '
"
at_fn_check_prepare_notrace 'an embedded newline' "mhparam.at:49"
( $at_check_trace;
cat >>$MH <<EOT
Sequence-Negation: not
Draft-Folder: Mail/drafts
Aliasfile: .mh_aliases
EOT
mhparam Sequence-Negation Aliasfile | tr '\t' ' '

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Sequence-Negation: not
Aliasfile: .mh_aliases
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhparam.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_78
#AT_START_79
at_fn_group_banner 79 'mhparam.at:62' \
  "mhparam -component comp" "                        " 10
at_xfail=no
(
  $as_echo "79. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhparam.at:62:
cat >>\$MH <<EOT
Sequence-Negation: not
Draft-Folder: Mail/drafts
Aliasfile: .mh_aliases
EOT
mhparam -component Sequence-Negation | tr '\\t' ' ' | sed 's/  */ /g'
"
at_fn_check_prepare_notrace 'an embedded newline' "mhparam.at:62"
( $at_check_trace;
cat >>$MH <<EOT
Sequence-Negation: not
Draft-Folder: Mail/drafts
Aliasfile: .mh_aliases
EOT
mhparam -component Sequence-Negation | tr '\t' ' ' | sed 's/  */ /g'

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Sequence-Negation: not
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhparam.at:62"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_79
#AT_START_80
at_fn_group_banner 80 'refile.at:20' \
  "refile" "                                         " 11
at_xfail=no
(
  $as_echo "80. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/refile.at:20:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/teaparty
if test -e Mail/teaparty/teaparty; then

# First, set all modes to +w
find Mail/teaparty/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

fi



echo 'Current-Folder: teaparty' > Mail/context
refile 3 4 +inbox || exit \$?
find Mail/inbox -name '[0-9]' | sort
cmp Mail/inbox/6 Mail/teaparty/,3 >/dev/null || echo \"Message 3 differs\"
cmp Mail/inbox/7 Mail/teaparty/,4 >/dev/null || echo \"Message 4 differs\"
"
at_fn_check_prepare_notrace 'an embedded newline' "refile.at:20"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/teaparty
if test -e Mail/teaparty/teaparty; then

# First, set all modes to +w
find Mail/teaparty/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

fi



echo 'Current-Folder: teaparty' > Mail/context
refile 3 4 +inbox || exit $?
find Mail/inbox -name '[0-9]' | sort
cmp Mail/inbox/6 Mail/teaparty/,3 >/dev/null || echo "Message 3 differs"
cmp Mail/inbox/7 Mail/teaparty/,4 >/dev/null || echo "Message 4 differs"

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Mail/inbox/1
Mail/inbox/2
Mail/inbox/3
Mail/inbox/4
Mail/inbox/5
Mail/inbox/6
Mail/inbox/7
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/refile.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_80
#AT_START_81
at_fn_group_banner 81 'refile.at:39' \
  "refile -file" "                                   " 11
at_xfail=no
(
  $as_echo "81. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/refile.at:39:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
cp Mail/inbox/2 message
refile -file \`pwd\`/message +inbox || exit \$?
find Mail/inbox -name '[0-9]' | sort
cmp Mail/inbox/2 Mail/inbox/6 >/dev/null || echo \"Message differs\"
"
at_fn_check_prepare_notrace 'a `...` command substitution' "refile.at:39"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
cp Mail/inbox/2 message
refile -file `pwd`/message +inbox || exit $?
find Mail/inbox -name '[0-9]' | sort
cmp Mail/inbox/2 Mail/inbox/6 >/dev/null || echo "Message differs"

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Mail/inbox/1
Mail/inbox/2
Mail/inbox/3
Mail/inbox/4
Mail/inbox/5
Mail/inbox/6
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/refile.at:39"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_81
#AT_START_82
at_fn_group_banner 82 'refile.at:56' \
  "refile --copy" "                                  " 11
at_xfail=no
(
  $as_echo "82. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/refile.at:56:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/teaparty
if test -e Mail/teaparty/teaparty; then

# First, set all modes to +w
find Mail/teaparty/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

fi



echo 'Current-Folder: teaparty' > Mail/context
refile --copy 3 4 +inbox || exit \$?
find Mail/inbox -name '[0-9]' | sort
cmp Mail/inbox/6 Mail/teaparty/3 >/dev/null || echo \"Message 3 differs\"
cmp Mail/inbox/7 Mail/teaparty/4 >/dev/null || echo \"Message 4 differs\"
"
at_fn_check_prepare_notrace 'an embedded newline' "refile.at:56"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi







cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/teaparty
if test -e Mail/teaparty/teaparty; then

# First, set all modes to +w
find Mail/teaparty/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

fi



echo 'Current-Folder: teaparty' > Mail/context
refile --copy 3 4 +inbox || exit $?
find Mail/inbox -name '[0-9]' | sort
cmp Mail/inbox/6 Mail/teaparty/3 >/dev/null || echo "Message 3 differs"
cmp Mail/inbox/7 Mail/teaparty/4 >/dev/null || echo "Message 4 differs"

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Mail/inbox/1
Mail/inbox/2
Mail/inbox/3
Mail/inbox/4
Mail/inbox/5
Mail/inbox/6
Mail/inbox/7
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/refile.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_82
#AT_START_83
at_fn_group_banner 83 'mhpath.at:20' \
  "mhpath" "                                         " 12
at_xfail=no
(
  $as_echo "83. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhpath.at:20:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
mhpath | remove_curdir
"
at_fn_check_prepare_notrace 'an embedded newline' "mhpath.at:20"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
mhpath | remove_curdir

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Mail/inbox
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhpath.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_83
#AT_START_84
at_fn_group_banner 84 'mhpath.at:29' \
  "mhpath +" "                                       " 12
at_xfail=no
(
  $as_echo "84. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhpath.at:29:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
mhpath +| remove_curdir
"
at_fn_check_prepare_notrace 'an embedded newline' "mhpath.at:29"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo 'Current-Folder: inbox' > Mail/context
mhpath +| remove_curdir

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Mail
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhpath.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_84
#AT_START_85
at_fn_group_banner 85 'mhpath.at:38' \
  "mhpath msgs" "                                    " 12
at_xfail=no
(
  $as_echo "85. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhpath.at:38:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhpath 1-3 | remove_curdir
"
at_fn_check_prepare_notrace 'an embedded newline' "mhpath.at:38"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhpath 1-3 | remove_curdir

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Mail/inbox/1
Mail/inbox/2
Mail/inbox/3
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhpath.at:38"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_85
#AT_START_86
at_fn_group_banner 86 'mhpath.at:48' \
  "mhpath msgs (some nonexistent)" "                 " 12
at_xfail=no
(
  $as_echo "86. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhpath.at:48:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhpath 4-10 | remove_curdir
"
at_fn_check_prepare_notrace 'an embedded newline' "mhpath.at:48"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhpath 4-10 | remove_curdir

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Mail/inbox/4
Mail/inbox/5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhpath.at:48"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_86
#AT_START_87
at_fn_group_banner 87 'mhpath.at:57' \
  "mhpath msgs (all nonexistent)" "                  " 12
at_xfail=no
(
  $as_echo "87. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhpath.at:57:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhpath 8-10 | remove_curdir
"
at_fn_check_prepare_notrace 'an embedded newline' "mhpath.at:57"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhpath 8-10 | remove_curdir

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "mhpath: no messages in range 8-10
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhpath.at:57"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_87
#AT_START_88
at_fn_group_banner 88 'mhpath.at:88' \
  "mhpath nonexistent" "                             " 12
at_xfail=no
(
  $as_echo "88. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhpath.at:88:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhpath 10 | remove_curdir
"
at_fn_check_prepare_notrace 'an embedded newline' "mhpath.at:88"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhpath 10 | remove_curdir

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "mhpath: message 10 does not exist
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhpath.at:88"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_88
#AT_START_89
at_fn_group_banner 89 'mhpath.at:97' \
  "mhpath new" "                                     " 12
at_xfail=no
(
  $as_echo "89. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhpath.at:97:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhpath new | remove_curdir
"
at_fn_check_prepare_notrace 'an embedded newline' "mhpath.at:97"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhpath new | remove_curdir

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Mail/inbox/6
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhpath.at:97"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_89
#AT_START_90
at_fn_group_banner 90 'mhl.at:20' \
  "mhl" "                                            " 13
at_xfail=no
(
  $as_echo "90. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhl.at:20:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to 700
find Mail/inbox/teaparty | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhl -form mhl.format Mail/inbox/2
"
at_fn_check_prepare_notrace 'an embedded newline' "mhl.at:20"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to 700
find Mail/inbox/teaparty | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhl -form mhl.format Mail/inbox/2

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo " -- using template mhl.format --
Date:    Mon, 29 Jul 2002 22:00:02 +0100
To:      March Hare  <hare@wonder.land>

From:    Alice  <alice@wonder.land>
Subject: Re: Invitation

X-Envelope-Date: Mon Jul 29 22:00:09 2002
X-Envelope-Sender: alice@wonder.land

I don't see any wine
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhl.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_90
#AT_START_91
at_fn_group_banner 91 'mhl.at:38' \
  "mhl repl" "                                       " 13
at_xfail=no
(
  $as_echo "91. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhl.at:38:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to 700
find Mail/inbox/teaparty | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhl -form mhl.repl Mail/inbox/15
"
at_fn_check_prepare_notrace 'an embedded newline' "mhl.at:38"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to 700
find Mail/inbox/teaparty | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhl -form mhl.repl Mail/inbox/15

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "
         Not the same thing a bit! You might just
         as well say that \"I see what I eat\" is the same thing as \"I eat
         what I see\"!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhl.at:38"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_91
#AT_START_92
at_fn_group_banner 92 'mhl.at:49' \
  "mhl usenet" "                                     " 13
at_xfail=no
(
  $as_echo "92. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhl.at:49:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to 700
find Mail/inbox/teaparty | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhl -form mhl.usenet Mail/inbox/15
"
at_fn_check_prepare_notrace 'an embedded newline' "mhl.at:49"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to 700
find Mail/inbox/teaparty | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhl -form mhl.usenet Mail/inbox/15

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "
In message <200207292200.3315@wonder.land>, Hatter writes:
>Not the same thing a bit! You might just
>as well say that \"I see what I eat\" is the same thing as \"I eat
>what I see\"!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhl.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_92
#AT_START_93
at_fn_group_banner 93 'anno.at:20' \
  "anno" "                                           " 14
at_xfail=no
(
  $as_echo "93. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/anno.at:20:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"Current-Folder: inbox\" > Mail/context
echo \"cur: 1\" > Mail/inbox/.mh_sequences
echo Replied | anno || exit \$?
sed -n '1{s/Replied: .*/REPLIED/p;}' Mail/inbox/1
"
at_fn_check_prepare_notrace 'an embedded newline' "anno.at:20"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "Current-Folder: inbox" > Mail/context
echo "cur: 1" > Mail/inbox/.mh_sequences
echo Replied | anno || exit $?
sed -n '1{s/Replied: .*/REPLIED/p;}' Mail/inbox/1

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "REPLIED
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/anno.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_93
#AT_START_94
at_fn_group_banner 94 'anno.at:31' \
  "anno -component" "                                " 14
at_xfail=no
(
  $as_echo "94. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/anno.at:31:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"Current-Folder: inbox\" > Mail/context
anno -component Replied 1 || exit \$?
sed -n '1{s/Replied: .*/REPLIED/p;}' Mail/inbox/1
"
at_fn_check_prepare_notrace 'an embedded newline' "anno.at:31"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "Current-Folder: inbox" > Mail/context
anno -component Replied 1 || exit $?
sed -n '1{s/Replied: .*/REPLIED/p;}' Mail/inbox/1

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "REPLIED
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/anno.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_94
#AT_START_95
at_fn_group_banner 95 'anno.at:41' \
  "anno -component -text" "                          " 14
at_xfail=no
(
  $as_echo "95. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/anno.at:41:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"Current-Folder: inbox\" > Mail/context
anno -component Replied -text OK 1 || exit \$?
sed -n '3,\$d;/Replied/{s/Replied: [A-Z][a-z][a-z], [0-9][0-9] [A-Z][a-z][a-z] [0-9][0-9][0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9] .*/Replied: DATE/;p;}' Mail/inbox/1
"
at_fn_check_prepare_notrace 'an embedded newline' "anno.at:41"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "Current-Folder: inbox" > Mail/context
anno -component Replied -text OK 1 || exit $?
sed -n '3,$d;/Replied/{s/Replied: [A-Z][a-z][a-z], [0-9][0-9] [A-Z][a-z][a-z] [0-9][0-9][0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9] .*/Replied: DATE/;p;}' Mail/inbox/1

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Replied: OK
Replied: DATE
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/anno.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_95
#AT_START_96
at_fn_group_banner 96 'anno.at:52' \
  "anno -component -text -nodate" "                  " 14
at_xfail=no
(
  $as_echo "96. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/anno.at:52:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"Current-Folder: inbox\" > Mail/context
anno -component Replied -text OK -nodate 1 || exit \$?
sed -n '3,\$d;/Replied/{s/Replied: [A-Z][a-z][a-z], [0-9][0-9] [A-Z][a-z][a-z] [0-9][0-9][0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9] .*/Replied: DATE/;p;}' Mail/inbox/1
"
at_fn_check_prepare_notrace 'an embedded newline' "anno.at:52"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "Current-Folder: inbox" > Mail/context
anno -component Replied -text OK -nodate 1 || exit $?
sed -n '3,$d;/Replied/{s/Replied: [A-Z][a-z][a-z], [0-9][0-9] [A-Z][a-z][a-z] [0-9][0-9][0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9] .*/Replied: DATE/;p;}' Mail/inbox/1

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Replied: OK
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/anno.at:52"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_96
#AT_START_97
at_fn_group_banner 97 'pick.at:20' \
  "pick -from" "                                     " 15
at_xfail=no
(
  $as_echo "97. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/pick.at:20:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"Current-Folder: inbox\" > Mail/context
echo \"cur: 1\" > Mail/inbox/.mh_sequences
pick -from dormouse
"
at_fn_check_prepare_notrace 'an embedded newline' "pick.at:20"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "Current-Folder: inbox" > Mail/context
echo "cur: 1" > Mail/inbox/.mh_sequences
pick -from dormouse

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "17
31
49
61
65
67
69
77
79
81
83
88
89
91
92
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/pick.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_97
#AT_START_98
at_fn_group_banner 98 'pick.at:44' \
  "pick -from -sequence" "                           " 15
at_xfail=no
(
  $as_echo "98. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/pick.at:44:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"Current-Folder: inbox\" > Mail/context
echo \"cur: 1\" > Mail/inbox/.mh_sequences
pick -from dormouse -sequence dormouse || exit \$?
sed -n '/^dormouse:/{s/  */ /g;s/ \$//;p;}' Mail/inbox/.mh_sequences
"
at_fn_check_prepare_notrace 'an embedded newline' "pick.at:44"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "Current-Folder: inbox" > Mail/context
echo "cur: 1" > Mail/inbox/.mh_sequences
pick -from dormouse -sequence dormouse || exit $?
sed -n '/^dormouse:/{s/  */ /g;s/ $//;p;}' Mail/inbox/.mh_sequences

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "dormouse: 17 31 49 61 65 67 69 77 79 81 83 88 89 91 92
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/pick.at:44"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_98
#AT_START_99
at_fn_group_banner 99 'pick.at:55' \
  "pick -search" "                                   " 15
at_xfail=no
(
  $as_echo "99. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/pick.at:55:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"Current-Folder: inbox\" > Mail/context
echo \"cur: 1\" > Mail/inbox/.mh_sequences
pick -search 'Why not'
"
at_fn_check_prepare_notrace 'an embedded newline' "pick.at:55"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "Current-Folder: inbox" > Mail/context
echo "cur: 1" > Mail/inbox/.mh_sequences
pick -search 'Why not'

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "91
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/pick.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_99
#AT_START_100
at_fn_group_banner 100 'pick.at:65' \
  "pick -search regex" "                             " 15
at_xfail=no
(
  $as_echo "100. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/pick.at:65:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"Current-Folder: inbox\" > Mail/context
echo \"cur: 1\" > Mail/inbox/.mh_sequences
pick -search 'I.*think'
"
at_fn_check_prepare_notrace 'an embedded newline' "pick.at:65"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "Current-Folder: inbox" > Mail/context
echo "cur: 1" > Mail/inbox/.mh_sequences
pick -search 'I.*think'

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "36
86
93
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/pick.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_100
#AT_START_101
at_fn_group_banner 101 'pick.at:77' \
  "pick -subject -from" "                            " 15
at_xfail=no
(
  $as_echo "101. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/pick.at:77:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"Current-Folder: inbox\" > Mail/context
echo \"cur: 1\" > Mail/inbox/.mh_sequences
pick -subject Story -from Dormouse
"
at_fn_check_prepare_notrace 'an embedded newline' "pick.at:77"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "Current-Folder: inbox" > Mail/context
echo "cur: 1" > Mail/inbox/.mh_sequences
pick -subject Story -from Dormouse

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "61
65
67
69
77
79
81
83
88
89
91
92
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/pick.at:77"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_101
#AT_START_102
at_fn_group_banner 102 'pick.at:98' \
  "pick -subject -and -from" "                       " 15
at_xfail=no
(
  $as_echo "102. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/pick.at:98:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"Current-Folder: inbox\" > Mail/context
echo \"cur: 1\" > Mail/inbox/.mh_sequences
pick -subject Story -and -from Dormouse
"
at_fn_check_prepare_notrace 'an embedded newline' "pick.at:98"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "Current-Folder: inbox" > Mail/context
echo "cur: 1" > Mail/inbox/.mh_sequences
pick -subject Story -and -from Dormouse

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "61
65
67
69
77
79
81
83
88
89
91
92
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/pick.at:98"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_102
#AT_START_103
at_fn_group_banner 103 'pick.at:119' \
  "pick -subject -or -from" "                        " 15
at_xfail=no
(
  $as_echo "103. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/pick.at:119:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"Current-Folder: inbox\" > Mail/context
echo \"cur: 1\" > Mail/inbox/.mh_sequences
pick -subject Story -or -from Dormouse
"
at_fn_check_prepare_notrace 'an embedded newline' "pick.at:119"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "Current-Folder: inbox" > Mail/context
echo "cur: 1" > Mail/inbox/.mh_sequences
pick -subject Story -or -from Dormouse

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "17
31
49
58
59
60
61
62
63
64
65
66
67
68
69
70
76
77
78
79
80
81
82
83
85
86
87
88
89
90
91
92
93
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/pick.at:119"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_103
#AT_START_104
at_fn_group_banner 104 'pick.at:161' \
  "pick: default precedence" "                       " 15
at_xfail=no
(
  $as_echo "104. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/pick.at:161:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"Current-Folder: inbox\" > Mail/context
echo \"cur: 1\" > Mail/inbox/.mh_sequences
pick -subject Story -and -from Dormouse -or -from Alice
"
at_fn_check_prepare_notrace 'an embedded newline' "pick.at:161"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "Current-Folder: inbox" > Mail/context
echo "cur: 1" > Mail/inbox/.mh_sequences
pick -subject Story -and -from Dormouse -or -from Alice

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "2
4
6
8
10
12
14
20
25
27
29
33
36
38
40
43
45
47
51
53
55
57
59
61
63
65
66
67
68
69
70
72
74
76
77
78
79
80
81
82
83
85
87
88
89
90
91
92
93
95
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/pick.at:161"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_104
#AT_START_105
at_fn_group_banner 105 'pick.at:220' \
  "pick: explicit precedence (1)" "                  " 15
at_xfail=no
(
  $as_echo "105. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/pick.at:220:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"Current-Folder: inbox\" > Mail/context
echo \"cur: 1\" > Mail/inbox/.mh_sequences
pick -lbrace -subject Story -and -from Dormouse -rbrace -or -from Alice
"
at_fn_check_prepare_notrace 'an embedded newline' "pick.at:220"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "Current-Folder: inbox" > Mail/context
echo "cur: 1" > Mail/inbox/.mh_sequences
pick -lbrace -subject Story -and -from Dormouse -rbrace -or -from Alice

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "2
4
6
8
10
12
14
20
25
27
29
33
36
38
40
43
45
47
51
53
55
57
59
61
63
65
66
67
68
69
70
72
74
76
77
78
79
80
81
82
83
85
87
88
89
90
91
92
93
95
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/pick.at:220"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_105
#AT_START_106
at_fn_group_banner 106 'pick.at:279' \
  "pick: explicit precedence (2)" "                  " 15
at_xfail=no
(
  $as_echo "106. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/pick.at:279:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"Current-Folder: inbox\" > Mail/context
echo \"cur: 1\" > Mail/inbox/.mh_sequences
pick -subject Story -and -lbrace -from Dormouse -or -from Alice -rbrace
"
at_fn_check_prepare_notrace 'an embedded newline' "pick.at:279"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "Current-Folder: inbox" > Mail/context
echo "cur: 1" > Mail/inbox/.mh_sequences
pick -subject Story -and -lbrace -from Dormouse -or -from Alice -rbrace

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "59
61
63
65
66
67
68
69
70
76
77
78
79
80
81
82
83
85
87
88
89
90
91
92
93
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/pick.at:279"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_106
#AT_START_107
at_fn_group_banner 107 'pick.at:313' \
  "pick -before" "                                   " 15
at_xfail=no
(
  $as_echo "107. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/pick.at:313:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"Current-Folder: inbox\" > Mail/context
pick -before 'Mon, 29 Jul 2002 21:00:03 +0000'
"
at_fn_check_prepare_notrace 'an embedded newline' "pick.at:313"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "Current-Folder: inbox" > Mail/context
pick -before 'Mon, 29 Jul 2002 21:00:03 +0000'

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "1
2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/pick.at:313"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_107
#AT_START_108
at_fn_group_banner 108 'pick.at:323' \
  "pick --Component pattern" "                       " 15
at_xfail=no
(
  $as_echo "108. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/pick.at:323:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



pick --X-Envelope-Sender hare
"
at_fn_check_prepare_notrace 'an embedded newline' "pick.at:323"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail/inbox
if test -e Mail/inbox/teaparty; then

# First, set all modes to +w
find Mail/inbox/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



pick --X-Envelope-Sender hare

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "1
3
5
7
9
11
13
16
22
24
35
42
58
62
71
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/pick.at:323"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_108
#AT_START_109
at_fn_group_banner 109 'burst.at:20' \
  "burst digest" "                                   " 16
at_xfail=no
(
  $as_echo "109. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/burst.at:20:
mkdir Mail/inbox
cat >Mail/inbox/1 <<'_ATEOF'
From: Sergey Poznyakoff <gray@example.net>
To: root@example.com
Subject: digest

Initial text.

------- Forwarded message
From: Puszcza hackers
To: Sergey Poznyakoff <gray@gnu.org>
Subject: Hello

Greetings
- ---------
How are you?
------- End of Forwarded message

Regards,
Sergey
_ATEOF


burst +inbox 1 || exit \$?
grep -v ^X-Envelope- Mail/inbox/2
grep -v ^X-Envelope- Mail/inbox/3
grep -v ^X-Envelope- Mail/inbox/4
"
at_fn_check_prepare_notrace 'an embedded newline' "burst.at:20"
( $at_check_trace;
mkdir Mail/inbox
cat >Mail/inbox/1 <<'_ATEOF'
From: Sergey Poznyakoff <gray@example.net>
To: root@example.com
Subject: digest

Initial text.

------- Forwarded message
From: Puszcza hackers
To: Sergey Poznyakoff <gray@gnu.org>
Subject: Hello

Greetings
- ---------
How are you?
------- End of Forwarded message

Regards,
Sergey
_ATEOF


burst +inbox 1 || exit $?
grep -v ^X-Envelope- Mail/inbox/2
grep -v ^X-Envelope- Mail/inbox/3
grep -v ^X-Envelope- Mail/inbox/4

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "X-Burst-Part: 1 1 01
From: Sergey Poznyakoff <gray@example.net>
To: root@example.com
Subject: digest

Initial text.

X-Burst-Part: 1 2 02
From: Puszcza hackers
To: Sergey Poznyakoff <gray@gnu.org>
Subject: Hello

Greetings
---------
How are you?
X-Burst-Part: 1 3 00

Regards,
Sergey
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/burst.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_109
#AT_START_110
at_fn_group_banner 110 'burst.at:70' \
  "burst digest /w EB length limit" "                " 16
at_xfail=no
(
  $as_echo "110. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/burst.at:70:
mkdir Mail/inbox
cat >Mail/inbox/1 <<'_ATEOF'
From: Sergey Poznyakoff <gray@example.net>
To: root@example.com
Subject: digest

Initial text.

------- Forwarded message
From: Puszcza hackers
To: Sergey Poznyakoff <gray@gnu.org>
Subject: Hello

Greetings
-----
How are you?
------- End of Forwarded message

Regards,
Sergey
_ATEOF


burst +inbox --length=7 1 || exit \$?
grep -v ^X-Envelope- Mail/inbox/2
grep -v ^X-Envelope- Mail/inbox/3
grep -v ^X-Envelope- Mail/inbox/4
"
at_fn_check_prepare_notrace 'an embedded newline' "burst.at:70"
( $at_check_trace;
mkdir Mail/inbox
cat >Mail/inbox/1 <<'_ATEOF'
From: Sergey Poznyakoff <gray@example.net>
To: root@example.com
Subject: digest

Initial text.

------- Forwarded message
From: Puszcza hackers
To: Sergey Poznyakoff <gray@gnu.org>
Subject: Hello

Greetings
-----
How are you?
------- End of Forwarded message

Regards,
Sergey
_ATEOF


burst +inbox --length=7 1 || exit $?
grep -v ^X-Envelope- Mail/inbox/2
grep -v ^X-Envelope- Mail/inbox/3
grep -v ^X-Envelope- Mail/inbox/4

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "X-Burst-Part: 1 1 01
From: Sergey Poznyakoff <gray@example.net>
To: root@example.com
Subject: digest

Initial text.

X-Burst-Part: 1 2 02
From: Puszcza hackers
To: Sergey Poznyakoff <gray@gnu.org>
Subject: Hello

Greetings
-----
How are you?
X-Burst-Part: 1 3 00

Regards,
Sergey
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/burst.at:70"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_110
#AT_START_111
at_fn_group_banner 111 'burst.at:120' \
  "burst mime" "                                     " 16
at_xfail=no
(
  $as_echo "111. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/burst.at:120:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



burst +inbox 3 || exit \$?
grep -v ^X-Envelope- Mail/inbox/6
"
at_fn_check_prepare_notrace 'an embedded newline' "burst.at:120"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



burst +inbox 3 || exit $?
grep -v ^X-Envelope- Mail/inbox/6

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Content-Type: text/plain; name=\"msg.1\"; charset=\"us-ascii\"
Content-ID: <5082.1026510189.1@example.net>
Content-Description: How doth

How doth the little crocodile
Improve his shining tail,
And pour the waters of the Nile
On every golden scale!

\`How cheerfully he seems to grin,
How neatly spread his claws,
And welcome little fishes in
With gently smiling jaws!
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/burst.at:120"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_111
#AT_START_112
at_fn_group_banner 112 'burst.at:141' \
  "burst mime recursive" "                           " 16
at_xfail=no
(
  $as_echo "112. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/burst.at:141:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



burst +inbox --recursive 4 || exit \$?
grep -v ^X-Envelope- Mail/inbox/6
grep -v ^X-Envelope- Mail/inbox/7
grep -v ^X-Envelope- Mail/inbox/8
grep -v ^X-Envelope- Mail/inbox/9
"
at_fn_check_prepare_notrace 'an embedded newline' "burst.at:141"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



burst +inbox --recursive 4 || exit $?
grep -v ^X-Envelope- Mail/inbox/6
grep -v ^X-Envelope- Mail/inbox/7
grep -v ^X-Envelope- Mail/inbox/8
grep -v ^X-Envelope- Mail/inbox/9

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Content-Type: text/plain; name=\"msg.21\"; charset=\"us-ascii\"
Content-ID: <5122.1026510654.2@example.net>
Content-Description: Father William Part I

\`You are old, Father William,' the young man said,
\`And your hair has become very white;
And yet you incessantly stand on your head--
Do you think, at your age, it is right?'

\`In my youth,' Father William replied to his son,
\`I feared it might injure the brain;
But, now that I'm perfectly sure I have none,
Why, I do it again and again.'

Content-Type: application/octet-stream; name=\"msg.22\"
Content-ID: <5122.1026510654.4@example.net>
Content-Description: Father William Part II
Content-Transfer-Encoding: base64

YFlvdSBhcmUgb2xkLCcgc2FpZCB0aGUgeW91dGgsIGBhcyBJIG1lbnRpb25lZCBiZWZvcmUsCkFu
ZCBoYXZlIGdyb3duIG1vc3QgdW5jb21tb25seSBmYXQ7CllldCB5b3UgdHVybmVkIGEgYmFjay1z
b21lcnNhdWx0IGluIGF0IHRoZSBkb29yLS0KUHJheSwgd2hhdCBpcyB0aGUgcmVhc29uIG9mIHRo
YXQ/JwoKYEluIG15IHlvdXRoLCcgc2FpZCB0aGUgc2FnZSwgYXMgaGUgc2hvb2sgaGlzIGdyZXkg
bG9ja3MsCmBJIGtlcHQgYWxsIG15IGxpbWJzIHZlcnkgc3VwcGxlCkJ5IHRoZSB1c2Ugb2YgdGhp
cyBvaW50bWVudC0tb25lIHNoaWxsaW5nIHRoZSBib3gtLQpBbGxvdyBtZSB0byBzZWxsIHlvdSBh
IGNvdXBsZT8nCg==
Content-Type: application/octet-stream; name=\"msg.23\"
Content-ID: <5122.1026510654.6@example.net>
Content-Description: Father William Part III
Content-Transfer-Encoding: base64

YFlvdSBhcmUgb2xkLCcgc2FpZCB0aGUgeW91dGgsIGBhbmQgeW91ciBqYXdzIGFyZSB0b28gd2Vh
awpGb3IgYW55dGhpbmcgdG91Z2hlciB0aGFuIHN1ZXQ7CllldCB5b3UgZmluaXNoZWQgdGhlIGdv
b3NlLCB3aXRoIHRoZSBib25lcyBhbmQgdGhlIGJlYWstLQpQcmF5IGhvdyBkaWQgeW91IG1hbmFn
ZSB0byBkbyBpdD8nCgpgSW4gbXkgeW91dGgsJyBzYWlkIGhpcyBmYXRoZXIsIGBJIHRvb2sgdG8g
dGhlIGxhdywKQW5kIGFyZ3VlZCBlYWNoIGNhc2Ugd2l0aCBteSB3aWZlOwpBbmQgdGhlIG11c2N1
bGFyIHN0cmVuZ3RoLCB3aGljaCBpdCBnYXZlIHRvIG15IGphdywKSGFzIGxhc3RlZCB0aGUgcmVz
dCBvZiBteSBsaWZlLicK
Content-Type: application/octet-stream; name=\"msg.24\"
Content-ID: <5122.1026510654.7@example.net>
Content-Description: Father William Part IV
Content-Transfer-Encoding: base64

YFlvdSBhcmUgb2xkLCcgc2FpZCB0aGUgeW91dGgsIGBvbmUgd291bGQgaGFyZGx5IHN1cHBvc2UK
VGhhdCB5b3VyIGV5ZSB3YXMgYXMgc3RlYWR5IGFzIGV2ZXI7CllldCB5b3UgYmFsYW5jZWQgYW4g
ZWVsIG9uIHRoZSBlbmQgb2YgeW91ciBub3NlLS0KV2hhdCBtYWRlIHlvdSBzbyBhd2Z1bGx5IGNs
ZXZlcj8nCgpgSSBoYXZlIGFuc3dlcmVkIHRocmVlIHF1ZXN0aW9ucywgYW5kIHRoYXQgaXMgZW5v
dWdoLCcKU2FpZCBoaXMgZmF0aGVyOyBgZG9uJ3QgZ2l2ZSB5b3Vyc2VsZiBhaXJzIQpEbyB5b3Ug
dGhpbmsgSSBjYW4gbGlzdGVuIGFsbCBkYXkgdG8gc3VjaCBzdHVmZj8KQmUgb2ZmLCBvciBJJ2xs
IGtpY2sgeW91IGRvd24gc3RhaXJzIScK
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/burst.at:141"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_112
#AT_START_113
at_fn_group_banner 113 'burst.at:202' \
  "burst non-digest" "                               " 16
at_xfail=no
(
  $as_echo "113. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/burst.at:202:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



burst +inbox 1 || exit \$?
"
at_fn_check_prepare_notrace 'an embedded newline' "burst.at:202"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



burst +inbox 1 || exit $?

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "burst: message 1 not in digest format
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/burst.at:202"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_113
#AT_START_114
at_fn_group_banner 114 'comp.at:21' \
  "comp -file" "                                     " 17
at_xfail=no
(
  $as_echo "114. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/comp.at:21:
echo quit | comp -editor \$abs_top_srcdir/mh/tests/mhed -file ./infile | remove_curdir | sed 's/ *\$//'
sed 's/ *\$//' infile
"
at_fn_check_prepare_notrace 'an embedded newline' "comp.at:21"
( $at_check_trace;
echo quit | comp -editor $abs_top_srcdir/mh/tests/mhed -file ./infile | remove_curdir | sed 's/ *$//'
sed 's/ *$//' infile

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "-- Editor invocation: ./infile
-- Input file:
To:
cc:
Subject:
--------
-- Input file end
What now? draft left on \"./infile\".
To:
cc:
Subject:
--------
Seen by mhed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/comp.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_114
#AT_START_115
at_fn_group_banner 115 'comp.at:41' \
  "comp -file (del)" "                               " 17
at_xfail=no
(
  $as_echo "115. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/comp.at:41:
echo 'quit -delete' | comp -editor \$abs_top_srcdir/mh/tests/mhed -file ./infile | remove_curdir
"
at_fn_check_prepare_notrace 'an embedded newline' "comp.at:41"
( $at_check_trace;
echo 'quit -delete' | comp -editor $abs_top_srcdir/mh/tests/mhed -file ./infile | remove_curdir

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "-- Editor invocation: ./infile
-- Input file:
To:
cc:
Subject:
--------
-- Input file end
What now?
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/comp.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_115
#AT_START_116
at_fn_group_banner 116 'comp.at:55' \
  "comp file" "                                      " 17
at_xfail=no
(
  $as_echo "116. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/comp.at:55:
echo 'quit' | comp -editor \$abs_top_srcdir/mh/tests/mhed file | remove_curdir | sed 's/ *\$//'
sed 's/ *\$//' Mail/file
"
at_fn_check_prepare_notrace 'an embedded newline' "comp.at:55"
( $at_check_trace;
echo 'quit' | comp -editor $abs_top_srcdir/mh/tests/mhed file | remove_curdir | sed 's/ *$//'
sed 's/ *$//' Mail/file

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "-- Editor invocation: Mail/file
-- Input file:
To:
cc:
Subject:
--------
-- Input file end
What now? draft left on \"Mail/file\".
To:
cc:
Subject:
--------
Seen by mhed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/comp.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_116
#AT_START_117
at_fn_group_banner 117 'comp.at:75' \
  "comp -use file" "                                 " 17
at_xfail=no
(
  $as_echo "117. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/comp.at:75:
cat >Mail/file <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF


echo 'quit' | comp -editor \$abs_top_srcdir/mh/tests/mhed -use file | remove_curdir | sed 's/ *\$//'
sed 's/ *\$//' Mail/file
"
at_fn_check_prepare_notrace 'an embedded newline' "comp.at:75"
( $at_check_trace;
cat >Mail/file <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF


echo 'quit' | comp -editor $abs_top_srcdir/mh/tests/mhed -use file | remove_curdir | sed 's/ *$//'
sed 's/ *$//' Mail/file

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "-- Editor invocation: Mail/file
-- Input file:
From: gray
To: root
Subject: test input

message body
-- Input file end
What now? draft left on \"Mail/file\".
From: gray
To: root
Subject: test input

message body
Seen by mhed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/comp.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_117
#AT_START_118
at_fn_group_banner 118 'comp.at:104' \
  "comp +folder msg" "                               " 17
at_xfail=no
(
  $as_echo "118. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/comp.at:104:
mkdir Mail/inbox
cat >Mail/inbox/1 <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF


echo 'quit' | comp -editor \$abs_top_srcdir/mh/tests/mhed +inbox 1 | remove_curdir | sed 's/ *\$//'
echo Mail/draft
sed 's/ *\$//' Mail/draft
echo Message
sed 's/ *\$//' Mail/inbox/1
"
at_fn_check_prepare_notrace 'an embedded newline' "comp.at:104"
( $at_check_trace;
mkdir Mail/inbox
cat >Mail/inbox/1 <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF


echo 'quit' | comp -editor $abs_top_srcdir/mh/tests/mhed +inbox 1 | remove_curdir | sed 's/ *$//'
echo Mail/draft
sed 's/ *$//' Mail/draft
echo Message
sed 's/ *$//' Mail/inbox/1

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "-- Editor invocation: Mail/draft
-- Input file:
From: gray
To: root
Subject: test input

message body
-- Input file end
What now? draft left on \"Mail/draft\".
Mail/draft
From: gray
To: root
Subject: test input

message body
Seen by mhed
Message
From: gray
To: root
Subject: test input

message body
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/comp.at:104"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_118
#AT_START_119
at_fn_group_banner 119 'comp.at:144' \
  "comp -draftfolder" "                              " 17
at_xfail=no
(
  $as_echo "119. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/comp.at:144:
mkdir Mail/drafts
echo 'quit' | comp -editor \$abs_top_srcdir/mh/tests/mhed -draftfolder drafts | remove_curdir | sed 's/ *\$//'
sed 's/ *\$//' Mail/drafts/1
"
at_fn_check_prepare_notrace 'an embedded newline' "comp.at:144"
( $at_check_trace;
mkdir Mail/drafts
echo 'quit' | comp -editor $abs_top_srcdir/mh/tests/mhed -draftfolder drafts | remove_curdir | sed 's/ *$//'
sed 's/ *$//' Mail/drafts/1

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "-- Editor invocation: Mail/drafts/1
-- Input file:
To:
cc:
Subject:
--------
-- Input file end
What now? draft left on \"Mail/drafts/1\".
To:
cc:
Subject:
--------
Seen by mhed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/comp.at:144"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_119
#AT_START_120
at_fn_group_banner 120 'comp.at:165' \
  "comp +draftfolder -use" "                         " 17
at_xfail=no
(
  $as_echo "120. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/comp.at:165:
mkdir Mail/drafts
cat >Mail/drafts/1 <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF

echo \"cur: 1\" > Mail/drafts/.mh_sequences

echo 'quit' | comp -editor \$abs_top_srcdir/mh/tests/mhed -draftfolder drafts -use| remove_curdir | sed 's/ *\$//'
sed 's/ *\$//' Mail/drafts/1
"
at_fn_check_prepare_notrace 'an embedded newline' "comp.at:165"
( $at_check_trace;
mkdir Mail/drafts
cat >Mail/drafts/1 <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF

echo "cur: 1" > Mail/drafts/.mh_sequences

echo 'quit' | comp -editor $abs_top_srcdir/mh/tests/mhed -draftfolder drafts -use| remove_curdir | sed 's/ *$//'
sed 's/ *$//' Mail/drafts/1

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "-- Editor invocation: Mail/drafts/1
-- Input file:
From: gray
To: root
Subject: test input

message body
-- Input file end
What now? draft left on \"Mail/drafts/1\".
From: gray
To: root
Subject: test input

message body
Seen by mhed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/comp.at:165"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_120
#AT_START_121
at_fn_group_banner 121 'forw.at:21' \
  "forw msg" "                                       " 18
at_xfail=no
(
  $as_echo "121. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/forw.at:21:
mkdir Mail/inbox
cat >Mail/inbox/1 <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF


echo quit | forw -editor \$abs_top_srcdir/mh/tests/mhed +inbox 1 | remove_curdir
echo == Mail/draft ==
cat Mail/draft
echo == Message ==
# FIXME: AMD adds this header to the first message.  Find a better way.
# See also the same sed hacks below.
sed '/^X-IMAPbase/d' Mail/inbox/1
"
at_fn_check_prepare_notrace 'an embedded newline' "forw.at:21"
( $at_check_trace;
mkdir Mail/inbox
cat >Mail/inbox/1 <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF


echo quit | forw -editor $abs_top_srcdir/mh/tests/mhed +inbox 1 | remove_curdir
echo == Mail/draft ==
cat Mail/draft
echo == Message ==
# FIXME: AMD adds this header to the first message.  Find a better way.
# See also the same sed hacks below.
sed '/^X-IMAPbase/d' Mail/inbox/1

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "-- Editor invocation: Mail/draft
-- Input file:
To:
cc:
Subject:
--------

------- Forwarded message
From: gray
To: root
Subject: test input

message body

------- End of Forwarded message

-- Input file end
What now? draft left on \"Mail/draft\".
== Mail/draft ==
To:
cc:
Subject:
--------

------- Forwarded message
From: gray
To: root
Subject: test input

message body

------- End of Forwarded message

Seen by mhed
== Message ==
From: gray
To: root
Subject: test input

message body
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/forw.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_121
#AT_START_122
at_fn_group_banner 122 'forw.at:81' \
  "forw -format msg" "                               " 18
at_xfail=no
(
  $as_echo "122. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/forw.at:81:
mkdir Mail/inbox
cat >Mail/inbox/1 <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF


echo quit | forw -editor \$abs_top_srcdir/mh/tests/mhed -format +inbox 1 | remove_curdir
echo == Mail/draft ==
cat Mail/draft
echo == Message ==
# FIXME: AMD adds this header to the first message.  Find a better way.
# See also the same sed hacks below.
sed '/^X-IMAPbase/d' Mail/inbox/1
"
at_fn_check_prepare_notrace 'an embedded newline' "forw.at:81"
( $at_check_trace;
mkdir Mail/inbox
cat >Mail/inbox/1 <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF


echo quit | forw -editor $abs_top_srcdir/mh/tests/mhed -format +inbox 1 | remove_curdir
echo == Mail/draft ==
cat Mail/draft
echo == Message ==
# FIXME: AMD adds this header to the first message.  Find a better way.
# See also the same sed hacks below.
sed '/^X-IMAPbase/d' Mail/inbox/1

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "-- Editor invocation: Mail/draft
-- Input file:
To:
cc:
Subject:
--------

------- Forwarded message
From:    gray
To:      root
Subject: test input

message body

------- End of Forwarded message

-- Input file end
What now? draft left on \"Mail/draft\".
== Mail/draft ==
To:
cc:
Subject:
--------

------- Forwarded message
From:    gray
To:      root
Subject: test input

message body

------- End of Forwarded message

Seen by mhed
== Message ==
From: gray
To: root
Subject: test input

message body
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/forw.at:81"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_122
#AT_START_123
at_fn_group_banner 123 'forw.at:141' \
  "forw msgs" "                                      " 18
at_xfail=no
(
  $as_echo "123. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/forw.at:141:
mkdir Mail/inbox
cat >Mail/inbox/1 <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF

cat >Mail/inbox/2 <<'_ATEOF'
From: gray
To: marlow
Subject: 2nd message

2nd message body
_ATEOF


echo quit | forw -editor \$abs_top_srcdir/mh/tests/mhed +inbox 1 2 | remove_curdir
echo == Mail/draft ==
cat Mail/draft
echo == Message 1 ==
sed '/^X-IMAPbase/d' Mail/inbox/1
echo == Message 2 ==
cat Mail/inbox/2
"
at_fn_check_prepare_notrace 'an embedded newline' "forw.at:141"
( $at_check_trace;
mkdir Mail/inbox
cat >Mail/inbox/1 <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF

cat >Mail/inbox/2 <<'_ATEOF'
From: gray
To: marlow
Subject: 2nd message

2nd message body
_ATEOF


echo quit | forw -editor $abs_top_srcdir/mh/tests/mhed +inbox 1 2 | remove_curdir
echo == Mail/draft ==
cat Mail/draft
echo == Message 1 ==
sed '/^X-IMAPbase/d' Mail/inbox/1
echo == Message 2 ==
cat Mail/inbox/2

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "-- Editor invocation: Mail/draft
-- Input file:
To:
cc:
Subject:
--------

------- Forwarded messages

------- Message 1
From: gray
To: root
Subject: test input

message body

------- Message 2
From: gray
To: marlow
Subject: 2nd message

2nd message body

------- End of Forwarded messages

-- Input file end
What now? draft left on \"Mail/draft\".
== Mail/draft ==
To:
cc:
Subject:
--------

------- Forwarded messages

------- Message 1
From: gray
To: root
Subject: test input

message body

------- Message 2
From: gray
To: marlow
Subject: 2nd message

2nd message body

------- End of Forwarded messages

Seen by mhed
== Message 1 ==
From: gray
To: root
Subject: test input

message body
== Message 2 ==
From: gray
To: marlow
Subject: 2nd message

2nd message body
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/forw.at:141"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_123
#AT_START_124
at_fn_group_banner 124 'forw.at:231' \
  "forw -build msg" "                                " 18
at_xfail=no
(
  $as_echo "124. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/forw.at:231:
mkdir Mail/inbox
cat >Mail/inbox/1 <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF


forw -editor \$abs_top_srcdir/mh/tests/mhed -build +inbox 1 | remove_curdir
echo == Mail/draft ==
cat Mail/draft
echo == Message ==
sed '/^X-IMAPbase/d' Mail/inbox/1
"
at_fn_check_prepare_notrace 'an embedded newline' "forw.at:231"
( $at_check_trace;
mkdir Mail/inbox
cat >Mail/inbox/1 <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF


forw -editor $abs_top_srcdir/mh/tests/mhed -build +inbox 1 | remove_curdir
echo == Mail/draft ==
cat Mail/draft
echo == Message ==
sed '/^X-IMAPbase/d' Mail/inbox/1

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "== Mail/draft ==
To:
cc:
Subject:
--------

------- Forwarded message
From: gray
To: root
Subject: test input

message body

------- End of Forwarded message

== Message ==
From: gray
To: root
Subject: test input

message body
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/forw.at:231"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_124
#AT_START_125
at_fn_group_banner 125 'forw.at:270' \
  "forw -build -mime msgs" "                         " 18
at_xfail=no
(
  $as_echo "125. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/forw.at:270:
mkdir Mail/inbox
cat >Mail/inbox/1 <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF

cat >Mail/inbox/2 <<'_ATEOF'
From: gray
To: marlow
Subject: 2nd message

2nd message body
_ATEOF


forw -editor \$abs_top_srcdir/mh/tests/mhed -build -mime +inbox 1 2 | remove_curdir
echo == Mail/draft ==
remove_curdir Mail/draft
echo == Message 1 ==
sed '/^X-IMAPbase/d' Mail/inbox/1
echo == Message 2 ==
cat Mail/inbox/2
"
at_fn_check_prepare_notrace 'an embedded newline' "forw.at:270"
( $at_check_trace;
mkdir Mail/inbox
cat >Mail/inbox/1 <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF

cat >Mail/inbox/2 <<'_ATEOF'
From: gray
To: marlow
Subject: 2nd message

2nd message body
_ATEOF


forw -editor $abs_top_srcdir/mh/tests/mhed -build -mime +inbox 1 2 | remove_curdir
echo == Mail/draft ==
remove_curdir Mail/draft
echo == Message 1 ==
sed '/^X-IMAPbase/d' Mail/inbox/1
echo == Message 2 ==
cat Mail/inbox/2

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "== Mail/draft ==
To:
cc:
Subject:
--------
#forw [] +Mail/inbox 1 2

== Message 1 ==
From: gray
To: root
Subject: test input

message body
== Message 2 ==
From: gray
To: marlow
Subject: 2nd message

2nd message body
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/forw.at:270"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_125
#AT_START_126
at_fn_group_banner 126 'forw.at:315' \
  "forw -draftfolder" "                              " 18
at_xfail=no
(
  $as_echo "126. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/forw.at:315:
mkdir Mail/inbox
mkdir Mail/drafts
cat >Mail/inbox/1 <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF


echo \"quit\" | forw -editor \$abs_top_srcdir/mh/tests/mhed -draftfolder drafts 1 | remove_curdir
echo == Mail/drafts/1 ==
cat Mail/drafts/1
echo == Message ==
sed '/^X-IMAPbase/d' Mail/inbox/1
"
at_fn_check_prepare_notrace 'an embedded newline' "forw.at:315"
( $at_check_trace;
mkdir Mail/inbox
mkdir Mail/drafts
cat >Mail/inbox/1 <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF


echo "quit" | forw -editor $abs_top_srcdir/mh/tests/mhed -draftfolder drafts 1 | remove_curdir
echo == Mail/drafts/1 ==
cat Mail/drafts/1
echo == Message ==
sed '/^X-IMAPbase/d' Mail/inbox/1

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "-- Editor invocation: Mail/drafts/1
-- Input file:
To:
cc:
Subject:
--------

------- Forwarded message
From: gray
To: root
Subject: test input

message body

------- End of Forwarded message

-- Input file end
What now? draft left on \"Mail/drafts/1\".
== Mail/drafts/1 ==
To:
cc:
Subject:
--------

------- Forwarded message
From: gray
To: root
Subject: test input

message body

------- End of Forwarded message

Seen by mhed
== Message ==
From: gray
To: root
Subject: test input

message body
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/forw.at:315"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_126
#AT_START_127
at_fn_group_banner 127 'forw.at:374' \
  "forw -file" "                                     " 18
at_xfail=no
(
  $as_echo "127. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/forw.at:374:
cat >infile <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF


echo \"quit\" | forw -editor \$abs_top_srcdir/mh/tests/mhed -file infile | remove_curdir
"
at_fn_check_prepare_notrace 'an embedded newline' "forw.at:374"
( $at_check_trace;
cat >infile <<'_ATEOF'
From: gray
To: root
Subject: test input

message body
_ATEOF


echo "quit" | forw -editor $abs_top_srcdir/mh/tests/mhed -file infile | remove_curdir

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "-- Editor invocation: Mail/draft
-- Input file:
To:
cc:
Subject:
--------
From: gray
To: root
Subject: test input

message body
-- Input file end
What now? draft left on \"Mail/draft\".
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/forw.at:374"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_127
#AT_START_128
at_fn_group_banner 128 'repl.at:23' \
  "repl msg" "                                       " 19
at_xfail=no
(
  $as_echo "128. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/repl.at:23:
mkdir Mail/inbox
cat >Mail/inbox/1 <<'_ATEOF'
From: gray@example.com
To: root@example.com
Subject: test input

message body
_ATEOF

echo \"quit\" | repl -editor \$abs_top_srcdir/mh/tests/mhed +inbox 1 | remove_curdir
echo == Mail/draft ==
cat Mail/draft
"
at_fn_check_prepare_notrace 'an embedded newline' "repl.at:23"
( $at_check_trace;
mkdir Mail/inbox
cat >Mail/inbox/1 <<'_ATEOF'
From: gray@example.com
To: root@example.com
Subject: test input

message body
_ATEOF

echo "quit" | repl -editor $abs_top_srcdir/mh/tests/mhed +inbox 1 | remove_curdir
echo == Mail/draft ==
cat Mail/draft

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "-- Editor invocation: Mail/draft
-- Input file:
To: <gray@example.com>
Subject: Re: test input
X-Mailer: MH (GNU Mailutils 2.99.98)
--------
-- Input file end
What now? draft left on \"Mail/draft\".
== Mail/draft ==
To: <gray@example.com>
Subject: Re: test input
X-Mailer: MH (GNU Mailutils 2.99.98)
--------
Seen by mhed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/repl.at:23"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_128
#AT_START_129
at_fn_group_banner 129 'repl.at:52' \
  "repl -draftfolder" "                              " 19
at_xfail=no
(
  $as_echo "129. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/repl.at:52:
mkdir Mail/inbox
mkdir Mail/drafts
cat >Mail/inbox/1 <<'_ATEOF'
From: gray@example.com
To: root@example.com
Subject: test input

message body
_ATEOF

echo \"quit\" | repl -editor \$abs_top_srcdir/mh/tests/mhed -draftfolder drafts +inbox 1 | remove_curdir
echo == Mail/drafts/1 ==
cat Mail/drafts/1
"
at_fn_check_prepare_notrace 'an embedded newline' "repl.at:52"
( $at_check_trace;
mkdir Mail/inbox
mkdir Mail/drafts
cat >Mail/inbox/1 <<'_ATEOF'
From: gray@example.com
To: root@example.com
Subject: test input

message body
_ATEOF

echo "quit" | repl -editor $abs_top_srcdir/mh/tests/mhed -draftfolder drafts +inbox 1 | remove_curdir
echo == Mail/drafts/1 ==
cat Mail/drafts/1

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "-- Editor invocation: Mail/drafts/1
-- Input file:
To: <gray@example.com>
Subject: Re: test input
X-Mailer: MH (GNU Mailutils 2.99.98)
--------
-- Input file end
What now? draft left on \"Mail/drafts/1\".
== Mail/drafts/1 ==
To: <gray@example.com>
Subject: Re: test input
X-Mailer: MH (GNU Mailutils 2.99.98)
--------
Seen by mhed
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/repl.at:52"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_129
#AT_START_130
at_fn_group_banner 130 'mhn.at:24' \
  "mhn -list" "                                      " 20
at_xfail=no
(
  $as_echo "130. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:24:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhn +inbox -list all
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:24"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhn +inbox -list all

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo " msg part type/subtype              size  description
   1      text/plain                 937
   2      text/plain                 215
   3      multipart/mixed             2K
     1    text/plain                 230 How doth
     2    application/octet-stream   462 Father William Part I
   4      multipart/mixed             3K
     1    text/plain                 341 Father William Part I
     2    multipart/mixed             3K
     2.1  application/octet-stream   479 Father William Part II
     2.2  multipart/mixed             2K
     2.2.1 application/octet-stream   483 Father William Part III
     2.2.2 application/octet-stream   495 Father William Part IV
   5      multipart/mixed            355
     1    text/plain                   0 Empty part
     2    text/plain                   1 Single line part
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:24"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_130
#AT_START_131
at_fn_group_banner 131 'mhn.at:47' \
  "mhn -list -realsize" "                            " 20
at_xfail=no
(
  $as_echo "131. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:47:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhn +inbox -list -realsize all
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:47"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhn +inbox -list -realsize all

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo " msg part type/subtype              size  description
   1      text/plain                 937
   2      text/plain                 215
   3      multipart/mixed             2K
     1    text/plain                 230 How doth
     2    application/octet-stream   341 Father William Part I
   4      multipart/mixed             3K
     1    text/plain                 341 Father William Part I
     2    multipart/mixed             3K
     2.1  application/octet-stream   352 Father William Part II
     2.2  multipart/mixed             2K
     2.2.1 application/octet-stream   357 Father William Part III
     2.2.2 application/octet-stream   366 Father William Part IV
   5      multipart/mixed            355
     1    text/plain                   0 Empty part
     2    text/plain                   1 Single line part
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:47"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_131
#AT_START_132
at_fn_group_banner 132 'mhn.at:74' \
  "mhn -store" "                                     " 20
at_xfail=no
(
  $as_echo "132. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:74:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhn +inbox -store 4 || exit \$?
for file in 4.1.plain 4.2.1.octet-stream 4.2.2.1.octet-stream 4.2.2.2.octet-stream
do
  echo == \$file ==
  cat \$file
done
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:74"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhn +inbox -store 4 || exit $?
for file in 4.1.plain 4.2.1.octet-stream 4.2.2.1.octet-stream 4.2.2.2.octet-stream
do
  echo == $file ==
  cat $file
done

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "storing message 4 part 1 as file 4.1.plain
storing message 4 part 2.1 as file 4.2.1.octet-stream
storing message 4 part 2.2.1 as file 4.2.2.1.octet-stream
storing message 4 part 2.2.2 as file 4.2.2.2.octet-stream
== 4.1.plain ==
\`You are old, Father William,' the young man said,
\`And your hair has become very white;
And yet you incessantly stand on your head--
Do you think, at your age, it is right?'

\`In my youth,' Father William replied to his son,
\`I feared it might injure the brain;
But, now that I'm perfectly sure I have none,
Why, I do it again and again.'

== 4.2.1.octet-stream ==
\`You are old,' said the youth, \`as I mentioned before,
And have grown most uncommonly fat;
Yet you turned a back-somersault in at the door--
Pray, what is the reason of that?'

\`In my youth,' said the sage, as he shook his grey locks,
\`I kept all my limbs very supple
By the use of this ointment--one shilling the box--
Allow me to sell you a couple?'
== 4.2.2.1.octet-stream ==
\`You are old,' said the youth, \`and your jaws are too weak
For anything tougher than suet;
Yet you finished the goose, with the bones and the beak--
Pray how did you manage to do it?'

\`In my youth,' said his father, \`I took to the law,
And argued each case with my wife;
And the muscular strength, which it gave to my jaw,
Has lasted the rest of my life.'
== 4.2.2.2.octet-stream ==
\`You are old,' said the youth, \`one would hardly suppose
That your eye was as steady as ever;
Yet you balanced an eel on the end of your nose--
What made you so awfully clever?'

\`I have answered three questions, and that is enough,'
Said his father; \`don't give yourself airs!
Do you think I can listen all day to such stuff?
Be off, or I'll kick you down stairs!'
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:74"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_132
#AT_START_133
at_fn_group_banner 133 'mhn.at:131' \
  "mhn -store -auto" "                               " 20
at_xfail=no
(
  $as_echo "133. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:131:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhn +inbox -store -auto 4 | remove_curdir || exit \$?
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:131"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhn +inbox -store -auto 4 | remove_curdir || exit $?

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "storing message 4 part 1 as file msg.21
storing message 4 part 2.1 as file msg.22
storing message 4 part 2.2.1 as file msg.23
storing message 4 part 2.2.2 as file msg.24
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_133
#AT_START_134
at_fn_group_banner 134 'mhn.at:142' \
  "mhn -store -auto -part" "                         " 20
at_xfail=no
(
  $as_echo "134. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:142:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhn +inbox -store -auto -part 2.2.1 4 | remove_curdir || exit \$?
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:142"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhn +inbox -store -auto -part 2.2.1 4 | remove_curdir || exit $?

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "storing message 4 part 2.2.1 as file msg.23
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:142"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_134
#AT_START_135
at_fn_group_banner 135 'mhn.at:150' \
  "mhn -store -auto (pathname safety)" "             " 20
at_xfail=no
(
  $as_echo "135. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:150:
mkdir Mail/inbox
sed 's|; *name=\"msg|; name=\"../msg|' \\
  \$abs_top_srcdir/testsuite/mh/mbox1/4 > Mail/inbox/4

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhn +inbox -store -auto -part 2.1 4 || echo \$?
echo == 4.2.1.octet-stream ==
cat 4.2.1.octet-stream
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:150"
( $at_check_trace;
mkdir Mail/inbox
sed 's|; *name="msg|; name="../msg|' \
  $abs_top_srcdir/testsuite/mh/mbox1/4 > Mail/inbox/4

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

mhn +inbox -store -auto -part 2.1 4 || echo $?
echo == 4.2.1.octet-stream ==
cat 4.2.1.octet-stream

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "storing message 4 part 2.1 as file 4.2.1.octet-stream
== 4.2.1.octet-stream ==
\`You are old,' said the youth, \`as I mentioned before,
And have grown most uncommonly fat;
Yet you turned a back-somersault in at the door--
Pray, what is the reason of that?'

\`In my youth,' said the sage, as he shook his grey locks,
\`I kept all my limbs very supple
By the use of this ointment--one shilling the box--
Allow me to sell you a couple?'
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:150"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_135
#AT_START_136
at_fn_group_banner 136 'mhn.at:173' \
  "mhn-storage" "                                    " 20
at_xfail=no
(
  $as_echo "136. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:173:
mkdir Mail/inbox
cp \$abs_top_srcdir/testsuite/mh/mbox1/4 Mail/inbox

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x


mkdir out
echo \"mhn-storage: \$HOME/out\" >> \$MH

mhn +inbox -store 4 | remove_curdir || echo \$?
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:173"
( $at_check_trace;
mkdir Mail/inbox
cp $abs_top_srcdir/testsuite/mh/mbox1/4 Mail/inbox

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x


mkdir out
echo "mhn-storage: $HOME/out" >> $MH

mhn +inbox -store 4 | remove_curdir || echo $?

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "storing message 4 part 1 as file out/4.1.plain
storing message 4 part 2.1 as file out/4.2.1.octet-stream
storing message 4 part 2.2.1 as file out/4.2.2.1.octet-stream
storing message 4 part 2.2.2 as file out/4.2.2.2.octet-stream
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:173"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_136
#AT_START_137
at_fn_group_banner 137 'mhn.at:190' \
  "mhn-store-: all escapes" "                        " 20
at_xfail=no
(
  $as_echo "137. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:190:
mkdir Mail/inbox
cp \$abs_top_srcdir/testsuite/mh/mbox1/4 Mail/inbox

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x


echo \"mhn-store-application: %%-%m%P.%s-%p\" >> \$MH
mhn +inbox -store 4 | remove_curdir || exit \$?
find . -name '%*' | sort
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:190"
( $at_check_trace;
mkdir Mail/inbox
cp $abs_top_srcdir/testsuite/mh/mbox1/4 Mail/inbox

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x


echo "mhn-store-application: %%-%m%P.%s-%p" >> $MH
mhn +inbox -store 4 | remove_curdir || exit $?
find . -name '%*' | sort

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "storing message 4 part 1 as file 4.1.plain
storing message 4 part 2.1 as file %4.2.1.octet-stream-2.1
storing message 4 part 2.2.1 as file %4.2.2.1.octet-stream-2.2.1
storing message 4 part 2.2.2 as file %4.2.2.2.octet-stream-2.2.2
./%4.2.1.octet-stream-2.1
./%4.2.2.1.octet-stream-2.2.1
./%4.2.2.2.octet-stream-2.2.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:190"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_137
#AT_START_138
at_fn_group_banner 138 'mhn.at:209' \
  "mhn-store-: absolute path" "                      " 20
at_xfail=no
(
  $as_echo "138. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:209:
mkdir Mail/inbox
mkdir out
cp \$abs_top_srcdir/testsuite/mh/mbox1/4 Mail/inbox

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x


echo \"mhn-store-application: \$HOME/out/%m%P.%s\" >> \$MH
mhn +inbox -store 4 | remove_curdir || exit \$?
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:209"
( $at_check_trace;
mkdir Mail/inbox
mkdir out
cp $abs_top_srcdir/testsuite/mh/mbox1/4 Mail/inbox

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x


echo "mhn-store-application: $HOME/out/%m%P.%s" >> $MH
mhn +inbox -store 4 | remove_curdir || exit $?

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "storing message 4 part 1 as file 4.1.plain
storing message 4 part 2.1 as file out/4.2.1.octet-stream
storing message 4 part 2.2.1 as file out/4.2.2.1.octet-stream
storing message 4 part 2.2.2 as file out/4.2.2.2.octet-stream
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:209"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_138
#AT_START_139
at_fn_group_banner 139 'mhn.at:225' \
  "mhn-store-: +folder" "                            " 20
at_xfail=no
(
  $as_echo "139. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:225:
mkdir Mail/inbox
mkdir Mail/app
cp \$abs_top_srcdir/testsuite/mh/mbox1/4 Mail/inbox

# First, set all modes to 700
find Mail | xargs chmod 700
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x


echo \"mhn-store-application: +app\" >> \$MH
mhn +inbox -store 4 | remove_curdir || exit \$?
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:225"
( $at_check_trace;
mkdir Mail/inbox
mkdir Mail/app
cp $abs_top_srcdir/testsuite/mh/mbox1/4 Mail/inbox

# First, set all modes to 700
find Mail | xargs chmod 700
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x


echo "mhn-store-application: +app" >> $MH
mhn +inbox -store 4 | remove_curdir || exit $?

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "storing message 4 part 1 as file 4.1.plain
storing message 4 part 2.1 to folder +app as message 1
storing message 4 part 2.2.1 to folder +app as message 2
storing message 4 part 2.2.2 to folder +app as message 3
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:225"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_139
#AT_START_140
at_fn_group_banner 140 'mhn.at:241' \
  "mhn-store-: +" "                                  " 20
at_xfail=no
(
  $as_echo "140. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:241:
mkdir Mail/inbox
cp \$abs_top_srcdir/testsuite/mh/mbox1/4 Mail/inbox

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x


echo \"Current-Folder: inbox\" > Mail/context
cat >> \$MH <<EOT
mhn-store-application/octet-stream: +
EOT
mhn +inbox -store -part 2.2.1 4 | remove_curdir || exit \$?
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:241"
( $at_check_trace;
mkdir Mail/inbox
cp $abs_top_srcdir/testsuite/mh/mbox1/4 Mail/inbox

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x


echo "Current-Folder: inbox" > Mail/context
cat >> $MH <<EOT
mhn-store-application/octet-stream: +
EOT
mhn +inbox -store -part 2.2.1 4 | remove_curdir || exit $?

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "storing message 4 part 2.2.1 to folder inbox as message 5
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:241"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_140
#AT_START_141
at_fn_group_banner 141 'mhn.at:256' \
  "mhn-store-: pipe" "                               " 20
at_xfail=no
(
  $as_echo "141. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:256:
mkdir Mail/inbox
cp \$abs_top_srcdir/testsuite/mh/mbox1/4 Mail/inbox

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x


echo \"Current-Folder: inbox\" > Mail/context
echo \"mhn-store-text: | \$abs_top_srcdir/mh/tests/mhed -\" >> \$MH
mhn +inbox -store -part 1 4 | sed \"s|\$abs_top_srcdir/mh/tests/||g;s|(cd \\(.*\\)\\;|(cd home\\;|;s|  *\$||\" || exit \$?
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:256"
( $at_check_trace;
mkdir Mail/inbox
cp $abs_top_srcdir/testsuite/mh/mbox1/4 Mail/inbox

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x


echo "Current-Folder: inbox" > Mail/context
echo "mhn-store-text: | $abs_top_srcdir/mh/tests/mhed -" >> $MH
mhn +inbox -store -part 1 4 | sed "s|$abs_top_srcdir/mh/tests/||g;s|(cd \(.*\)\;|(cd home\;|;s|  *$||" || exit $?

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "-- Editor invocation: -
-- Input file:
\`You are old, Father William,' the young man said,
\`And your hair has become very white;
And yet you incessantly stand on your head--
Do you think, at your age, it is right?'

\`In my youth,' Father William replied to his son,
\`I feared it might injure the brain;
But, now that I'm perfectly sure I have none,
Why, I do it again and again.'

-- Input file end
storing msg 4 part 1 using command (cd home; mhed -)
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:256"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_141
#AT_START_142
at_fn_group_banner 142 'mhn.at:287' \
  "mhn-show msg1" "                                  " 20
at_xfail=no
(
  $as_echo "142. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:287:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhn -show 1 | sed /^X-IMAPbase/d
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:287"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhn -show 1 | sed /^X-IMAPbase/d

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Date:    Fri, 28 Dec 2001 22:18:08 +0200
To:      Bar <bar@dontmailme.org>
From:    Foo Bar <foobar@nonexistent.net>
Subject: Jabberwocky

X-Envelope-Date: Fri Dec 28 22:18:09 2001
X-Envelope-Sender: foobar@nonexistent.net

part       text/plain               937
\`Twas brillig, and the slithy toves
Did gyre and gimble in the wabe;
All mimsy were the borogoves,
And the mome raths outgrabe.

\`Beware the Jabberwock, my son!
The jaws that bite, the claws that catch!
Beware the Jujub bird, and shun
The frumious Bandersnatch!'

He took his vorpal sword in hand:
Long time the manxome foe he sought --
So rested he by the Tumtum gree,
And stood awhile in thought.

And as in uffish thought he stood,
The Jabberwock, with eyes of flame,
Came whiffling through the tulgey wook,
And burbled as it came!

One, two!  One, two!  And through and through
The vorpal blade went snicker-snack!
He left it dead, and with its head
He went galumphing back.

\`And has thou slain the Jabberwock?
Come to my arms, my beamish boy!
O frabjous day!  Calloh!  Callay!
He chortled in his joy.

\`Twas brillig, and the slithy toves
Did gyre and gimble in the wabe;
All mimsy were the borogoves,
And the mome raths outgrabe.

" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:287"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_142
#AT_START_143
at_fn_group_banner 143 'mhn.at:338' \
  "mhn-show type=tar" "                              " 20
at_xfail=no
(
  $as_echo "143. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:338:




cp -r \$abs_top_srcdir/testsuite/mh/mime Mail/inbox
if test -e Mail/inbox/mime; then

# First, set all modes to 700
find Mail/inbox/mime | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mime -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



cat >filter.awk <<'_ATEOF'

/^X-IMAPbase/ { next }
/^-rw-r--r--/ { print \$NF; next }
{ print }
_ATEOF

mhn -show 2 | awk -f filter.awk
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:338"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mime Mail/inbox
if test -e Mail/inbox/mime; then

# First, set all modes to 700
find Mail/inbox/mime | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mime -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



cat >filter.awk <<'_ATEOF'

/^X-IMAPbase/ { next }
/^-rw-r--r--/ { print $NF; next }
{ print }
_ATEOF

mhn -show 2 | awk -f filter.awk

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Date:    Mon, 29 Nov 2010 14:04:19 +0200
To:      <gray@example.net>
From:    Sergey Poznyakoff <gray@example.net>
Subject: Verses (type=tar)

MIME-Version: 1.0
X-Envelope-Date: Mon Nov 29 14:04:19 2010
X-Envelope-Sender: gray@example.net

part     1 text/plain               15
Initial text.

Father_William
Jabberwocky
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:338"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_143
#AT_START_144
at_fn_group_banner 144 'mhn.at:366' \
  "mhn-show unsupported type" "                      " 20
at_xfail=no
(
  $as_echo "144. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:366:




cp -r \$abs_top_srcdir/testsuite/mh/mime Mail/inbox
if test -e Mail/inbox/mime; then

# First, set all modes to 700
find Mail/inbox/mime | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mime -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhn -show 1 | sed /^X-IMAPbase/d
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:366"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mime Mail/inbox
if test -e Mail/inbox/mime; then

# First, set all modes to 700
find Mail/inbox/mime | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mime -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



mhn -show 1 | sed /^X-IMAPbase/d

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "mhn: don't know how to display content (content application/x-tar in message 1, part 2)
" | \
  $at_diff - "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Date:    Mon, 29 Nov 2010 14:00:03 +0200
To:      <gray@example.net>
From:    Sergey Poznyakoff <gray@example.net>
Subject: Verses (x-tar)

MIME-Version: 1.0
X-Envelope-Date: Mon Nov 29 14:00:03 2010
X-Envelope-Sender: gray@example.net

part     1 text/plain               15
Initial text.

" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:366"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_144
#AT_START_145
at_fn_group_banner 145 'mhn.at:387' \
  "mhn-show- variable (with subtype)" "              " 20
at_xfail=no
(
  $as_echo "145. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:387:




cp -r \$abs_top_srcdir/testsuite/mh/mime Mail/inbox
if test -e Mail/inbox/mime; then

# First, set all modes to 700
find Mail/inbox/mime | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mime -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"mhn-show-application/x-tar: %ltar tvf '%F'\" >> \$MH
cat >filter.awk <<'_ATEOF'

/^X-IMAPbase/ { next }
/^-rw-r--r--/ { print \$NF; next }
{ sub(/  *\$/,\"\");  print }
_ATEOF

mhn -show 1 | awk -f filter.awk
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:387"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mime Mail/inbox
if test -e Mail/inbox/mime; then

# First, set all modes to 700
find Mail/inbox/mime | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mime -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "mhn-show-application/x-tar: %ltar tvf '%F'" >> $MH
cat >filter.awk <<'_ATEOF'

/^X-IMAPbase/ { next }
/^-rw-r--r--/ { print $NF; next }
{ sub(/  *$/,"");  print }
_ATEOF

mhn -show 1 | awk -f filter.awk

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Date:    Mon, 29 Nov 2010 14:00:03 +0200
To:      <gray@example.net>
From:    Sergey Poznyakoff <gray@example.net>
Subject: Verses (x-tar)

MIME-Version: 1.0
X-Envelope-Date: Mon Nov 29 14:00:03 2010
X-Envelope-Sender: gray@example.net

part     1 text/plain               15
Initial text.

part     2 application/x-tar        13835
Father_William
Jabberwocky
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:387"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_145
#AT_START_146
at_fn_group_banner 146 'mhn.at:416' \
  "mhn-show- variable (without subtype)" "           " 20
at_xfail=no
(
  $as_echo "146. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:416:




cp -r \$abs_top_srcdir/testsuite/mh/mime Mail/inbox
if test -e Mail/inbox/mime; then

# First, set all modes to 700
find Mail/inbox/mime | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mime -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"mhn-show-application: %ltar tvf '%F'\" >> \$MH
cat >filter.awk <<'_ATEOF'

/^X-IMAPbase/ { next }
/^-rw-r--r--/ { print \$NF; next }
{ sub(/  *\$/,\"\");  print }
_ATEOF

mhn -show 1 | awk -f filter.awk
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:416"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mime Mail/inbox
if test -e Mail/inbox/mime; then

# First, set all modes to 700
find Mail/inbox/mime | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mime -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "mhn-show-application: %ltar tvf '%F'" >> $MH
cat >filter.awk <<'_ATEOF'

/^X-IMAPbase/ { next }
/^-rw-r--r--/ { print $NF; next }
{ sub(/  *$/,"");  print }
_ATEOF

mhn -show 1 | awk -f filter.awk

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "Date:    Mon, 29 Nov 2010 14:00:03 +0200
To:      <gray@example.net>
From:    Sergey Poznyakoff <gray@example.net>
Subject: Verses (x-tar)

MIME-Version: 1.0
X-Envelope-Date: Mon Nov 29 14:00:03 2010
X-Envelope-Sender: gray@example.net

part     1 text/plain               15
Initial text.

part     2 application/x-tar        13835
Father_William
Jabberwocky
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:416"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_146
#AT_START_147
at_fn_group_banner 147 'mhn.at:448' \
  "mhn-compose: adjacent plain text" "               " 20
at_xfail=no
(
  $as_echo "147. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:448:
cat >input <<'_ATEOF'
From: gray@example.net
Subject: Adjacent plain text contexts
------
this is the first content
#
and this is the second
_ATEOF

mhn -build ./input || exit \$?
mimeflt input
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:448"
( $at_check_trace;
cat >input <<'_ATEOF'
From: gray@example.net
Subject: Adjacent plain text contexts
------
this is the first content
#
and this is the second
_ATEOF

mhn -build ./input || exit $?
mimeflt input

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "From: gray@example.net
Subject: Adjacent plain text contexts
Content-Type: multipart/mixed; boundary=\"BOUNDARY-1\"
MIME-Version: 1.0

--BOUNDARY-1
Content-ID: 1
Content-Type: text/plain

this is the first content

--BOUNDARY-1
Content-ID: 2
Content-Type: text/plain

and this is the second

--BOUNDARY-1--
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:448"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_147
#AT_START_148
at_fn_group_banner 148 'mhn.at:482' \
  "mhn-compose: plain text content types" "          " 20
at_xfail=no
(
  $as_echo "148. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:482:
cat >input <<'_ATEOF'
From: gray@example.net
Subject: Plaintext content types
------
#<text/enriched [First part]
this content will be tagged as text/enriched
#
and this content will be tagged as text/plain
#
#<application/x-patch [this is a patch]
and this content will be tagged as application/x-patch
_ATEOF

mhn -build -file ./input||exit \$?
mimeflt input
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:482"
( $at_check_trace;
cat >input <<'_ATEOF'
From: gray@example.net
Subject: Plaintext content types
------
#<text/enriched [First part]
this content will be tagged as text/enriched
#
and this content will be tagged as text/plain
#
#<application/x-patch [this is a patch]
and this content will be tagged as application/x-patch
_ATEOF

mhn -build -file ./input||exit $?
mimeflt input

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "From: gray@example.net
Subject: Plaintext content types
Content-Type: multipart/mixed; boundary=\"BOUNDARY-1\"
MIME-Version: 1.0

--BOUNDARY-1
Content-Description: First part
Content-ID: 1
Content-Type: text/enriched

this content will be tagged as text/enriched

--BOUNDARY-1
Content-ID: 2
Content-Type: text/plain

and this content will be tagged as text/plain

--BOUNDARY-1
Content-Description: this is a patch
Content-ID: 3
Content-Type: application/x-patch

and this content will be tagged as application/x-patch

--BOUNDARY-1--
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:482"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_148
#AT_START_149
at_fn_group_banner 149 'mhn.at:528' \
  "mhn-compose: sharp at the beginning of a line" "  " 20
at_xfail=no
(
  $as_echo "149. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:528:
cat >input <<'_ATEOF'
From: gray@example.net
Subject: Sharp at the beginning of a line
------
##when sent, this line will start with only one #
_ATEOF


mhn -build ./input || exit \$?
mimeflt input
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:528"
( $at_check_trace;
cat >input <<'_ATEOF'
From: gray@example.net
Subject: Sharp at the beginning of a line
------
##when sent, this line will start with only one #
_ATEOF


mhn -build ./input || exit $?
mimeflt input

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "From: gray@example.net
Subject: Sharp at the beginning of a line
Content-Type: text/plain
MIME-Version: 1.0

#when sent, this line will start with only one #

" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:528"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_149
#AT_START_150
at_fn_group_banner 150 'mhn.at:550' \
  "mhn-compose: charset" "                           " 20
at_xfail=no
(
  $as_echo "150. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:550:
cat >input <<'_ATEOF'
From: gray@example.net
Subject: Charset
------
#<text/plain; charset=utf-8
Cześć
_ATEOF

mhn -build ./input || exit \$?
mimeflt input
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:550"
( $at_check_trace;
cat >input <<'_ATEOF'
From: gray@example.net
Subject: Charset
------
#<text/plain; charset=utf-8
Cześć
_ATEOF

mhn -build ./input || exit $?
mimeflt input

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "From: gray@example.net
Subject: Charset
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain; charset=utf-8
MIME-Version: 1.0

Cze=C5=9B=C4=87

" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:550"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_150
#AT_START_151
at_fn_group_banner 151 'mhn.at:573' \
  "mhn-compose: forward" "                           " 20
at_xfail=no
(
  $as_echo "151. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:573:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



cat >input <<'_ATEOF'
From: gray@example.net
Subject: Forwards
------
#forw [forwarded messages] +inbox 1 2 5
_ATEOF


mhn -build ./input || exit \$?
mimeflt input
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:573"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



cat >input <<'_ATEOF'
From: gray@example.net
Subject: Forwards
------
#forw [forwarded messages] +inbox 1 2 5
_ATEOF


mhn -build ./input || exit $?
mimeflt input

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "From: gray@example.net
Subject: Forwards
Content-Description: forwarded messages
Content-Type: multipart/digest; boundary=\"BOUNDARY-1\"
MIME-Version: 1.0

--BOUNDARY-1
Content-Type: message/rfc822

Received: (from foobar@nonexistent.net)
	by nonexistent.net id fBSKI8N04906
	for bar@dontmailme.org; Fri, 28 Dec 2001 22:18:08 +0200
Date: Fri, 28 Dec 2001 22:18:08 +0200
From: Foo Bar <foobar@nonexistent.net>
Message-Id: <200112282018.fBSKI8N04906@nonexistent.net>
To: Bar <bar@dontmailme.org>
Subject: Jabberwocky
X-Envelope-Date: Fri Dec 28 22:18:09 2001
X-Envelope-Sender: foobar@nonexistent.net

\`Twas brillig, and the slithy toves
Did gyre and gimble in the wabe;
All mimsy were the borogoves,
And the mome raths outgrabe.

\`Beware the Jabberwock, my son!
The jaws that bite, the claws that catch!
Beware the Jujub bird, and shun
The frumious Bandersnatch!'

He took his vorpal sword in hand:
Long time the manxome foe he sought --
So rested he by the Tumtum gree,
And stood awhile in thought.

And as in uffish thought he stood,
The Jabberwock, with eyes of flame,
Came whiffling through the tulgey wook,
And burbled as it came!

One, two!  One, two!  And through and through
The vorpal blade went snicker-snack!
He left it dead, and with its head
He went galumphing back.

\`And has thou slain the Jabberwock?
Come to my arms, my beamish boy!
O frabjous day!  Calloh!  Callay!
He chortled in his joy.

\`Twas brillig, and the slithy toves
Did gyre and gimble in the wabe;
All mimsy were the borogoves,
And the mome raths outgrabe.


--BOUNDARY-1
Content-Type: message/rfc822

Received: (from bar@dontmailme.org)
	by dontmailme.org id fERKR9N16790
	for foobar@nonexistent.net; Fri, 28 Dec 2001 22:18:08 +0200
Date: Fri, 28 Dec 2001 23:28:08 +0200
From: Bar <bar@dontmailme.org>
To: Foo Bar <foobar@nonexistent.net>
Message-Id: <200112232808.fERKR9N16790@dontmailme.org>
Subject: Re: Jabberwocky
X-Envelope-Date: Fri Dec 28 23:28:09 2001
X-Envelope-Sender: bar@dontmailme.org

It seems very pretty, but it's *rather* hard to understand!'
Somehow it seems to fill my head with ideas -- only I don't
exactly know what they are!  However, SOMEBODY killed SOMETHING:
that's clear, at any rate...

--BOUNDARY-1
Content-Type: message/rfc822

Organization: Mailutils-tests
Received: from example.net (localhost [127.0.0.1])
	by example.net with ESMTP id g6CLhIb05086
	for <gray@example.net>; Sat, 13 Jul 2002 00:43:18 +0300
Message-Id: <200207122143.g6CLhIb05086@example.net>
To: Foo Bar <foobar@nonexistent.net>
Subject: Empty MIME Parts
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary=\"BOUNDARY-2\"
Content-ID: 1
Date: Sat, 13 Jul 2002 00:43:18 +0300
From: Sergey Poznyakoff <gray@example.net>
X-Envelope-Date: Sat Jul 13 00:43:18 2002
X-Envelope-Sender: gray@example.net

--BOUNDARY-2
Content-Type: text/plain; name=\"empty\"; charset=\"us-ascii\"
Content-ID: 2
Content-Description: Empty part


--BOUNDARY-2
Content-Type: text/plain; name=\"single.line\"; charset=\"us-ascii\"
Content-ID: 3
Content-Description: Single line part



--BOUNDARY-2--

--BOUNDARY-1--

" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:573"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_151
#AT_START_152
at_fn_group_banner 152 'mhn.at:699' \
  "mhn-compose: forward (current folder)" "          " 20
at_xfail=no
(
  $as_echo "152. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:699:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo \"Current-Folder: inbox\" > Mail/context
cat >input <<'_ATEOF'
From: gray@example.net
Subject: Forwards
------
#forw [forwarded messages] 1 2 5
_ATEOF


mhn -build ./input || exit \$?
mimeflt input
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:699"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to +w
find Mail/inbox/mbox1 | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail/inbox | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



echo "Current-Folder: inbox" > Mail/context
cat >input <<'_ATEOF'
From: gray@example.net
Subject: Forwards
------
#forw [forwarded messages] 1 2 5
_ATEOF


mhn -build ./input || exit $?
mimeflt input

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "From: gray@example.net
Subject: Forwards
Content-Description: forwarded messages
Content-Type: multipart/digest; boundary=\"BOUNDARY-1\"
MIME-Version: 1.0

--BOUNDARY-1
Content-Type: message/rfc822

Received: (from foobar@nonexistent.net)
	by nonexistent.net id fBSKI8N04906
	for bar@dontmailme.org; Fri, 28 Dec 2001 22:18:08 +0200
Date: Fri, 28 Dec 2001 22:18:08 +0200
From: Foo Bar <foobar@nonexistent.net>
Message-Id: <200112282018.fBSKI8N04906@nonexistent.net>
To: Bar <bar@dontmailme.org>
Subject: Jabberwocky
X-Envelope-Date: Fri Dec 28 22:18:09 2001
X-Envelope-Sender: foobar@nonexistent.net

\`Twas brillig, and the slithy toves
Did gyre and gimble in the wabe;
All mimsy were the borogoves,
And the mome raths outgrabe.

\`Beware the Jabberwock, my son!
The jaws that bite, the claws that catch!
Beware the Jujub bird, and shun
The frumious Bandersnatch!'

He took his vorpal sword in hand:
Long time the manxome foe he sought --
So rested he by the Tumtum gree,
And stood awhile in thought.

And as in uffish thought he stood,
The Jabberwock, with eyes of flame,
Came whiffling through the tulgey wook,
And burbled as it came!

One, two!  One, two!  And through and through
The vorpal blade went snicker-snack!
He left it dead, and with its head
He went galumphing back.

\`And has thou slain the Jabberwock?
Come to my arms, my beamish boy!
O frabjous day!  Calloh!  Callay!
He chortled in his joy.

\`Twas brillig, and the slithy toves
Did gyre and gimble in the wabe;
All mimsy were the borogoves,
And the mome raths outgrabe.


--BOUNDARY-1
Content-Type: message/rfc822

Received: (from bar@dontmailme.org)
	by dontmailme.org id fERKR9N16790
	for foobar@nonexistent.net; Fri, 28 Dec 2001 22:18:08 +0200
Date: Fri, 28 Dec 2001 23:28:08 +0200
From: Bar <bar@dontmailme.org>
To: Foo Bar <foobar@nonexistent.net>
Message-Id: <200112232808.fERKR9N16790@dontmailme.org>
Subject: Re: Jabberwocky
X-Envelope-Date: Fri Dec 28 23:28:09 2001
X-Envelope-Sender: bar@dontmailme.org

It seems very pretty, but it's *rather* hard to understand!'
Somehow it seems to fill my head with ideas -- only I don't
exactly know what they are!  However, SOMEBODY killed SOMETHING:
that's clear, at any rate...

--BOUNDARY-1
Content-Type: message/rfc822

Organization: Mailutils-tests
Received: from example.net (localhost [127.0.0.1])
	by example.net with ESMTP id g6CLhIb05086
	for <gray@example.net>; Sat, 13 Jul 2002 00:43:18 +0300
Message-Id: <200207122143.g6CLhIb05086@example.net>
To: Foo Bar <foobar@nonexistent.net>
Subject: Empty MIME Parts
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary=\"BOUNDARY-2\"
Content-ID: 1
Date: Sat, 13 Jul 2002 00:43:18 +0300
From: Sergey Poznyakoff <gray@example.net>
X-Envelope-Date: Sat Jul 13 00:43:18 2002
X-Envelope-Sender: gray@example.net

--BOUNDARY-2
Content-Type: text/plain; name=\"empty\"; charset=\"us-ascii\"
Content-ID: 2
Content-Description: Empty part


--BOUNDARY-2
Content-Type: text/plain; name=\"single.line\"; charset=\"us-ascii\"
Content-ID: 3
Content-Description: Single line part



--BOUNDARY-2--

--BOUNDARY-1--

" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:699"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_152
#AT_START_153
at_fn_group_banner 153 'mhn.at:826' \
  "mhn-compose: forward (single message)" "          " 20
at_xfail=no
(
  $as_echo "153. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:826:




cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



cat >input <<'_ATEOF'
From: gray@example.net
Subject: Forwards
------
#forw [forwarded messages] +inbox 1
_ATEOF


mhn -build ./input || exit \$?
mimeflt input
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:826"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail/inbox
if test -e Mail/inbox/mbox1; then

# First, set all modes to 700
find Mail/inbox/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail/inbox | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/inbox -type f | xargs chmod -x

fi



cat >input <<'_ATEOF'
From: gray@example.net
Subject: Forwards
------
#forw [forwarded messages] +inbox 1
_ATEOF


mhn -build ./input || exit $?
mimeflt input

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "From: gray@example.net
Subject: Forwards
Content-Description: forwarded messages
Content-Type: message/rfc822
MIME-Version: 1.0

Received: (from foobar@nonexistent.net)
	by nonexistent.net id fBSKI8N04906
	for bar@dontmailme.org; Fri, 28 Dec 2001 22:18:08 +0200
Date: Fri, 28 Dec 2001 22:18:08 +0200
From: Foo Bar <foobar@nonexistent.net>
Message-Id: <200112282018.fBSKI8N04906@nonexistent.net>
To: Bar <bar@dontmailme.org>
Subject: Jabberwocky
X-Envelope-Date: Fri Dec 28 22:18:09 2001
X-Envelope-Sender: foobar@nonexistent.net

\`Twas brillig, and the slithy toves
Did gyre and gimble in the wabe;
All mimsy were the borogoves,
And the mome raths outgrabe.

\`Beware the Jabberwock, my son!
The jaws that bite, the claws that catch!
Beware the Jujub bird, and shun
The frumious Bandersnatch!'

He took his vorpal sword in hand:
Long time the manxome foe he sought --
So rested he by the Tumtum gree,
And stood awhile in thought.

And as in uffish thought he stood,
The Jabberwock, with eyes of flame,
Came whiffling through the tulgey wook,
And burbled as it came!

One, two!  One, two!  And through and through
The vorpal blade went snicker-snack!
He left it dead, and with its head
He went galumphing back.

\`And has thou slain the Jabberwock?
Come to my arms, my beamish boy!
O frabjous day!  Calloh!  Callay!
He chortled in his joy.

\`Twas brillig, and the slithy toves
Did gyre and gimble in the wabe;
All mimsy were the borogoves,
And the mome raths outgrabe.



" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:826"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_153
#AT_START_154
at_fn_group_banner 154 'mhn.at:896' \
  "mhn-compose: external data" "                     " 20
at_xfail=no
(
  $as_echo "154. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:896:
cat >input <<'_ATEOF'
From: gray@example.net
Subject: External data
------
#@application/octet-stream; \\
                type=tar; \\
                conversions=compress \\
	        [GNU Mailutils distribution] \\
                name=\"mailutils-3.0.tar.gz\"; \\
                directory=\"/gnu/mailutils\"; \\
                site=\"ftp.gnu.org\"; \\
                access-type=anon-ftp; \\
                mode=\"image\"
_ATEOF

mhn -build ./input || exit \$?
mimeflt input
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:896"
( $at_check_trace;
cat >input <<'_ATEOF'
From: gray@example.net
Subject: External data
------
#@application/octet-stream; \
                type=tar; \
                conversions=compress \
	        [GNU Mailutils distribution] \
                name="mailutils-3.0.tar.gz"; \
                directory="/gnu/mailutils"; \
                site="ftp.gnu.org"; \
                access-type=anon-ftp; \
                mode="image"
_ATEOF

mhn -build ./input || exit $?
mimeflt input

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "From: gray@example.net
Subject: External data
Content-Type: message/external-body; name=\"mailutils-3.0.tar.gz\"; directory=\"/gnu/mailutils\"; site=\"ftp.gnu.org\"; access-type=anon-ftp; mode=\"image\"
MIME-Version: 1.0

Content-Description: GNU Mailutils distribution
Content-ID: 1
Content-Type: application/octet-stream; type=tar; conversions=compress


" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:896"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_154
#AT_START_155
at_fn_group_banner 155 'mhn.at:929' \
  "mhn-compose: multipart" "                         " 20
at_xfail=no
(
  $as_echo "155. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/mhn.at:929:





cp -r \$abs_top_srcdir/testsuite/mh/mbox1 Mail
if test -e Mail/mbox1; then

# First, set all modes to 700
find Mail/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail | xargs chmod 700
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi




cat >foo.tar <<'_ATEOF'
Not a tarball, really
_ATEOF


cat >input <<'_ATEOF'
From: gray@example.net
Subject: Multipart
------
Initial text part.

#begin [Multipart message] mixed
#forw [forwarded message] +mbox1 1
Plain text 1
#<text/x-special
Plain text 2
#application/octet-stream; type=tar [Tar archive] ./foo.tar
#end
_ATEOF


mhn -build ./input || exit \$?
mimeflt input
"
at_fn_check_prepare_notrace 'an embedded newline' "mhn.at:929"
( $at_check_trace;





cp -r $abs_top_srcdir/testsuite/mh/mbox1 Mail
if test -e Mail/mbox1; then

# First, set all modes to 700
find Mail/mbox1 | xargs chmod 700
# Then, remove executable bit from regular files
find Mail/mbox1 -type f | xargs chmod -x

else

# First, set all modes to 700
find Mail | xargs chmod 700
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi




cat >foo.tar <<'_ATEOF'
Not a tarball, really
_ATEOF


cat >input <<'_ATEOF'
From: gray@example.net
Subject: Multipart
------
Initial text part.

#begin [Multipart message] mixed
#forw [forwarded message] +mbox1 1
Plain text 1
#<text/x-special
Plain text 2
#application/octet-stream; type=tar [Tar archive] ./foo.tar
#end
_ATEOF


mhn -build ./input || exit $?
mimeflt input

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "From: gray@example.net
Subject: Multipart
Content-Type: multipart/mixed; boundary=\"BOUNDARY-1\"
MIME-Version: 1.0

--BOUNDARY-1
Content-ID: 1
Content-Type: text/plain

Initial text part.


--BOUNDARY-1
Content-Type: multipart/mixed; boundary=\"BOUNDARY-2\"
MIME-Version: 1.0

--BOUNDARY-2
Content-Description: forwarded message
Content-ID: 2
Content-Type: message/rfc822
MIME-Version: 1.0

Received: (from foobar@nonexistent.net)
	by nonexistent.net id fBSKI8N04906
	for bar@dontmailme.org; Fri, 28 Dec 2001 22:18:08 +0200
Date: Fri, 28 Dec 2001 22:18:08 +0200
From: Foo Bar <foobar@nonexistent.net>
Message-Id: <200112282018.fBSKI8N04906@nonexistent.net>
To: Bar <bar@dontmailme.org>
Subject: Jabberwocky
X-Envelope-Date: Fri Dec 28 22:18:09 2001
X-Envelope-Sender: foobar@nonexistent.net

\`Twas brillig, and the slithy toves
Did gyre and gimble in the wabe;
All mimsy were the borogoves,
And the mome raths outgrabe.

\`Beware the Jabberwock, my son!
The jaws that bite, the claws that catch!
Beware the Jujub bird, and shun
The frumious Bandersnatch!'

He took his vorpal sword in hand:
Long time the manxome foe he sought --
So rested he by the Tumtum gree,
And stood awhile in thought.

And as in uffish thought he stood,
The Jabberwock, with eyes of flame,
Came whiffling through the tulgey wook,
And burbled as it came!

One, two!  One, two!  And through and through
The vorpal blade went snicker-snack!
He left it dead, and with its head
He went galumphing back.

\`And has thou slain the Jabberwock?
Come to my arms, my beamish boy!
O frabjous day!  Calloh!  Callay!
He chortled in his joy.

\`Twas brillig, and the slithy toves
Did gyre and gimble in the wabe;
All mimsy were the borogoves,
And the mome raths outgrabe.



--BOUNDARY-2
Content-ID: 3
Content-Type: text/plain

Plain text 1

--BOUNDARY-2
Content-ID: 4
Content-Type: text/x-special

Plain text 2

--BOUNDARY-2
Content-Transfer-Encoding: base64
Content-Description: Tar archive
Content-ID: 5
Content-Type: application/octet-stream; type=tar

Tm90IGEgdGFyYmFsbCwgcmVhbGx5Cg==
--BOUNDARY-2--

--BOUNDARY-1--
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/mhn.at:929"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_155
#AT_START_156
at_fn_group_banner 156 'send.at:21' \
  "send file" "                                      " 21
at_xfail=no
(
  $as_echo "156. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/send.at:21:

cat > \$MTSTAILOR <<EOT
localname: darkstar
localdomain: example.net
username: mhtester
url: sendmail://\$abs_top_builddir/examples/mta
EOT

MTA_DIAG=\$HOME/mta.diag
export MTA_DIAG
MTA_DOMAIN=example.net
export MTA_DOMAIN

cat >input <<'_ATEOF'
From: mhtester@example.net
To: gray@example.net
Subject: Send file test
------
Message body
_ATEOF

send ./input || exit \$?
sed 's/: Date: .*/: Date: now/' \$MTA_DIAG
find . -name ,input
"
at_fn_check_prepare_notrace 'an embedded newline' "send.at:21"
( $at_check_trace;

cat > $MTSTAILOR <<EOT
localname: darkstar
localdomain: example.net
username: mhtester
url: sendmail://$abs_top_builddir/examples/mta
EOT

MTA_DIAG=$HOME/mta.diag
export MTA_DIAG
MTA_DOMAIN=example.net
export MTA_DOMAIN

cat >input <<'_ATEOF'
From: mhtester@example.net
To: gray@example.net
Subject: Send file test
------
Message body
_ATEOF

send ./input || exit $?
sed 's/: Date: .*/: Date: now/' $MTA_DIAG
find . -name ,input

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "ENVELOPE FROM: mhtester@example.net
ENVELOPE TO: <gray@example.net>
   0: X-Mailer: MH (GNU Mailutils 2.99.98)
   1: Date: now
   2: From: mhtester@example.net
   3: To: <gray@example.net>
   4: Subject: Send file test
   5:
   6: Message body
END OF MESSAGE
./,input
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/send.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_156
#AT_START_157
at_fn_group_banner 157 'send.at:48' \
  "send files" "                                     " 21
at_xfail=no
(
  $as_echo "157. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/send.at:48:

cat > \$MTSTAILOR <<EOT
localname: darkstar
localdomain: example.net
username: mhtester
url: sendmail://\$abs_top_builddir/examples/mta
EOT

MTA_DIAG=\$HOME/mta.diag
export MTA_DIAG
MTA_DOMAIN=example.net
export MTA_DOMAIN

cat >input.1 <<'_ATEOF'
From: mhtester@example.net
To: gray@example.net
Subject: Send file test 1
------
Message body 1
_ATEOF


cat >input.2 <<'_ATEOF'
From: mhtester@example.net
To: gray@example.org
Subject: Send file test 2
------
Message body 2
_ATEOF


MTA_APPEND=1
export MTA_APPEND

send ./input.1 ./input.2 || exit \$?
sed 's/: Date: .*/: Date: now/' \$MTA_DIAG
find . -name ',input.[12]' | sort
"
at_fn_check_prepare_notrace 'an embedded newline' "send.at:48"
( $at_check_trace;

cat > $MTSTAILOR <<EOT
localname: darkstar
localdomain: example.net
username: mhtester
url: sendmail://$abs_top_builddir/examples/mta
EOT

MTA_DIAG=$HOME/mta.diag
export MTA_DIAG
MTA_DOMAIN=example.net
export MTA_DOMAIN

cat >input.1 <<'_ATEOF'
From: mhtester@example.net
To: gray@example.net
Subject: Send file test 1
------
Message body 1
_ATEOF


cat >input.2 <<'_ATEOF'
From: mhtester@example.net
To: gray@example.org
Subject: Send file test 2
------
Message body 2
_ATEOF


MTA_APPEND=1
export MTA_APPEND

send ./input.1 ./input.2 || exit $?
sed 's/: Date: .*/: Date: now/' $MTA_DIAG
find . -name ',input.[12]' | sort

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "ENVELOPE FROM: mhtester@example.net
ENVELOPE TO: <gray@example.net>
   0: X-Mailer: MH (GNU Mailutils 2.99.98)
   1: Date: now
   2: From: mhtester@example.net
   3: To: <gray@example.net>
   4: Subject: Send file test 1
   5:
   6: Message body 1
END OF MESSAGE
ENVELOPE FROM: mhtester@example.net
ENVELOPE TO: <gray@example.org>
   0: X-Mailer: MH (GNU Mailutils 2.99.98)
   1: Date: now
   2: From: mhtester@example.net
   3: To: <gray@example.org>
   4: Subject: Send file test 2
   5:
   6: Message body 2
END OF MESSAGE
./,input.1
./,input.2
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/send.at:48"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_157
#AT_START_158
at_fn_group_banner 158 'send.at:98' \
  "send -draft" "                                    " 21
at_xfail=no
(
  $as_echo "158. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/send.at:98:

cat > \$MTSTAILOR <<EOT
localname: darkstar
localdomain: example.net
username: mhtester
url: sendmail://\$abs_top_builddir/examples/mta
EOT

MTA_DIAG=\$HOME/mta.diag
export MTA_DIAG
MTA_DOMAIN=example.net
export MTA_DOMAIN

cat >Mail/draft <<'_ATEOF'
From: mhtester@example.net
To: gray@example.net
Subject: Send file test
------
Message body
_ATEOF

send -draft || exit \$?
sed 's/: Date: .*/: Date: now/' \$MTA_DIAG
echo == Mail/,draft ==
cat Mail/,draft
"
at_fn_check_prepare_notrace 'an embedded newline' "send.at:98"
( $at_check_trace;

cat > $MTSTAILOR <<EOT
localname: darkstar
localdomain: example.net
username: mhtester
url: sendmail://$abs_top_builddir/examples/mta
EOT

MTA_DIAG=$HOME/mta.diag
export MTA_DIAG
MTA_DOMAIN=example.net
export MTA_DOMAIN

cat >Mail/draft <<'_ATEOF'
From: mhtester@example.net
To: gray@example.net
Subject: Send file test
------
Message body
_ATEOF

send -draft || exit $?
sed 's/: Date: .*/: Date: now/' $MTA_DIAG
echo == Mail/,draft ==
cat Mail/,draft

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "ENVELOPE FROM: mhtester@example.net
ENVELOPE TO: <gray@example.net>
   0: X-Mailer: MH (GNU Mailutils 2.99.98)
   1: Date: now
   2: From: mhtester@example.net
   3: To: <gray@example.net>
   4: Subject: Send file test
   5:
   6: Message body
END OF MESSAGE
== Mail/,draft ==
From: mhtester@example.net
To: gray@example.net
Subject: Send file test
------
Message body
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/send.at:98"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_158
#AT_START_159
at_fn_group_banner 159 'send.at:131' \
  "send -draftfolder" "                              " 21
at_xfail=no
(
  $as_echo "159. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/send.at:131:

cat > \$MTSTAILOR <<EOT
localname: darkstar
localdomain: example.net
username: mhtester
url: sendmail://\$abs_top_builddir/examples/mta
EOT

MTA_DIAG=\$HOME/mta.diag
export MTA_DIAG
MTA_DOMAIN=example.net
export MTA_DOMAIN

mkdir Mail/drafts
cat >Mail/drafts/2 <<'_ATEOF'
From: mhtester@example.net
To: gray@example.net
Subject: Draftfolder test

Message body
_ATEOF

echo \"cur: 2\" > Mail/drafts/.mh_sequences

send -draftfolder +drafts || echo \$?
sed 's/: Date: .*/: Date: now/' \$MTA_DIAG
"
at_fn_check_prepare_notrace 'an embedded newline' "send.at:131"
( $at_check_trace;

cat > $MTSTAILOR <<EOT
localname: darkstar
localdomain: example.net
username: mhtester
url: sendmail://$abs_top_builddir/examples/mta
EOT

MTA_DIAG=$HOME/mta.diag
export MTA_DIAG
MTA_DOMAIN=example.net
export MTA_DOMAIN

mkdir Mail/drafts
cat >Mail/drafts/2 <<'_ATEOF'
From: mhtester@example.net
To: gray@example.net
Subject: Draftfolder test

Message body
_ATEOF

echo "cur: 2" > Mail/drafts/.mh_sequences

send -draftfolder +drafts || echo $?
sed 's/: Date: .*/: Date: now/' $MTA_DIAG

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "ENVELOPE FROM: mhtester@example.net
ENVELOPE TO: <gray@example.net>
   0: X-Mailer: MH (GNU Mailutils 2.99.98)
   1: Date: now
   2: From: mhtester@example.net
   3: To: <gray@example.net>
   4: Subject: Draftfolder test
   5:
   6: Message body
END OF MESSAGE
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/send.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_159
#AT_START_160
at_fn_group_banner 160 'send.at:160' \
  "send -draftmessage" "                             " 21
at_xfail=no
(
  $as_echo "160. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/send.at:160:

cat > \$MTSTAILOR <<EOT
localname: darkstar
localdomain: example.net
username: mhtester
url: sendmail://\$abs_top_builddir/examples/mta
EOT

MTA_DIAG=\$HOME/mta.diag
export MTA_DIAG
MTA_DOMAIN=example.net
export MTA_DOMAIN

mkdir Mail/drafts
cat >Mail/drafts/2 <<'_ATEOF'
From: mhtester@example.net
To: gray@example.net
Subject: Draftfolder test

Message body
_ATEOF


cat >Mail/drafts/5 <<'_ATEOF'
From: mhtester@example.net
To: gray@example.org
Subject: Draftmessage test

Message body
_ATEOF

echo \"cur: 2\" > Mail/drafts/.mh_sequences

send -draftfolder +drafts -draftmessage 5 || echo \$?
sed 's/: Date: .*/: Date: now/' \$MTA_DIAG
"
at_fn_check_prepare_notrace 'an embedded newline' "send.at:160"
( $at_check_trace;

cat > $MTSTAILOR <<EOT
localname: darkstar
localdomain: example.net
username: mhtester
url: sendmail://$abs_top_builddir/examples/mta
EOT

MTA_DIAG=$HOME/mta.diag
export MTA_DIAG
MTA_DOMAIN=example.net
export MTA_DOMAIN

mkdir Mail/drafts
cat >Mail/drafts/2 <<'_ATEOF'
From: mhtester@example.net
To: gray@example.net
Subject: Draftfolder test

Message body
_ATEOF


cat >Mail/drafts/5 <<'_ATEOF'
From: mhtester@example.net
To: gray@example.org
Subject: Draftmessage test

Message body
_ATEOF

echo "cur: 2" > Mail/drafts/.mh_sequences

send -draftfolder +drafts -draftmessage 5 || echo $?
sed 's/: Date: .*/: Date: now/' $MTA_DIAG

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "ENVELOPE FROM: mhtester@example.net
ENVELOPE TO: <gray@example.org>
   0: X-Mailer: MH (GNU Mailutils 2.99.98)
   1: Date: now
   2: From: mhtester@example.net
   3: To: <gray@example.org>
   4: Subject: Draftmessage test
   5:
   6: Message body
END OF MESSAGE
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/send.at:160"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_160
#AT_START_161
at_fn_group_banner 161 'sortm.at:22' \
  "sortm -textfield" "                               " 22
at_xfail=no
(
  $as_echo "161. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/sortm.at:22:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo \"cur: 11\" > Mail/teaparty/.mh_sequences
sortm -text From -nodate +teaparty || exit \$?
scan -format '%4(msg)%<(cur)+%| %> %02(mon{date})/%02(mday{date}) %24(friendly{from}) %{subject}'
"
at_fn_check_prepare_notrace 'an embedded newline' "sortm.at:22"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo "cur: 11" > Mail/teaparty/.mh_sequences
sortm -text From -nodate +teaparty || exit $?
scan -format '%4(msg)%<(cur)+%| %> %02(mon{date})/%02(mday{date}) %24(friendly{from}) %{subject}'

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "   1  07/29 Alice                    Re: Invitation
   2  07/29 Alice                    Re: Invitation
   3  07/29 Alice                    Re: Invitation
   4  07/29 Alice                    Re: Personal remark
   5  07/29 Alice                    Re: Riddle
   6  07/29 Alice                    Re: Riddle
   7  07/29 Alice                    Re: Be specific
   8  07/29 Alice                    Re: Watch
   9  07/29 Alice                    Funny watch (was Re: Watch)
  10  07/29 Alice                    Re: Funny watch
  11  07/29 Alice                    Re: Funny watch
  12  07/29 Alice                    Re: Riddle
  13  07/29 Alice                    Re: Riddle
  14  07/29 Alice                    Re: Discussing Time
  15  07/29 Alice                    Re: Discussing Time
  16  07/29 Alice                    Re: Discussing Time
  17  07/29 Alice                    Re: Discussing Time
  18  07/29 Alice                    Re: Discussing Time
  19  07/29 Alice                    Re: Discussing Time
  20  07/29 Alice                    A guess (was Re: Discussing Time)
  21  07/29 Alice                    Re: A guess
  22  07/29 Alice                    Re: A guess
  23  07/29 Alice                    Re: Request for a story
  24  07/29 Alice                    Re: Request for a story
  25  07/29 Alice                    Re: Story
  26  07/29 Alice                    Re: Story
  27  07/29 Alice                    Re: Story
  28  07/29 Alice                    Re: Remark
  29  07/29 Alice                    Personal remark
  30  07/29 Alice                    Re: Story
  31  07/29 Alice                    Re: Story
  32  07/29 Alice                    Re: Story
  33  07/29 Alice                    Re: Story
  34  07/29 Alice                    Re: Story
  35  07/29 Alice                    Re: Story
  36  07/29 Alice                    Re: Story
  37  07/29 Alice                    Re: Story
  38  07/29 Alice                    Thoughts
  39  07/29 Dormouse                 Re: Be specific
  40  07/29 Dormouse                 Re: Remark
  41  07/29 Dormouse                 Re: Discussing Time
  42  07/29 Dormouse                 Re: Request for a story
  43  07/29 Dormouse                 Story (was Re: Request for a story)
  44  07/29 Dormouse                 Re: Story
  45  07/29 Dormouse                 Re: Story
  46  07/29 Dormouse                 Re: Story
  47  07/29 Dormouse                 Re: Story
  48  07/29 Dormouse                 Re: Story
  49  07/29 Dormouse                 Re: Story
  50  07/29 Dormouse                 Re: Story
  51  07/29 Dormouse                 Re: Story
  52  07/29 Dormouse                 Re: Story
  53  07/29 Dormouse                 Re: Story
  54  07/29 Hatter                   Re: Be specific
  55  07/29 Hatter                   Re: Be specific
  56  07/29 Hatter                   Watch
  57  07/29 Hatter                   Re: Watch
  58  07/29 Hatter                   Re: Watch
  59  07/29 Hatter                   Re: Funny watch
  60  07/29 Hatter                   Re: Funny watch
  61  07/29 Hatter                   Remark
  62  07/29 Hatter                   Re: Riddle
  63  07/29 Hatter                   Re: Riddle
  64  07/29 Hatter                   Discussing Time
  65  07/29 Hatter                   Re: Discussing Time
  66  07/29 Hatter                   Re: Discussing Time
  67  07/29 Hatter                   Re: Discussing Time
  68  07/29 Hatter                   Re: Discussing Time
  69  07/29 Hatter                   Re: Discussing Time
  70  07/29 Hatter                   Re: Discussing Time
  71  07/29 Hatter                   Re: Discussing Time
  72  07/29 Hatter                   Re: A guess
  73  07/29 Hatter                   Re: A guess
  74  07/29 Hatter                   Re: Request for a story
  75  07/29 Hatter                   Re: Request for a story
  76  07/29 Hatter                   Re: Remark
  77  07/29 Hatter                   Re: Personal remark
  78  07/29 Hatter                   Let's move
  79  07/29 Hatter                   Re: Story
  80  07/29 Hatter                   Rude remark
  81  07/29 March Hare               Invitation
  82  07/29 March Hare               Re: Invitation
  83  07/29 March Hare               Re: Invitation
  84  07/29 March Hare               Personal remark
  85  07/29 March Hare               Riddle (was Re: Personal remark)
  86+ 07/29 March Hare               Re: Riddle
  87  07/29 March Hare               Be specific (was Re: Riddle)
  88  07/29 March Hare               Re: Be specific
  89  07/29 March Hare               Re: Watch
  90  07/29 March Hare               Re: Watch
  91  07/29 March Hare               Re: Riddle
  92  07/29 March Hare               Thought apart Re: Discussing Time
  93  07/29 March Hare               Request for a story (was Re: A guess)
  94  07/29 March Hare               Re: Request for a story
  95  07/29 March Hare               Remark
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/sortm.at:22"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_161
#AT_START_162
at_fn_group_banner 162 'sortm.at:126' \
  "sortm -datefield" "                               " 22
at_xfail=no
(
  $as_echo "162. $at_setup_line: testing $at_desc ..."
  $at_traceon



test -d Mail || mkdir Mail
HOME=`pwd`
export HOME
MH=$HOME/mh_profile
export MH
cat > $MH <<EOT
Path: $HOME/Mail
mhetcdir: $abs_top_srcdir/mh/etc
moreproc: /bin/cat
EOT
MTSTAILOR=$HOME/mtstailor
export MTSTAILOR
exec <&-

{ set +x
$as_echo "$at_srcdir/sortm.at:126:




cp -r \$abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo \"cur: 11\" > Mail/teaparty/.mh_sequences
sortm -text From -nodate +teaparty || exit \$?
scan -format '%4(msg)%<(cur)+%| %> %02(mon{date})/%02(mday{date}) %24(friendly{from}) %{subject}'
sortm
scan -format '%4(msg)%<(cur)+%| %> %02(mon{date})/%02(mday{date}) %24(friendly{from}) %{subject}'
"
at_fn_check_prepare_notrace 'an embedded newline' "sortm.at:126"
( $at_check_trace;




cp -r $abs_top_srcdir/testsuite/mh/teaparty Mail
if test -e Mail/teaparty; then

# First, set all modes to +w
find Mail/teaparty | xargs chmod +w
# Then, remove executable bit from regular files
find Mail/teaparty -type f | xargs chmod -x

else

# First, set all modes to +w
find Mail | xargs chmod +w
# Then, remove executable bit from regular files
find Mail -type f | xargs chmod -x

fi



echo "cur: 11" > Mail/teaparty/.mh_sequences
sortm -text From -nodate +teaparty || exit $?
scan -format '%4(msg)%<(cur)+%| %> %02(mon{date})/%02(mday{date}) %24(friendly{from}) %{subject}'
sortm
scan -format '%4(msg)%<(cur)+%| %> %02(mon{date})/%02(mday{date}) %24(friendly{from}) %{subject}'

) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "   1  07/29 Alice                    Re: Invitation
   2  07/29 Alice                    Re: Invitation
   3  07/29 Alice                    Re: Invitation
   4  07/29 Alice                    Re: Personal remark
   5  07/29 Alice                    Re: Riddle
   6  07/29 Alice                    Re: Riddle
   7  07/29 Alice                    Re: Be specific
   8  07/29 Alice                    Re: Watch
   9  07/29 Alice                    Funny watch (was Re: Watch)
  10  07/29 Alice                    Re: Funny watch
  11  07/29 Alice                    Re: Funny watch
  12  07/29 Alice                    Re: Riddle
  13  07/29 Alice                    Re: Riddle
  14  07/29 Alice                    Re: Discussing Time
  15  07/29 Alice                    Re: Discussing Time
  16  07/29 Alice                    Re: Discussing Time
  17  07/29 Alice                    Re: Discussing Time
  18  07/29 Alice                    Re: Discussing Time
  19  07/29 Alice                    Re: Discussing Time
  20  07/29 Alice                    A guess (was Re: Discussing Time)
  21  07/29 Alice                    Re: A guess
  22  07/29 Alice                    Re: A guess
  23  07/29 Alice                    Re: Request for a story
  24  07/29 Alice                    Re: Request for a story
  25  07/29 Alice                    Re: Story
  26  07/29 Alice                    Re: Story
  27  07/29 Alice                    Re: Story
  28  07/29 Alice                    Re: Remark
  29  07/29 Alice                    Personal remark
  30  07/29 Alice                    Re: Story
  31  07/29 Alice                    Re: Story
  32  07/29 Alice                    Re: Story
  33  07/29 Alice                    Re: Story
  34  07/29 Alice                    Re: Story
  35  07/29 Alice                    Re: Story
  36  07/29 Alice                    Re: Story
  37  07/29 Alice                    Re: Story
  38  07/29 Alice                    Thoughts
  39  07/29 Dormouse                 Re: Be specific
  40  07/29 Dormouse                 Re: Remark
  41  07/29 Dormouse                 Re: Discussing Time
  42  07/29 Dormouse                 Re: Request for a story
  43  07/29 Dormouse                 Story (was Re: Request for a story)
  44  07/29 Dormouse                 Re: Story
  45  07/29 Dormouse                 Re: Story
  46  07/29 Dormouse                 Re: Story
  47  07/29 Dormouse                 Re: Story
  48  07/29 Dormouse                 Re: Story
  49  07/29 Dormouse                 Re: Story
  50  07/29 Dormouse                 Re: Story
  51  07/29 Dormouse                 Re: Story
  52  07/29 Dormouse                 Re: Story
  53  07/29 Dormouse                 Re: Story
  54  07/29 Hatter                   Re: Be specific
  55  07/29 Hatter                   Re: Be specific
  56  07/29 Hatter                   Watch
  57  07/29 Hatter                   Re: Watch
  58  07/29 Hatter                   Re: Watch
  59  07/29 Hatter                   Re: Funny watch
  60  07/29 Hatter                   Re: Funny watch
  61  07/29 Hatter                   Remark
  62  07/29 Hatter                   Re: Riddle
  63  07/29 Hatter                   Re: Riddle
  64  07/29 Hatter                   Discussing Time
  65  07/29 Hatter                   Re: Discussing Time
  66  07/29 Hatter                   Re: Discussing Time
  67  07/29 Hatter                   Re: Discussing Time
  68  07/29 Hatter                   Re: Discussing Time
  69  07/29 Hatter                   Re: Discussing Time
  70  07/29 Hatter                   Re: Discussing Time
  71  07/29 Hatter                   Re: Discussing Time
  72  07/29 Hatter                   Re: A guess
  73  07/29 Hatter                   Re: A guess
  74  07/29 Hatter                   Re: Request for a story
  75  07/29 Hatter                   Re: Request for a story
  76  07/29 Hatter                   Re: Remark
  77  07/29 Hatter                   Re: Personal remark
  78  07/29 Hatter                   Let's move
  79  07/29 Hatter                   Re: Story
  80  07/29 Hatter                   Rude remark
  81  07/29 March Hare               Invitation
  82  07/29 March Hare               Re: Invitation
  83  07/29 March Hare               Re: Invitation
  84  07/29 March Hare               Personal remark
  85  07/29 March Hare               Riddle (was Re: Personal remark)
  86+ 07/29 March Hare               Re: Riddle
  87  07/29 March Hare               Be specific (was Re: Riddle)
  88  07/29 March Hare               Re: Be specific
  89  07/29 March Hare               Re: Watch
  90  07/29 March Hare               Re: Watch
  91  07/29 March Hare               Re: Riddle
  92  07/29 March Hare               Thought apart Re: Discussing Time
  93  07/29 March Hare               Request for a story (was Re: A guess)
  94  07/29 March Hare               Re: Request for a story
  95  07/29 March Hare               Remark
   1  07/29 March Hare               Invitation
   2  07/29 Alice                    Re: Invitation
   3  07/29 March Hare               Re: Invitation
   4  07/29 Alice                    Re: Invitation
   5  07/29 March Hare               Re: Invitation
   6  07/29 Alice                    Re: Invitation
   7  07/29 March Hare               Personal remark
   8  07/29 Alice                    Re: Personal remark
   9  07/29 March Hare               Riddle (was Re: Personal remark)
  10  07/29 Alice                    Re: Riddle
  11+ 07/29 March Hare               Re: Riddle
  12  07/29 Alice                    Re: Riddle
  13  07/29 March Hare               Be specific (was Re: Riddle)
  14  07/29 Alice                    Re: Be specific
  15  07/29 Hatter                   Re: Be specific
  16  07/29 March Hare               Re: Be specific
  17  07/29 Dormouse                 Re: Be specific
  18  07/29 Hatter                   Re: Be specific
  19  07/29 Hatter                   Watch
  20  07/29 Alice                    Re: Watch
  21  07/29 Hatter                   Re: Watch
  22  07/29 March Hare               Re: Watch
  23  07/29 Hatter                   Re: Watch
  24  07/29 March Hare               Re: Watch
  25  07/29 Alice                    Funny watch (was Re: Watch)
  26  07/29 Hatter                   Re: Funny watch
  27  07/29 Alice                    Re: Funny watch
  28  07/29 Hatter                   Re: Funny watch
  29  07/29 Alice                    Re: Funny watch
  30  07/29 Hatter                   Remark
  31  07/29 Dormouse                 Re: Remark
  32  07/29 Hatter                   Re: Riddle
  33  07/29 Alice                    Re: Riddle
  34  07/29 Hatter                   Re: Riddle
  35  07/29 March Hare               Re: Riddle
  36  07/29 Alice                    Re: Riddle
  37  07/29 Hatter                   Discussing Time
  38  07/29 Alice                    Re: Discussing Time
  39  07/29 Hatter                   Re: Discussing Time
  40  07/29 Alice                    Re: Discussing Time
  41  07/29 Hatter                   Re: Discussing Time
  42  07/29 March Hare               Thought apart Re: Discussing Time
  43  07/29 Alice                    Re: Discussing Time
  44  07/29 Hatter                   Re: Discussing Time
  45  07/29 Alice                    Re: Discussing Time
  46  07/29 Hatter                   Re: Discussing Time
  47  07/29 Alice                    Re: Discussing Time
  48  07/29 Hatter                   Re: Discussing Time
  49  07/29 Dormouse                 Re: Discussing Time
  50  07/29 Hatter                   Re: Discussing Time
  51  07/29 Alice                    Re: Discussing Time
  52  07/29 Hatter                   Re: Discussing Time
  53  07/29 Alice                    A guess (was Re: Discussing Time)
  54  07/29 Hatter                   Re: A guess
  55  07/29 Alice                    Re: A guess
  56  07/29 Hatter                   Re: A guess
  57  07/29 Alice                    Re: A guess
  58  07/29 March Hare               Request for a story (was Re: A guess)
  59  07/29 Alice                    Re: Request for a story
  60  07/29 Hatter                   Re: Request for a story
  61  07/29 Dormouse                 Re: Request for a story
  62  07/29 March Hare               Re: Request for a story
  63  07/29 Alice                    Re: Request for a story
  64  07/29 Hatter                   Re: Request for a story
  65  07/29 Dormouse                 Story (was Re: Request for a story)
  66  07/29 Alice                    Re: Story
  67  07/29 Dormouse                 Re: Story
  68  07/29 Alice                    Re: Story
  69  07/29 Dormouse                 Re: Story
  70  07/29 Alice                    Re: Story
  71  07/29 March Hare               Remark
  72  07/29 Alice                    Re: Remark
  73  07/29 Hatter                   Re: Remark
  74  07/29 Alice                    Personal remark
  75  07/29 Hatter                   Re: Personal remark
  76  07/29 Alice                    Re: Story
  77  07/29 Dormouse                 Re: Story
  78  07/29 Alice                    Re: Story
  79  07/29 Dormouse                 Re: Story
  80  07/29 Alice                    Re: Story
  81  07/29 Dormouse                 Re: Story
  82  07/29 Alice                    Re: Story
  83  07/29 Dormouse                 Re: Story
  84  07/29 Hatter                   Let's move
  85  07/29 Alice                    Re: Story
  86  07/29 Hatter                   Re: Story
  87  07/29 Alice                    Re: Story
  88  07/29 Dormouse                 Re: Story
  89  07/29 Dormouse                 Re: Story
  90  07/29 Alice                    Re: Story
  91  07/29 Dormouse                 Re: Story
  92  07/29 Dormouse                 Re: Story
  93  07/29 Alice                    Re: Story
  94  07/29 Hatter                   Rude remark
  95  07/29 Alice                    Thoughts
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/sortm.at:126"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_162
