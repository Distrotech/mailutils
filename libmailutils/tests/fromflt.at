# This file is part of GNU Mailutils. -*- Autotest -*-
# Copyright (C) 2007-2012 Free Software Foundation, Inc.
#
# GNU Mailutils is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3, or (at
# your option) any later version.
#
# GNU Mailutils is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Mailutils.  If not, see <http://www.gnu.org/licenses/>.

# -------------------------------------------
# Data for 'From' filter tests.
# -------------------------------------------

m4_define([from_plain_text],[From this time on
from that source
 From stdin
and
From them
])

m4_define([from_encoded_text],[>From this time on
from that source
 From stdin
and
>From them
])

# -------------------------------------------
# Test 'From' encoding
# -------------------------------------------

# Test read mode

AT_SETUP([from filter encoding (read)])
AT_KEYWORDS([from frome fromer encode])

AT_CHECK([
AT_DATA([input],from_plain_text)
fltst from encode read < input
],
[0],
[from_encoded_text])

AT_CLEANUP

# The same, in write mode

AT_SETUP([from filter encoding (write)])
AT_KEYWORDS([from frome fromew encode])

AT_CHECK([
AT_DATA([input],from_plain_text)
fltst from encode write < input
],
[0],
[from_encoded_text])

AT_CLEANUP

# -------------------------------------------
# Test '>From' decoding
# -------------------------------------------

AT_SETUP([from filter decoding (read)])
AT_KEYWORDS([from fromd fromdr decode])

AT_CHECK([
AT_DATA([input],from_encoded_text)
fltst from decode read < input
],
[0],
[from_plain_text])

AT_CLEANUP

# The same, in write mode

AT_SETUP([from filter decoding (write)])
AT_KEYWORDS([from fromd fromdw decode])

AT_CHECK([
AT_DATA([input],from_encoded_text)
fltst from decode write < input
],
[0],
[from_plain_text])

AT_CLEANUP
