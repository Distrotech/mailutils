
* Documentation

* mailbox 

** Generic search interface

** Maildir support

** iterator_t is very ineffective. Traversing the list from iterator_first()
till iterator_is_done() takes O(n*(n+1)/2) time units, where n is
number of elements in the list. To reduce this to O(n), iterator_t
must keep the address of the last visited item in the list.

** Locking

*** Implement a read/write locker_lock() flag so that when MU_LOCKER_WRONLY
is set in the locker flags, only write locks actually lock the file,
read locks don't do anything.

*** implement mailbox_lock() and mailbox_unlock() shortcut functions.

*** what kind of locking should mh use? See FIXME in mbx_mh.c

*** why does mimetest fail on a symlink, but suceed on a dotlocked file?

*** implement a force unlock mode... so that when a mailbox
is closed or destroyed it can make sure that the lock
is definitely gone.

** argcv.c should unescape strings as well as unquote them

** write a fnmatch() that doesn't respect []

** select needed

** mailboxes don't remember whether or not they've been opened

** print errors to a debug object, by default

** does IMAP do an EXAMINE instead of a select if the mailbox is being
opened readonly? Does list return whether a mailbox is readonly?
Check against CMUs anon server, it is a read-only mailbox.

** mu_cpystr - the size_t* size outputs only give strlen(), not the
actual length?

** need code to find a "real" envelope from... an actual email address
that DSNs can be sent to.

** need to be able to map some addresses (like mail to "root") to a
user for the box, a la nullmailer, perhaps

** mailer_t: the SMTP mailer isn't as fully implemented as the sendmail
mailer.

** make the smtp mailer calls usable standalone, as well as url based,
and use them in mail.remote.

** header_get_value() returns the newline?

** implement a header_field_unfold()?

** pipe_open_stream() - implemented with popen()

** support AUTH=anonymous (imap://cyrus.andrew.cmu.edu/archive.info-cyrus)

** the POP mailer must use the CAPA command to determine any protocol
   extension; support for the STLS would be great.

** the IMAP mailer must use the CAPABILITY command... likewise;
   support the STARTTLS.

** support POP3S and IMAPS mailers (ports 995/993).
NOTE: Do we really need it? Pop3d and imap4d already use STLS/STARTTLS.

** filter_trans needs readline method.

* pop3

** pop3d_readline - should this use select(), avoid the race condition,
and touch the lockfile in time intervals smaller than MU_LOCKER_EXPIRE_TIME?

* imap4d

** Check interaction with various imap clients. Currently tested with:
mail (from mailutils itself), mutt, pine, netscape, mozilla.

** Better support of multi-access mailbox

** implement charsets in search: 1 SEARCH CHARSET ISO-8859-2 TEXT ...

** implement AUTHENTICATE KERBEROS_V4 and SKEY and CRAM-MD5 and SRP?

* mail

** Add support for /etc/mailcap

* Mailcap API

The framework is implemented. Needs extensive testing.

* Mime.types API

* libmuauth

** First argument to mu_auth_fp (and second one to mu_auth_runlist) should
be struct mu_auth_data ** instead of void *.

* examples

** unify the mbox-* and mimetest examples with messages, it would be nice
to have a general purpose tool

* mh -- see mh/TODO

* sieve

** Implement boolean shortcut evaluation for `allof' and `anyof'

** uid isn't good to identify messages, use message-id?

** run as daemon, sieveing mail on arrival (need interface for notification
of message arrival, this is supported by imap, but we'll have to fake
for pop and local spools my polling, why can't you select() on a unix
file?)

NOTE: Do we need it? mail.local already provides this functionality.

* utilities

** forward only MTA, nullmailer like, but accepting SMTP on 25 from localhost

** utility to move all mail from one mailbox to another, like mbox to
IMAP, preserving all flags that are possible. can sieve do this, or do
I need a mbox-copy() utility?

** file viewer, based on the mimetypes api. I want to do a "v foo.blah",
have it look up .blah in mime.types, and do the action spec'ed in mailcap.

** all

* add nightly build

* add more features

* optimize everything

* test everything

* util_strcasestr() from mail/util.c provides the same functionality
as i_ascii_casemap_contains() from libsieve/comparator. Merge both
versions.


Local variables:
mode: outline
paragraph-separate: "[ 	]*$"
end:
