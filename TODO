+ --> fixed/done
- --> pending
= --> on hold
* --> in progress

[docs]

[mailbox or mailbox2]

IMPORTANT:
  There is currently a rewrite of the mailbox called mailbox2 to address
  some of the flaws of the old version.

- generalized search interface

[mail.local]

- can it append to an imap mailbox?

[pop3]

- SSL support

- pop3d_readline - should this use select(), avoid the race condition,
  and touch the lockfile in time intervals smaller than
  MU_LOCKER_EXPIRE_TIME?

[imap4d]

- support of mailspools in user home directory, particularly when
  they are in maildir format (I think qmail does this).

- Check interaction with various imap clients. Currently tested with:
  mail (from mailutils itself), mutt, pine, netscape, mozilla.

- Better support of multi-access mailbox

- implement charsets in search: 1 SEARCH CHARSET ISO-8859-2 TEXT ...

- implement AUTHENTICATE KERBEROS_V4 and SKEY and CRAM-MD5 and SRP?

[mail]

- Add support for /etc/mailcap.

[mailbox]

- iterator_t is very ineffective. Traversing the list from iterator_first()
  till iterator_is_done() takes O(n*(n+1)/2), where n is number of elements
  in the list. To reduce this to O(n), iterator_t must keep the address
  of the last visited item in the list.

- locking:

  - implement a read/write locker_lock() flag so that when MU_LOCKER_WRONLY
    is set in the locker flags, only write locks actually lock the file,
    read locks don't do anything.

  - implement mailbox_lock() and mailbox_unlock() shortcut functions.

  - what kind of locking should mh use? See FIXME in mbx_mh.c

  - why does mimetest fail on a symlink, but suceed on a dotlocked file?

  - implement a force unlock mode... so that when a mailbox
    is closed or destroyed it can make sure that the lock
    is definitely gone.

- lib/argcv.c should unescape strings as well as unquote them

- write a fnmatch() that doesn't respect []

- select needed

- mailboxes don't remember whether or not they've been opened

- print errors to a debug object, by default

- does IMAP do an EXAMINE instead of a select if the mailbox is being
  opened readonly? Does list return whether a mailbox is readonly?
  Check against CMUs anon server, it is a read-only mailbox.

- mu_cpystr - the size_t* size outputs only give strlen(), not the
  actual length?

- finish mh mailbox support (they don't have a folder yet)

- need code to find a "real" envelope from... an actual email address
  that DSNs can be sent to.

- need to be able to map some addresses (like mail to "root") to a
  user for the box, a la nullmailer, perhaps

- mailer_t: the SMTP mailer isn't as fully implemented as the sendmail
  mailer.

- make the smtp mailer calls useable standalone, as well as url based,
  and use them in mail.remote.

- header_get_value() returns the newline?

- implement a header_field_unfold()?

- pipe_open_stream() - implemented with popen()

+ Configuration API

- Mailcap API

- Mime.types API

+ A ticket file format allowing specification of different authentication
  information for different mailboxes.

- imap4 client login referals

- imap4 client mailbox referals

- Maildir mailbox support

+ support AUTH=anonymous (imap://cyrus.andrew.cmu.edu/archive.info-cyrus)

[libmuauth]

- First argument to mu_auth_fp (and second one to mu_auth_runlist) should
  be struct mu_auth_data ** instead of void *.

[examples]

- unify the mbox-* and mimetest examples with messages, it would be nice
  to have a general purpose tool

[mh]

- see mh/TODO

[sieve]

- Implement boolean shortcut evaluation for `allof' and `anyof'

- uid isn't good to identify messages, use message-id?

- run as daemon, sieveing mail on arrival (need interface for notification
  of message arrival, this is supported by imap, but we'll have to fake
  for pop and local spools my polling, why can't you select() on a unix
  file?)
  Do we need it? mail.local already provides this functionality.

[utilities]

- forward only MTA, nullmailer like, but accepting SMTP on 25 from localhost

- utility to move all mail from one mailbox to another, like mbox to
  IMAP, preserving all flags that are possible. can sieve do this, or do
  I need a mbox-copy() utility?

- file viewer, based on the mimetypes api. I want to do a "v foo.blah",
  have it look up .blah in mime.types, and do the action spec'ed in mailcap.

[all]

- add nightly build

- add more features

- optimize everything

- test everything

+ add imap server code (JB && Shaleh Oct 11/99)

- util_strcasestr() from mail/util.c provides the same functionality
  as i_ascii_casemap_contains() from libsieve/comparator. Merge both
  versions.